{
  "title": "int main（int argc，char*argv[]）",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><b><span lang=\"EN-US\" style=\"font-size: 26pt; font-family: 'Hiragino Sans GB W3';\">int main</span></b><b><span style=\"font-size: 26pt; font-family: 'Hiragino Sans GB W3';\">（<span lang=\"EN-US\">int argc</span>，<span lang=\"EN-US\">char*argv[]</span>）</span></b><b><span lang=\"EN-US\" style=\"font-size: 16pt;\">&nbsp;&nbsp;</span></b><b><span lang=\"EN-US\" style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\"><o:p></o:p></span></b></p><p class=\"MsoNormal\" align=\"left\"><span lang=\"EN-US\" style=\"font-family: 'Hiragino Sans GB W3'; color: rgb(100, 100, 100);\">2008-12-25 15:11:03|</span><span lang=\"EN-US\" style=\"color: rgb(100, 100, 100);\">&nbsp;&nbsp;</span><span style=\"font-family: 'Hiragino Sans GB W3'; color: rgb(100, 100, 100);\">分类：&nbsp;<span lang=\"EN-US\"><a href=\"http://xylvhp.blog.163.com/blog/#m=0&amp;t=1&amp;c=fks_087066080081086069081084085095087087080065087080087071\"><span style=\"color: rgb(159, 162, 29); text-decoration: none;\">C++</span></a><o:p></o:p></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><span lang=\"EN-US\" style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">main</span><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">函数可以带参数，这个参数可以认为是<span lang=\"EN-US\">&nbsp;main</span>函数的形式参数。Ｃ语言规定<span lang=\"EN-US\">main</span>函数的参数只能有两个， 习惯上这两个参数写为<span lang=\"EN-US\">argc</span>和<span lang=\"EN-US\">argv</span>。因此，<span lang=\"EN-US\">main</span>函数的函数头可写为：<span lang=\"EN-US\">&nbsp;main (argc,argv)</span>。Ｃ语言还规定<span lang=\"EN-US\">argc(</span>第一个形参<span lang=\"EN-US\">)</span>必须是整型变量，<span lang=\"EN-US\">argv(&nbsp;</span>第二个形参<span lang=\"EN-US\">)</span>必须是指向字符串的指针数组。加上形参说明后，<span lang=\"EN-US\">main</span>函数的函数头应写为：<span lang=\"EN-US\">&nbsp;main (argc,argv) int argv; char *argv[];<o:p></o:p></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">或写成：<span lang=\"EN-US\">&nbsp;main (int argc,char *argv[])&nbsp;</span>　　由于<span lang=\"EN-US\">main</span>函数不能被其它函数调用， 因此不可能在程序内部取得实际值。那么，在何处把实参值赋予<span lang=\"EN-US\">main</span>函数的形参呢<span lang=\"EN-US\">?&nbsp;</span>实际上<span lang=\"EN-US\">,main</span>函数的参数值是从操作系统命令行上获得的。当我们要运行一个可执行文件时，在<span lang=\"EN-US\">DOS</span>提示符下键入文件名，再输入实际参数即可把这些实参传送到<span lang=\"EN-US\">main</span>的形参中去。 　　<span lang=\"EN-US\">DOS</span>提示符下命令行的一般形式为：<span lang=\"EN-US\">&nbsp;C:\\&gt;</span>可执行文件名 参数 参数……<span lang=\"EN-US\">;&nbsp;</span>但是应该特别注意的是，<span lang=\"EN-US\">main&nbsp;</span>的两个形参和命令行中的参数在位置上不是一一对应的。因为<span lang=\"EN-US\">,main</span>的形参只有二个，而命令行中的参数个数原则上未加限制。<span lang=\"EN-US\">argc</span>参数表示了命令行中参数的个数<span lang=\"EN-US\">(</span>注意：文件名本身也算一个参数<span lang=\"EN-US\">)</span>，<span lang=\"EN-US\">argc</span>的值是在输入命令行时由系统按实际参数的个数自动赋予的。例如有命令行为：<span lang=\"EN-US\">&nbsp;C:\\&gt;E6 24 BASIC dbase FORTRAN</span>由于文件名<span lang=\"EN-US\">E6 24</span>本身也算一个参数，所以共有<span lang=\"EN-US\">4</span>个参数，因此<span lang=\"EN-US\">argc</span>取得的值为<span lang=\"EN-US\">4</span>。<span lang=\"EN-US\">argv</span>参数是字符串指针数组，其各元素值为命令行中各字符串<span lang=\"EN-US\">(</span>参数均按字符串处理<span lang=\"EN-US\">)</span>的首地址。 指针数组的长度即为参数个数。数组元素初值由系统自动赋予。<span lang=\"EN-US\">&nbsp;main(int argc,char *argv){ while(argc--&gt;1) printf(\"%s\\n\",*++argv); }&nbsp;</span>本例是显示命令行中输入的参数如果上例的可执行文件名为<span lang=\"EN-US\">e24.exe</span>，存放在<span lang=\"EN-US\">A</span>驱动器的盘内。 因此输入的命令行为：<span lang=\"EN-US\">&nbsp;C:\\&gt;a:e24 BASIC dBASE FORTRAN&nbsp;</span>则运行结果为：<span lang=\"EN-US\">&nbsp;BASIC dBASE FORTRAN&nbsp;</span>　　该行共有<span lang=\"EN-US\">4</span>个参数，执行<span lang=\"EN-US\">main</span>时，<span lang=\"EN-US\">argc</span>的初值即为<span lang=\"EN-US\">4</span>。<span lang=\"EN-US\">argv</span>的<span lang=\"EN-US\">4</span>个元素分为<span lang=\"EN-US\">4</span>个字符串的首地址。执行<span lang=\"EN-US\">while</span>语句，每循环一次<span lang=\"EN-US\">&nbsp;argv</span>值减<span lang=\"EN-US\">1</span>，当<span lang=\"EN-US\">argv</span>等于<span lang=\"EN-US\">1</span>时停止循环，共循环三次， 因此共可输出三个参数。在<span lang=\"EN-US\">printf</span>函数中，由于打印项<span lang=\"EN-US\">*++argv</span>是先加<span lang=\"EN-US\">1</span>再打印， 故第一次打印的是<span lang=\"EN-US\">argv[1]</span>所指的字符串<span lang=\"EN-US\">BASIC</span>。第二、 三次循环分别打印后二个字符串。而参数<span lang=\"EN-US\">e24</span>是文件名，不必输出。<span lang=\"EN-US\"><o:p></o:p></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">两个参数是给读入命令行参数的<span lang=\"EN-US\">&nbsp;argc</span>表示参数个数，包括执行文件名<span lang=\"EN-US\">&nbsp;argv</span>存放参数，包括执行文件名<span lang=\"EN-US\"><o:p></o:p></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">　　<span lang=\"EN-US\">int main</span>（<span lang=\"EN-US\">int argc</span>，<span lang=\"EN-US\">char*argv[]</span>） 如果你直接运行的时候<span lang=\"EN-US\">,</span>默认的<span lang=\"EN-US\">argc</span>是为<span lang=\"EN-US\">1,</span>而<span lang=\"EN-US\">argv[0]=</span>该<span lang=\"EN-US\">.exe</span>文件的物理地址 如果你想要多个参数<span lang=\"EN-US\">,</span>你可以在命令项下运行<span lang=\"EN-US\">:</span>举个例子<span lang=\"EN-US\">: int main</span>（<span lang=\"EN-US\">int argc</span>，<span lang=\"EN-US\">char*argv[]</span>）<span lang=\"EN-US\">&nbsp;{ for(int i=0;i&lt;argc;i++) cout&lt;&lt;argv[i]&lt;&lt;endl1; }&nbsp;</span>假如说你生成的文件在<span lang=\"EN-US\">c:\\</span>下的<span lang=\"EN-US\">123.exe;&nbsp;</span>那么你在命令行下输入<span lang=\"EN-US\">c:\\123 aaaa bbbb cccc&nbsp;</span>那么程序最终会输出<span lang=\"EN-US\">&nbsp;c:\\123.exe aaaa bbbb cccc&nbsp;</span>这<span lang=\"EN-US\">4</span>个字符串<span lang=\"EN-US\">&lt;</span>这几个都是命令行传给<span lang=\"EN-US\">main</span>函数的<span lang=\"EN-US\">&gt;&nbsp;</span>如果你编译之后直接点运行那么就只会输出<span lang=\"EN-US\">&nbsp;c:\\123.exe&nbsp;<o:p></o:p></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin-bottom: 10pt;\"><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">输入参数的方法：<span lang=\"EN-US\"><o:p></o:p></span></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">project-&gt;setting-&gt;debug,</span><span style=\"font-size: 16pt; font-family: 'Hiragino Sans GB W3';\">在<span lang=\"EN-US\">program arguments</span>里输入参数就<span lang=\"EN-US\">ok&nbsp;</span>或是在运行框中输入：<span lang=\"EN-US\">appname&nbsp;</span>参数<span lang=\"EN-US\">1&nbsp;</span>参数<span lang=\"EN-US\">2 ...</span></span><span lang=\"EN-US\"><o:p></o:p></span></p></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
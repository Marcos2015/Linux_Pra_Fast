{
  "title": "C语言利用字符串数组读取字符串的误区",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"position: relative;\"><div id=\"article_content\" class=\"article_content\" style=\"margin: 20px 0px 0px; line-height: 26px;\"><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">最近碰到一个很奇怪的问题，想想关了电脑也要再开机记录下来</p><div class=\"dp-highlighter bg_cpp\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 700.90625px; overflow: auto; padding-top: 1px; color: rgb(51, 51, 51); margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[cpp]</b>&nbsp;<a href=\"http://blog.csdn.net/woshishen979/article/details/23224141#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/woshishen979/article/details/23224141#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/282200\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/282200/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 580px; top: 463px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_1\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_1\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=1&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" class=\"dp-cpp\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;</span></li></ol></div><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">主要代码如下：</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"></p><div class=\"dp-highlighter bg_cpp\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 700.90625px; overflow: auto; padding-top: 1px; color: rgb(51, 51, 51); margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[cpp]</b>&nbsp;<a href=\"http://blog.csdn.net/woshishen979/article/details/23224141#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/woshishen979/article/details/23224141#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/282200\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/282200/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 580px; top: 579px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_2\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_2\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=2&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" class=\"dp-cpp\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;main()&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">{&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">char</span><span style=\"margin: 0px; padding: 0px; border: none;\">*&nbsp;key[2];&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue;\">\"%s\"</span><span style=\"margin: 0px; padding: 0px; border: none;\">,&nbsp;&amp;key[0]);&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;scanf(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue;\">\"%s\"</span><span style=\"margin: 0px; padding: 0px; border: none;\">,&nbsp;&amp;key[1]);&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue;\">\"%s&nbsp;&nbsp;&nbsp;\\n\"</span><span style=\"margin: 0px; padding: 0px; border: none;\">,&nbsp;&amp;key[0]);&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold;\">return</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;0;&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">}&nbsp;&nbsp;</span></li></ol></div><br style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"><span style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">要从控制台中读取输入的字符串，定义了一个char*类型的数组，结果出问题了。</span><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"></p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"></p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">当输入： &nbsp;whos &nbsp; &nbsp; who<span style=\"white-space: pre;\"> </span>输出：whoswho</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">当输入： wwwwww &nbsp; dddddd<span style=\"white-space: pre;\"> </span>输出：wwwwdddddd</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"><br></p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">有多纠结我就不说了，和同学讨论了好久得出结论（可能有误）</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"><strong>char* 在C语言中占四个字节</strong>，因为定义的key是个数组，在声明时为它分配一块<strong>连续</strong>的内存，于是<strong>数组key的每个单元都被固定成四个字节</strong>。</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">对于第一种情况，whos正好占了四个字节，最后的终结符（记得是\\0）越界放到了key[1]里，随后被写入key[1]内存地址的数据覆盖掉了，于是系统不知道key[0]到什么地方结束，一直往后读，直到遇到了key[1]的终结符，所以把key[1]一块输出了。</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">对于第二种情况也类似，6个w放到4个字节里放不下，只能存放前四个，后面两个越界放到了key[1]里，随后被写入key[1]内存地址的数据覆盖掉了。虽然后面的6个d也超出了范围，但是这个数组只有两个长度的大小，key[i]只是记录了首地址，并没有记录结束位置的地址，于是这6个d把为这个数组分配的8个字节内存的后面一部分内存给占用了，所以最后一个字符串完整的输出了。</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"><br></p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">假设还是定义key的长度为2，但是只读取了一个字符串，不管它长度多大，都能完整输出，因为它越界的部分没有被覆盖掉。</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\">因此，对于这种输入的字符串大于4个字节的情况，只有输入的最后一个字符串能完整的输出。</p><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51);\"><br></p></div></div>"
    }
  ]
}
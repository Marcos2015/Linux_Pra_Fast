{
  "title": "12个有趣的C语言面试题",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"summary\" style=\"margin: 0px 0px 1.5em; padding: 5px 10px; list-style: none; background-color: rgb(247, 247, 247); color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><strong>摘要：</strong>12个C语言面试题，涉及指针、进程、运算、结构体、函数、内存，看看你能做出几个！</div><div class=\"con news_content\" style=\"margin: 0px 0px 30px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>1.gets()函数</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：请找出下面代码里的问题：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;buff[10];&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;memset(buff,0,<span class=\"keyword\">sizeof</span>(buff));&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;gets(buff);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;The&nbsp;buffer&nbsp;entered&nbsp;is&nbsp;[%s]\\n\"</span>,buff);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：上面代码里的问题在于函数gets()的使用，这个函数从stdin接收一个字符串而不检查它所复制的缓存的容积，这可能会导致缓存溢出。这里推荐使用标准函数fgets()代替。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>2.strcpy()函数</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面是一个简单的密码保护功能，你能在不知道密码的情况下将其破解吗？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"datatypes\">int</span>&nbsp;argc,&nbsp;<span class=\"datatypes\">char</span>&nbsp;*argv[])&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;flag&nbsp;=&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;passwd[10];&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;memset(passwd,0,<span class=\"keyword\">sizeof</span>(passwd));&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;strcpy(passwd,&nbsp;argv[1]);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(0&nbsp;==&nbsp;strcmp(<span class=\"string\">\"LinuxGeek\"</span>,&nbsp;passwd))&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;1;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(flag)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Password&nbsp;cracked&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Incorrect&nbsp;passwd&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：破解上述加密的关键在于利用攻破strcpy()函数的漏洞。所以用户在向“passwd”缓存输入随机密码的时候并没有提前检查“passwd”的容量是否足够。所以，如果用户输入一个足够造成缓存溢出并且重写“flag”变量默认值所存在位置的内存的长“密码”，即使这个密码无法通过验证，flag验证位也变成了非零，也就可以获得被保护的数据了。例如：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-xml\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">$&nbsp;./psswd&nbsp;aaaaaaaaaaaaa&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">Password&nbsp;cracked&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">虽然上面的密码并不正确，但我们仍然可以通过缓存溢出绕开密码安全保护。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">要避免这样的问题，建议使用 strncpy()函数。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">作者注：最近的编译器会在内部检测栈溢出的可能，所以这样往栈里存储变量很难出现栈溢出。在我的gcc里默认就是这样，所以我不得不使用编译命令‘-fno-stack-protector’来实现上述方案。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>3.main()的返回类型</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面的代码能 编译通过吗？如果能，它有什么潜在的问题吗？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"keyword\">void</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;*ptr&nbsp;=&nbsp;(<span class=\"datatypes\">char</span>*)malloc(10);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(NULL&nbsp;==&nbsp;ptr)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Malloc&nbsp;failed&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0);\">//&nbsp;Do&nbsp;some&nbsp;processing</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(ptr);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：因为main()方法的返回类型，这段代码的错误在大多数编译器里会被当作警告。main()的返回类型应该是“int”而不是“void”。因为“int”返回类型会让程序返回状态值。这点非常重要，特别当程序是作为依赖于程序成功运行的脚本的一部分运行时。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>4.内存泄露</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面的代码会导致内存泄漏吗？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"keyword\">void</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;*ptr&nbsp;=&nbsp;(<span class=\"datatypes\">char</span>*)malloc(10);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(NULL&nbsp;==&nbsp;ptr)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Malloc&nbsp;failed&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0);\">//&nbsp;Do&nbsp;some&nbsp;processing</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：尽管上面的代码并没有释放分配给“ptr”的内存，但并不会在程序退出后导致内存泄漏。在程序结束后，所有这个程序分配的内存都会自动被处理掉。但如果上面的代码处于一个“while循环”中，那将会导致严重的内存泄漏问题！</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">提示：如果你想知道更多关于内存泄漏的知识和内存泄漏检测工具，可以来看看我们在Valgrind上的文章。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>5.free()函数</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面的程序会在用户输入'freeze'的时候出问题，而'zebra'则不会，为什么？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"datatypes\">int</span>&nbsp;argc,&nbsp;<span class=\"datatypes\">char</span>&nbsp;*argv[])&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;*ptr&nbsp;=&nbsp;(<span class=\"datatypes\">char</span>*)malloc(10);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(NULL&nbsp;==&nbsp;ptr)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Malloc&nbsp;failed&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;-1;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;<span class=\"keyword\">if</span>(argc&nbsp;==&nbsp;1)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Usage&nbsp;&nbsp;\\n\"</span>);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(ptr,&nbsp;0,&nbsp;10);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strncpy(ptr,&nbsp;argv[1],&nbsp;9);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">while</span>(*ptr&nbsp;!=&nbsp;<span class=\"string\">'z'</span>)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(*ptr&nbsp;==&nbsp;<span class=\"string\">''</span>)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">break</span>;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">else</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ptr++;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(*ptr&nbsp;==&nbsp;<span class=\"string\">'z'</span>)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;String&nbsp;contains&nbsp;'z'\\n\"</span>);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0);\">//&nbsp;Do&nbsp;some&nbsp;more&nbsp;processing</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(ptr);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：这里的问题在于，代码会（通过增加“ptr”）修改while循环里“ptr”存储的地址。当输入“zebra”时，while循环会在执行前被终止，因此传给free()的变量就是传给malloc()的地址。但在“freeze”时，“ptr”存储的地址会在while循环里被修改，因此导致传给free()的地址出错，也就导致了seg-fault或者崩溃。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>6.使用_exit退出</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：在下面的代码中，atexit()并没有被调用，为什么？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"keyword\">void</span>&nbsp;func(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Cleanup&nbsp;function&nbsp;called&nbsp;\\n\"</span>);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">}&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;atexit(func);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">for</span>(;i&lt;0xffffff;i++);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;_exit(0);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">这是因为_exit()函数的使用，该函数并没有调用atexit()等函数清理。如果使用atexit()就应当使用exit()或者“return”与之相配合。</p><div><div class=\"con news_content\" style=\"margin: 0px 0px 30px; padding: 0px; list-style: none;\"><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>7.void*和C结构体</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：你能设计一个能接受任何类型的参数并返回interger（整数）结果的函数吗？</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：如下：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;func(<span class=\"keyword\">void</span>&nbsp;*ptr)&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">如果这个函数的参数超过一个，那么这个函数应该由一个结构体来调用，这个结构体可以由需要传递参数来填充。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>8.*和++操作</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面的操作会输出什么？为什么？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;*ptr&nbsp;=&nbsp;<span class=\"string\">\"Linux\"</span>;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;[%c]&nbsp;\\n\"</span>,*ptr++);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;[%c]&nbsp;\\n\"</span>,*ptr);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：输出结果应该是这样：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-xml\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">[L]&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">[i]&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">因为“++”和“*”的优先权一样，所以“*ptr++”相当于“*(ptr++)”。即应该先执行ptr++，然后才是*ptr，所以操作结果是“L”。第二个结果是“i”。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>9.问：修改代码片段（或者只读代码）</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面的代码段有错，你能指出来吗？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;*ptr&nbsp;=&nbsp;<span class=\"string\">\"Linux\"</span>;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;*ptr&nbsp;=&nbsp;<span class=\"string\">'T'</span>;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;[%s]&nbsp;\\n\"</span>,&nbsp;ptr);&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：这是因为，通过*ptr = ‘T’，会改变内存中代码段（只读代码）“Linux”的第一个字母。这个操作是无效的，因此会造成seg-fault或者崩溃。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>10.会改变自己名字的进程</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：你能写出一个在运行时改变自己进程名的程序吗？</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：参见下面这段代码：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"datatypes\">int</span>&nbsp;argc,&nbsp;<span class=\"datatypes\">char</span>&nbsp;*argv[])&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;buff[100];&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;memset(buff,0,<span class=\"keyword\">sizeof</span>(buff));&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;strncpy(buff,&nbsp;argv[0],&nbsp;<span class=\"keyword\">sizeof</span>(buff));&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;memset(argv[0],0,strlen(buff));&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;strncpy(argv[0],&nbsp;<span class=\"string\">\"NewName\"</span>,&nbsp;7);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0);\">//&nbsp;Simulate&nbsp;a&nbsp;wait.&nbsp;Check&nbsp;the&nbsp;process</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0);\">//&nbsp;name&nbsp;at&nbsp;this&nbsp;point.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">for</span>(;i&lt;0xffffffff;i++);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>11.返回本地变量的地址</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面代码有问题吗？如果有，该怎么修改？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>*&nbsp;inc(<span class=\"datatypes\">int</span>&nbsp;val)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;a&nbsp;=&nbsp;val;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;a++;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;&amp;a;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">{&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;a&nbsp;=&nbsp;10;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;*val&nbsp;=&nbsp;inc(a);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;Incremented&nbsp;value&nbsp;is&nbsp;equal&nbsp;to&nbsp;[%d]&nbsp;\\n\"</span>,&nbsp;*val);&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：尽管上面的程序有时候能够正常运行，但是在“inc()”中存在严重的漏洞。这个函数返回本地变量的地址。因为本地变量的生命周期就是“inc()”的生命周期，所以在inc结束后，使用本地变量会发生不好的结果。这可以通过将main()中变量“a”的地址来避免，这样以后还可以修改这个地址存储的值。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>12.处理printf()的参数</strong></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">问：下面代码会输出什么？</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-cpp\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"preprocessor\">#include&lt;stdio.h&gt;</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"keyword\">void</span>)&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">{&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;a&nbsp;=&nbsp;10,&nbsp;b&nbsp;=&nbsp;20,&nbsp;c&nbsp;=&nbsp;30;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"\\n&nbsp;%d..%d..%d&nbsp;\\n\"</span>,&nbsp;a+b+c,&nbsp;(b&nbsp;=&nbsp;b*2),&nbsp;(c&nbsp;=&nbsp;c*2));&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;</li><li style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92);\">}&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">答：输出结果是：</p><pre style=\"margin-top: 0px; padding: 10px; list-style: none; overflow: hidden; background-color: rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221);\"><ol class=\"dp-xml\" style=\"margin: 0px 0px 1px 3em; padding: 5px 0px; list-style-position: initial; list-style-image: initial; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(20, 107, 0);\"><li class=\"alt\" style=\"margin: 0px; padding: 0px 3px 0px 10px; list-style: decimal; background-color: rgb(255, 255, 255); color: inherit;\">110..40..60&nbsp;</li></ol></pre><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">这是因为C语言里函数的参数默认是从右往左处理的，输出时是从左往右。</p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\">原文链接：<a href=\"http://www.thegeekstuff.com/2012/08/c-interview-questions/\" target=\"_blank\" style=\"cursor: pointer; color: rgb(0, 102, 204); text-decoration: none;\">the Geek Stuff</a></p><p style=\"margin: 0px 0px 1.5em; padding: 0px; list-style: none;\"><strong>本文为CSDN编译整理，未经允许不得转载。如需转载请联系<a href=\"mailto:market@csdn.net\">market@csdn.net</a>。</strong></p><div><strong><br></strong></div></div></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
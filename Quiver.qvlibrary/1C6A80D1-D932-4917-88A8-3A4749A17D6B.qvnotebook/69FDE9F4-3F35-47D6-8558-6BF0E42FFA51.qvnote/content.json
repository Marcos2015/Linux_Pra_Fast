{
  "title": "使用doxygen和graphviz来产生源代码函数调用图",
  "cells": [
    {
      "type": "text",
      "data": "<span style=\"color: inherit; font-family: inherit; font-size: 18px; text-indent: 1em;\">一、问题的产生</span><br><div class=\"article_body\" id=\"nei\" style=\"padding: 20px 5px 35px; margin-bottom: 0px; overflow-x: hidden; word-wrap: break-word; word-break: break-word; min-height: 340px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Tahoma, Arial, STXihei, 'Microsoft YaHei', 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);\"><div style=\"line-height: 1.7em;\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">最近需要分析一个很老的工程的源代码，源代码的内容复杂，而且找不到比较熟悉此代码的人。我这里首先要分析下函数间的调用关系，于是从网上搜索到了如下方法：使用doxygen和graphviz来自动分析函数间的调用关系。</p><div style=\"line-height: 1.7em;\"><br></div><h2 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">二、工具简介</h2><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">doxygen：（&nbsp;&nbsp;<a target=\"_blank\" href=\"http://www.stack.nl/~dimitri/doxygen/index.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration: none; transition: 0.25s; border-bottom-width: 1px; border-bottom-style: dashed; border-bottom-color: rgb(148, 148, 148); font-style: italic; font-weight: bold;\">http://www.stack.nl/~dimitri/doxygen/index.html</a>&nbsp;）&nbsp;</p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"><em>Doxygen is the de facto standard tool for generating documentation from annotated C++ sources, but it also supports other popular programming languages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba, Microsoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some extent D.</em></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"><br>是一种从标记过的C++源代码生成文档的标准工具，也支持C，Objective-C，C#，PHP，Java，Python，IDL，Fortran，VHDL，Tcl等。&nbsp;</p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">graphviz：（&nbsp;&nbsp;<a target=\"_blank\" href=\"http://www.graphviz.org/\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration: none; transition: 0.25s; border-bottom-width: 1px; border-bottom-style: dashed; border-bottom-color: rgb(148, 148, 148); font-style: italic; font-weight: bold;\">http://www.graphviz.org/</a>&nbsp;）&nbsp;</p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"><em>Graphviz is open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks. It has important applications in networking, bioinformatics,&nbsp; software engineering, database and web design, machine learning, and in visual interfaces for other technical domains.&nbsp;&nbsp;</em></p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\"></p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">是一种开源的将结构化信息展示成抽象图和网络的工具，用于网络，生物信息，软件工程，数据库和网站设计，机器学习以及其他技术领域的可视性接口。</p><div style=\"line-height: 1.7em;\"><br></div><div style=\"line-height: 1.7em;\"><h2 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">三、生成函数调用图</h2>安装此两种工具，然后可以方便的分析代码，生成相应的函数调用图。&nbsp;</div><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">1）打开DoxyWizard，弹出Doxygen配置界面。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">2）如下图，标出了主要需要设置的选项</p><div style=\"line-height: 1.7em;\"><img src=\"quiver-image-url/C8F6649697422916FC30975D4D68EAF9.jpg\" alt=\"\" style=\"max-width: 550px; vertical-align: middle; border: 0px none; text-align: center; margin: 0px auto; display: block;\" width=\"600\" height=\"504\"><br></div><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">Step1：设置doxygen的工作目录，这里主要是生成doxygen运行的目录</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">Step2：选项设置，wizard和expert选项可以同时设置。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">wizard选项卡中，选择Project Name作为工程名称，将来会显示在文档的标题中；选择Source code directory，设置源代码所在目录，Destination directory设置文档的生成目录；选择Scan recursively则递归分析源代码目录中的子目录内的源代码。</p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">3）由于我需要从没有任何标记的源代码中分析出函数调用关系，所以还需要设置expert选项卡</p><div style=\"line-height: 1.7em;\"><img src=\"quiver-image-url/136072D3EE120BEF24216D48BBED4494.jpg\" alt=\"\" style=\"max-width: 550px; vertical-align: middle; border: 0px none; text-align: center; margin: 0px auto; display: block;\" width=\"600\" height=\"506\"><br></div><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如图，勾选Build选项中的与函数有关的选项，EXTRACT_ALL必须勾选</p><div style=\"line-height: 1.7em;\"><br></div><div style=\"line-height: 1.7em;\"><img src=\"quiver-image-url/0CE6157B2B5581CA3BC39E947C50C3B3.jpg\" alt=\"\" style=\"max-width: 550px; vertical-align: middle; border: 0px none; text-align: center; margin: 0px auto; display: block;\" width=\"600\" height=\"503\"><br></div><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">如图，由于使用到了Graphviz，所以要设置Dot选项，勾选HAVE_DOT，并设置DOT_PATH为Graphviz的bin目录。</p><div style=\"line-height: 1.7em;\"><br></div><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">4）最后选择Run选项卡，点击Run doxygen，生成文档文件。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">5）打开文档文件，在函数的分析中即可看到函数调用图。</p><div style=\"line-height: 1.7em;\"><br></div><div style=\"line-height: 1.7em;\"><br></div><div style=\"line-height: 1.7em;\"><h2 style=\"margin: 0px 0px 0.5em; font-family: inherit; line-height: 1.6em; color: inherit; text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em;\">四、小结</h2>利用这两个工具可以为分析代码做一个初步的准备，也可以为已标记好的代码生成比较完备的文档。</div></div></div>"
    }
  ]
}
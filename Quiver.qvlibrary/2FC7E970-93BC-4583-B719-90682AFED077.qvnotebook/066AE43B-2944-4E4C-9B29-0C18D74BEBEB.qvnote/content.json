{
  "title": "C++的lambda表达式",
  "cells": [
    {
      "type": "text",
      "data": "<p id=\"\" style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">很多高级语言里引入了lambda表达式的概念，即匿名函数。以往C++需要传入一个函数的时候，必须事先进行声明，视情况可以声明为一个普通函数然后传入函数指针，或者声明一个funtor，然后传入一个对象。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">但这种传统方法太过复杂，一个简单的遍历输出就需要声明一个类或者函数，本来用于简化语法的东西却使语法大大复杂化。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">比如一个用随机数填充数组的例子：<br></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"></p><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;iostream&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;cstdlib&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;iterator&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;algorithm&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">using</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">namespace</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> std</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> mi_rand\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">public</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; mi_rand </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> start_pos</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> end_pos</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">start_pos</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> b</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">end_pos</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">unsigned</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">operator</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rand</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">b</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">private</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> b</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">};</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> main</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">20</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">];</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; generate_n </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> mi_rand </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">30</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">));</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; \n&nbsp; &nbsp; copy </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> array </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ostream_iterator</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;int&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\" \"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">));</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; cout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> endl</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; \n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></pre><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">示例中，generate_n的目的是使填充数组的操作简单化，但为了这种简单化却要额外声明一个类。输出数组时利用STL的确能进行语法上的简化，但是这种简化却要求对STL非常了解，而且拓展性非常差。<br></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">所幸，在<a href=\"http://lib.csdn.net/base/cplusplus\" class=\"replace_word\" title=\"C++知识库\" target=\"_blank\" style=\"color: rgb(223, 52, 52); font-weight: bold;\">C++</a>0x标准中终于引入了lambda表达式，目前 VS 2010 和 g++ 4.5 已经进行了试验性的实现。针对上面的填充和输出操作，下面是使用lambda表达式的简化版：</p><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;iostream&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;cstdlib&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;algorithm&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">using</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">namespace</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> std</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> main</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">20</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">];</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; generate_n </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rand</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">30</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp; for_each </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">array</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> array </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> SIZE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">){</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> cout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> a </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\" \"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; \n&nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span></pre><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">编译时需要注意的是，VS要求版本在2010以上，编译时需要加上 /EHsc 参数。使用g++编译的话版本要在版本4.5以上，并加上 --std=c++0x 参数。<br></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">g++目前（10年八月）的最新版本为4.51，你可以到&nbsp;<a href=\"http://gcc.gnu.org/\" title=\"\" target=\"\" style=\"color: rgb(216, 126, 180);\">http://gcc.gnu.org/</a>自行下载编译。ubuntu下可以通过&nbsp;<a href=\"https://launchpad.net/%7Eubuntu-toolchain/+archive/ppa\" title=\"\" target=\"\" style=\"color: rgb(216, 126, 180);\">PPA for Ubuntu Toolchain Hackers</a>直接安装二进制版本。</p><hr style=\"font-size: 14px; color: rgb(131, 118, 105); font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;\"><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">下面将阐述lambda表达式的语法，内容主要参考自&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/dd293603.aspx\" title=\"\" target=\"\" style=\"color: rgb(216, 126, 180);\">Lambda Expression Syntax</a>。<br></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">如图，lambda表达式由下面几个部分构成：</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><img src=\"quiver-image-url/A1198F0B308FB6E3CD4BD8A38E39006D.png\" alt=\"\" align=\"none\" width=\"295\" height=\"205\"><br></p><ol style=\"font-size: 14px; margin-top: 0px; line-height: 33px; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><li>lambda-introducer （捕获字段）</li><li>lambda-parameter-declaration-list （变量列表）</li><li>mutable-specification （捕获的变量可否修改）</li><li>exception-specification （异常设定）</li><li>lambda-return-type-clause （返回类型）</li><li>compound-statement （函数体）</li></ol><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>外部变量的捕获规则</strong></p><p id=\"\" style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">默认情况下，即捕获字段为 [] 时，lambda表达式是不能访问任何外部变量的，即表达式的函数体内无法访问当前作用域下的变量。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">如果要设定表达式能够访问外部变量，可以在 [] 内写入 &amp; 或者 = 加上变量名，其中 &amp; 表示按引用访问，= 表示按值访问，变量之间用逗号分隔，比如 [=factor, &amp;total] 表示按值访问变量 factor，而按引用访问 total。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">不加变量名时表示设置默认捕获字段，外部变量将按照默认字段获取，后面在书写变量名时不加符号表示按默认字段设置，比如下面三条字段都是同一含义：</p><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[&amp;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">total</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> factor</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[&amp;,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> factor</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[=,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&amp;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">total</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]</span></pre><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>参数列表</strong></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">lambda表达式的参数列表基本和函数的一致，不过有如下限制：</p><ol style=\"font-size: 14px; margin-top: 0px; line-height: 33px; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><li>参数列表不能有默认参数</li><li>不能是可变参数列表</li><li>所有的参数必须有个变量名</li></ol><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">如果你不提供 mutable-specification, exception-specification, 以及 lambda-return-type-clause，参数列表是也可以省略的。如下面的表达式：</p><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> main</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">4</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">5</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> z </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[=]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}();</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></pre><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>能否修改捕获的变量</strong></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">如果在参数列表后加上了 mutable，则表示表达式可以修改按值捕获的外部变量的拷贝。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>异常设置</strong></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">和函数一样，可以用 throw 来限定表达式能够抛出哪些异常。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>返回类型</strong></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">如果设置返回类型，你需要在类型名前面加上 -&gt;。如果你只有一个返回语句的话，返回类型可以省略，编译器将会为你做出判断。</p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\"><strong>函数体</strong></p><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">lambda表达式的函数体和普通函数大致相同。</p><hr style=\"font-size: 14px; color: rgb(131, 118, 105); font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;\"><p style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">下面是lambda表达式的几个完整例子：<br></p><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;algorithm&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;iostream&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;vector&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">using</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">namespace</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> std</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// The number of elements in the vector.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">const</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> elementCount </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">9</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> main</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Create a vector object with each element set to 1.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;vector</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;int&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> v</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">elementCount</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// These variables hold the previous two elements of the vector.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Assign each element in the vector to the sum of the </span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// previous two elements.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;generate_n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">v</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">begin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> elementCount </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[=]()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">mutable</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">throw</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; \n&nbsp; &nbsp; &nbsp; </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Generate current value.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> n </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp; &nbsp; </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Update previous two values.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp; &nbsp; y </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp; &nbsp; </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Print the contents of the vector.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;for_each</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">v</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">begin</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(),</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> v</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">end</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(),</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[](</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> cout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> n </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\" \"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;cout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> endl</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Print the local variables x and y.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// The values of x and y hold their initial values because </span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// they are captured by value.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;cout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\" \"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> endl</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span></pre><pre name=\"code\" class=\"prettyprint\" style=\"font-size: 14px; border: 1px solid rgb(136, 136, 136); white-space: pre-wrap; word-wrap: break-word; padding: 2px; color: rgb(131, 118, 105); background-color: rgb(255, 255, 255);\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">#include</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">&lt;functional&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> main</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Assign the lambda expression that adds two numbers to an auto variable.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">auto</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> f1 </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">};</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n\n&nbsp; &nbsp;</span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Assign the same lambda expression to a function object.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">using</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">namespace</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> std</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">::</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">tr1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n&nbsp; &nbsp;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> f2 </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> x </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> y</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">};</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span></pre><p id=\"aeaoofnhgocdbnbeljkmbjdmhbcokfdb-mousedown\" style=\"font-size: 14px; margin-top: 0px; line-height: 1.5em; text-align: justify; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; color: rgb(131, 118, 105);\">更多例子请参阅&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/dd293599.aspx\" title=\"\" target=\"\" id=\"\" style=\"color: rgb(216, 126, 180);\">Examples of Lambda Expressions</a>，本文的数个例子也多来源于此。</p>"
    }
  ]
}
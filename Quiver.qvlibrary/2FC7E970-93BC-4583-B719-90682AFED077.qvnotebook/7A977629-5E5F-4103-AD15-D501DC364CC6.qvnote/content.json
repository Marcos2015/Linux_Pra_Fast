{
  "title": "静态数据成员有以下特点",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><pre id=\"best-content-756374945\" accuse=\"aContent\" class=\"best-text mb-10\" style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; font-family: arial, 'courier new', courier, 宋体, monospace; color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(241, 254, 221);\">静态<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%95%B0%E6%8D%AE%E6%88%90%E5%91%98&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"3\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">数据成员</a>有以下特点：<br>对于非静态<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%95%B0%E6%8D%AE%E6%88%90%E5%91%98&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"3\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">数据成员</a>，每个<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E7%B1%BB%E5%AF%B9%E8%B1%A1&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"10\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">类对象</a>都有自己的拷贝。而静态<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%95%B0%E6%8D%AE%E6%88%90%E5%91%98&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"3\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">数据成员</a>被当作是类的成员。无论这个类的对象被定义了多少个，<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E9%9D%99%E6%80%81%E6%95%B0%E6%8D%AE&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"4\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">静态数据</a>成员在程序中也只有一份拷贝，由该类型的所有对象共享访问。也就是说，<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E9%9D%99%E6%80%81%E6%95%B0%E6%8D%AE&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"4\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">静态数据</a>成员是该类的所有对象所共有的。对该类的多个对象来说，<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E9%9D%99%E6%80%81%E6%95%B0%E6%8D%AE&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"4\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">静态数据</a>成员只分配一次内存，供所有对象共用。所以，静态数据成员的值对每个对象都是一样的，它的值可以更新； <br>静态数据成员存储在全局数据区。静态数据成员定义时要分配空间，所以不能在类声明中定义。 <br>静态数据成员和普通数据成员一样遵从public,protected,private访问规则； <br>因为静态数据成员在全局数据区分配内存，属于本类的所有对象共享，所以，它不属于特定的<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E7%B1%BB%E5%AF%B9%E8%B1%A1&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"10\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">类对象</a>，在没有产生<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E7%B1%BB%E5%AF%B9%E8%B1%A1&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"10\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">类对象</a>时其<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E4%BD%9C%E7%94%A8%E5%9F%9F&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"9\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">作用域</a>就可见，即在没有产生类的实例时，我们就可以操作它； <br>静态数据成员初始化与一般数据成员初始化不同。静态数据成员初始化的格式为：<br>＜<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"1\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">数据类型</a>＞＜类名＞::＜静态数据成员名＞=＜值＞ <br>类的静态数据成员有两种访问形式：<br>＜类对象名＞.＜静态数据成员名＞ 或 ＜类<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E7%B1%BB%E5%9E%8B%E5%90%8D&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"8\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">类型名</a>＞::＜静态数据成员名＞<br>如果静态数据成员的访问权限允许的话（即public的成员），可在程序中，按上述格式来引用静态数据成员 ； <br>静态数据成员主要用在各个对象都有相同的某项属性的时候。比如对于一个存款类，每个实例的利息都是相同的。所以，应该把利息设为存款类的静态数据成员。这有两个好处，第一，不管定义多少个存款类对象，利息数据成员都共享分配在全局数据区的内存，所以节省<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"2\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">存储空间</a>。第二，一旦利息需要改变时，只要改变一次，则所有存款类对象的利息全改变过来了； <br>同<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"6\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">全局变量</a>相比，使用静态数据成员有两个优势： <br>静态数据成员没有进入程序的全局<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E5%90%8D%E5%AD%97%E7%A9%BA%E9%97%B4&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"0\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">名字空间</a>，因此不存在与程序中其它全局名字冲突的可能性； <br>可以实现<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"5\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">信息隐藏</a>。静态数据成员可以是private成员，而<a class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" data-word=\"6\" log=\"pos:innerLink\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">全局变量</a>不能；<br>可以参考下：<br><a href=\"http://www.vckbase.com/document/viewdoc/?id=1720\" target=\"_blank\" style=\"color: rgb(45, 100, 179); text-decoration: none;\">http://www.vckbase.com/document/viewdoc/?id=1720</a></pre></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
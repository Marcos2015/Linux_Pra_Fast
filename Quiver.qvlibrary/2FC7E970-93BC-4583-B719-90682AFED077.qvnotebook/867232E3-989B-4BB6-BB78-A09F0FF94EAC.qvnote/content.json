{
  "title": "C++中Txt文件读取和写入",
  "cells": [
    {
      "type": "text",
      "data": "<pre style=\"white-space: pre-wrap; color: rgb(0, 0, 0); font-variant-ligatures: normal; orphans: 2; widows: 2;\">C++中Txt文件读取和写入\n \n \n笔记：C++文件的读取和写入\n\n\n#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main(){\nchar buffer[256];\nifstream myfile (\"c:\\\\a.txt\");\nofstream outfile(\"c:\\\\b.txt\");\n\nif(!myfile){\n  cout &lt;&lt; \"Unable to open myfile\";\n        exit(1); // terminate with error\n\n}\nif(!outfile){\n    cout &lt;&lt; \"Unable to open otfile\";\n        exit(1); // terminate with error\n\n}\nint a,b;\nint i=0,j=0;\nint data[6][2];\n  while (! myfile.eof() )\n  {\n    myfile.getline (buffer,10);\n    sscanf(buffer,\"%d %d\",&amp;a,&amp;b);\n    cout&lt;&lt;a&lt;&lt;\" \"&lt;&lt;b&lt;&lt;endl;\n    data[i][0]=a;\n    data[i][1]=b;\n    i++;\n  }\nmyfile.close();\n  for(int k=0;k&lt;i;k++){\n     outfile&lt;&lt;data[k][0] &lt;&lt;\" \"&lt;&lt;data[k][1]&lt;&lt;endl;\n     cout&lt;&lt;data[k][0] &lt;&lt;\" \"&lt;&lt;data[k][1]&lt;&lt;endl;\n  }\n\noutfile.close();\n return 0;\n}\n\n \n\n无论读写都要包含&lt;fstream&gt;头文件\n\n读：从外部文件中将数据读到程序中来处理\n对于程序来说，是从外部读入数据，因此定义输入流，即定义输入流对象:ifsteam infile，infile就是输入流对象。\n这个对象当中存放即将从文件读入的数据流。假设有名字为myfile.txt的文件，存有两行数字数据，具体方法：\nint a,b;\nifstream infile;\ninfile.open(\"myfile.txt\");      //注意文件的路径\ninfile&gt;&gt;a&gt;&gt;b;                   //两行数据可以连续读出到变量里\ninfile.close()\n\n如果是个很大的多行存储的文本型文件可以这么读：\nchar buf[1024];                //临时保存读取出来的文件内容\nstring message;\nifstream infile;\ninfile.open(\"myfile.js\");\nif(infile.is_open())          //文件打开成功,说明曾经写入过东西\n{\n while(infile.good() &amp;&amp; !infile.eof())\n {\n   memset(buf,0,1024);\n   infile.getline(buf,1204);\n   message = buf;\n   ......                     //这里可能对message做一些操作\n   cout&lt;&lt;message&lt;&lt;endl;\n }\n infile.close();\n}\n\n写：将程序中处理后的数据写到文件当中\n对程序来说是将数据写出去，即数据离开程序，因此定义输出流对象ofstream outfile，outfile就是输出流对象，这个对象用来存放将要写到文件当中的数据。具体做法：\nofstream outfile;\noutfile.open(\"myfile.bat\");  //myfile.bat是存放数据的文件名\nif(outfile.is_open())\n{\n  outfile&lt;&lt;message&lt;&lt;endl;    //message是程序中处理的数据\n  outfile.close(); \n}\nelse\n{\n  cout&lt;&lt;\"不能打开文件!\"&lt;&lt;endl;\n}\n\n\nc++对文件的读写操作的例子\n\n/*/从键盘读入一行字符，把其中的字母依次放在磁盘文件fa2.dat中，再把它从磁盘文件读入程序，\n将其中的小写字母改成大写字母，再存入磁盘fa3.dat中*/ \n＃i nclude&lt;fstream&gt;\n＃i nclude&lt;iostream&gt;\n＃i nclude&lt;cmath&gt;\nusing namespace std;\n //////////////从键盘上读取字符的函数\n void read_save(){\n      char c[80];\n      ofstream outfile(\"f1.dat\");//以输出方工打开文件\n      if(!outfile){\n                   cerr&lt;&lt;\"open error!\"&lt;&lt;endl;//注意是用的是cerr \n                   exit(1);\n                   }\n          cin.getline(c,80);//从键盘读入一行字符\n          for(int i=0;c[i]!=0;i++) //对字符一个一个的处理，直到遇到'/0'为止 \n                if(c[i]&gt;=65&amp;&amp;c[i]&lt;=90||c[i]&gt;=97&amp;&amp;c[i]&lt;=122){//保证输入的字符是字符 \n                   outfile.put(c[i]);//将字母字符存入磁盘文件 \n                   cout&lt;&lt;c[i]&lt;&lt;\"\";\n                   }\n                   cout&lt;&lt;endl;\n                   outfile.close();\n                   }\n void creat_data(){\n      char ch;\n      ifstream infile(\"f1.dat\",ios::in);//以输入的方式打开文件 \n      if(!infile){\n                  cerr&lt;&lt;\"open error!\"&lt;&lt;endl;\n                  exit(1);\n                  }\n    ofstream outfile(\"f3.dat\");//定义输出流f3.dat文件\n    if(!outfile){\n                 cerr&lt;&lt;\"open error!\"&lt;&lt;endl;\n                 exit(1);\n                 }\n     while(infile.get(ch)){//当读取字符成功时 \n     if(ch&lt;=122&amp;&amp;ch&gt;=97)\n     ch=ch-32;\n     outfile.put(ch);\n     cout&lt;&lt;ch;\n     }\n     cout&lt;&lt;endl;\n     infile.close();\n     outfile.close();\n     }\n     int main(){\n         read_save();\n         creat_data();\n        system(\"pause\");\n         return 0;\n         }  </pre>"
    }
  ]
}
{
  "title": "类模板与模板类的概念",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div id=\"cnblogs_post_body\" style=\"margin-bottom: 20px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(40, 85, 126);\"><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体;\">1.</span><span style=\"font-family: 宋体;\">类模板与模板类的概念</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">⑴&nbsp;</span><strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">什么是类模板</span></strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;一个类模板（也称为类属类或类生成类）允许用户为类定义一种模式，使得类中的某些数据成员、默写成员函数的参数、某些成员函数的返回值，能够取任意类型（包括系统预定义的和用户自定义的）。</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;</span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">如果一个类中数据成员的数据类型不能确定，或者是某个成员函数的参数或返回值的类型不能确定，就必须将此类声明为模板，它的存在不是代表一个具体的、实际的类，而是代表着一类类。</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">⑵&nbsp;</span><strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">类模板定义</span></strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;定义一个类模板，一般有两方面的内容：</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt 21pt; text-indent: -21pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\"><span size=\"3\">A.</span></span><span style=\"font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">首先要定义类，其格式为：</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">template &lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class foo</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">……</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">}</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">foo&nbsp;</span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">为类名，在类定义体中，如采用通用数据类型的成员，函数参数的前面需加上<span lang=\"EN-US\">T</span>，其中通用类型<span lang=\"EN-US\">T</span>可以作为普通成员变量的类型，还可以作为<span lang=\"EN-US\">const</span>和<span lang=\"EN-US\">static</span>成员变量以及成员函数的参数和返回类型之用。例如：</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\"><span style=\"font-size: small;\">template&lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class Test{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">private:</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;n;</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;i;</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;cnt;</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">public:</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;Test():i(0){}</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;&nbsp;&nbsp;Test(</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;k);</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;~Test(){}</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;void print();</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;operator+(</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;x);</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">};</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt 21pt; text-indent: -21pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\"><span size=\"3\">B.</span></span><span style=\"font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">在类定义体外定义成员函数时，若此成员函数中有模板参数存在，则除了需要和一般类的体外定义成员函数一样的定义外，还需在函数体外进行模板声明</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">例如</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\"><span style=\"font-size: small;\">template&lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">void Test</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">&lt;T&gt;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">::print(){</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;std::cout&lt;&lt;\"n=\"&lt;&lt;n&lt;&lt;std::endl;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;std::cout&lt;&lt;\"i=\"&lt;&lt;i&lt;&lt;std::endl;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;std::cout&lt;&lt;\"cnt=\"&lt;&lt;cnt&lt;&lt;std::endl;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">}</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">如果函数是以通用类型为返回类型，则要在函数名前的类名后缀上“<span lang=\"EN-US\">&lt;T&gt;</span>”。例如：</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">template&lt;class T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&gt;</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">Test</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">&lt;T&gt;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">::Test(</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;k):i(k){n=k;cnt++;}</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\"><span style=\"font-size: small;\">template&lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;Test</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">&lt;T&gt;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">::operator+</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">(T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;x){</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n + x;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt 21pt; text-indent: -21pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\"><span size=\"3\">C.</span></span><span style=\"font-size: 7pt; line-height: normal; font-family: 'Times New Roman';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">在类定义体外初始化<span lang=\"EN-US\">const</span>成员和<span lang=\"EN-US\">static</span>成员变量的做法和普通类体外初始化<span lang=\"EN-US\">const</span>成员和<span lang=\"EN-US\">static</span>成员变量的做法基本上是一样的，唯一的区别是需在对模板进行声明，例如</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\"><span style=\"font-size: small;\">template&lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">int Test</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">&lt;T&gt;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">::cnt=0;</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\"><span style=\"font-size: small;\">template&lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">Test&lt;</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&gt;::Test(</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">T</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;k)</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: red;\">:i(k)</span><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">{n=k;cnt++;}</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">⑶&nbsp;</span><strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">类模板的使用</span></strong><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;类模板的使用实际上是将类模板实例化成一个具体的类，它的格式为：类名<span lang=\"EN-US\">&lt;</span>实际的类型<span lang=\"EN-US\">&gt;</span>。</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;</span></span></span></p><p style=\"margin: 10px auto; line-height: 1.5;\"><span class=\"Apple-style-span\" style=\"border-collapse: separate; font-size: medium; line-height: normal; font-family: Simsun; border-spacing: 0px;\"></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"color: rgb(255, 0, 0); font-size: 18pt;\">模板类</span>是类模板实例化后的一个产物。说个形象点的例子吧。我把类模板比作一个做饼干同的模子，而模板类就是用这个模子做出来的饼干，至于这个饼干是什么味道的就要看你自己在实例化时用的是什么材料了，你可以做巧克力饼干，也可以做豆沙饼干，这些饼干的除了材料不一样外，其他的东西都是一样的了。</span></span></span></p><p style=\"margin: 10px auto; line-height: 1.5;\"></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">2.</span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">类模板的派生</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-size: small;\"><span size=\"3\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\">&nbsp;&nbsp;</span><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\">可以从类模板派生出新的类，既可以派生类模板，也可以派生非模板类。派生方法：</span></span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">⑴ 从类模板派生类模板可以从类模板派生出新的类模板，它的派生格式如下例所示：</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">template &lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class base</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">……</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">};</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">template &lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class derive:public base&lt;T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">……</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">};</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">与一般的类派生定义相似，只是在指出它的基类时要缀上模板参数，即<span lang=\"EN-US\">base&lt;T&gt;</span>。</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">⑵ 从类模板派生非模板类<span lang=\"EN-US\">&nbsp;&nbsp;</span>可以从类模板派生出非模板类，在派生中，作为非模板类的基类，必须是类模板实例化后的模板类，并且在定义派生类前不需要模板声明语句：<span lang=\"EN-US\">template&lt;class&gt;</span>。例如：</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">template &lt;class T&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class base</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">……</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">};</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">&nbsp;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">class derive:public base&lt;int&gt;</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">{</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">……</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span lang=\"EN-US\" style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">};</span></span></p><p class=\"MsoNormal\" align=\"left\" style=\"margin: 0cm 0cm 0pt;\"><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\">在定义<span lang=\"EN-US\">derive</span>类时，<span lang=\"EN-US\">base</span>已实例化成了<span lang=\"EN-US\">int</span>型的模板类。</span></span></p><div><span style=\"font-family: 宋体; color: rgb(42, 42, 42);\"><span style=\"font-size: small;\"><br></span></span></div></div><div id=\"MySignature\" style=\"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(40, 85, 126);\"></div><div class=\"clear\" style=\"clear: both; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(40, 85, 126);\"></div><div id=\"blog_post_info_block\" style=\"margin-top: 20px; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19px; background-color: rgb(40, 85, 126);\"><div id=\"blog_post_info\"></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
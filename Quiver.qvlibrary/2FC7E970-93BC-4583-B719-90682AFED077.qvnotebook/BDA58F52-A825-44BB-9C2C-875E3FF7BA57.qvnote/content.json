{
  "title": "cin<<, cin.get,cin.getline等函数深入分析",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"font-size: medium; color: rgb(255, 0, 51); line-height: 28px; font-family: verdana, sans-serif; font-weight: bold;\">cin&lt;&lt;, cin.get,cin.getline等函数深入分析</span><div class=\"bct fc05 fc11 nbw-blog ztag\" style=\"line-height: 28px; font-size: 16px; word-wrap: break-word; color: rgb(78, 78, 78); margin: 15px 0px; padding: 5px 0px; overflow: hidden; font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53;\"><span style=\"line-height: 21px; font-family: verdana, sans-serif; color: rgb(0, 51, 255); font-weight: bold;\"><div style=\"line-height: 28px; text-indent: 21pt;\"><span style=\"font-size: medium;\">很多初学者都认为cin函数是一个很简单的函数，其实不然！cin函数有很多需要了解的知识（比如：cin的返回值是什么，cin提供了哪些成员函数且分别是什么作用，如cin.clear(), cin.ignore(), cin.fail(), cin.good()等等），如果没有很好的掌握，在使用的时候很可能会出问题却不知其原因！而且很多人也确确实实遇到过不少问题，以下是几个简单的例子：</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序1</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int m, n;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin&gt;&gt;m;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp; cin&gt;&gt;n;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(0, 255, 102);\"><span style=\"font-size: medium;\">测试情况：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">如果用户每次都输入两个合法的数，程序不会出问题！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">但是如果用户第一次输入时给一个非法的输入，比如说输入一个字符'a'，你会发现程序不</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">会再执行第二条输入语句。似乎有点奇怪！！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序2</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char str[8];</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin.getline(str, 5);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;str&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin.getline(str, 5);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;str&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">程序的功能很简单，就是输入一个字符串再输出，再次输入一个字符串输出。程序执行情况：</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">测试一：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd (回车)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd (输出)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">efgh (回车)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">efgh (输出)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">当用户第一次输入的字符串字符数小于4时，程序执行正常！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 169, 196);\"><span style=\"font-size: medium;\">测试二：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcdefgh (回车)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd (输出)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp; (</span><span style=\"font-size: medium;\">输出-换行)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">当用户第一次输入的字符数字符数大于4时，第一个字符串接受输入的前四个字符，而第二次的输入操作没有执行，第二个字符串输出为空。似乎也很奇怪！！！</span></div><div style=\"line-height: 28px; text-indent: 21pt;\"><span style=\"font-size: medium;\">其实在很多时候都会遇到诸如此类的问题，如果不熟悉程序输入的原理和cin等一些函数的原理就不知道怎么解决！我在这里做一个简单的介绍，也许介绍得不是很准确和全面，或者存在一些误解，请大家包涵！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div align=\"center\" style=\"line-height: 28px; margin: 13pt 0cm;\"><strong><font color=\"#0000ff\"><u><span style=\"font-size: medium;\">输入操作的原理</span></u></font></strong></div><div style=\"line-height: 28px; text-indent: 21pt;\"><span style=\"font-size: medium;\">与前一节中提到的scanf函数一样，程序的输入都建有一个缓冲区，即输入缓冲区。一次输入过程是这样的，当一次键盘输入结束时会将输入的数据存入输入缓冲区，而cin函数直接从输入缓冲区中取数据。正因为cin函数是直接从缓冲区取数据的，所以有时候当缓冲区中有残留数据时，cin函数会直接取得这些残留数据而不会请求键盘输入，这就是例子中为什么会出现输入语句失效的原因！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div align=\"center\" style=\"line-height: 28px; margin: 13pt 0cm;\"><strong><font color=\"#0000ff\"><u><span style=\"font-size: medium;\">cin的一些输入函数和操作符</span></u></font></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin is a extern istream object。提供了很多可用的成员函数和重载的操作符，如：</span><span style=\"font-size: medium;\">cin&lt;&lt;, cin.get(), cin.getline()等。下面我们来了解一下这几个函数：</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><font color=\"#ff00ff\"><strong><span style=\"font-size: medium;\">一</span></strong><strong><span style=\"font-size: medium;\">. cin&lt;&lt;</span></strong></font></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">该操作符是根据后面变量的类型读取数据。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">输入结束条件</span><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: medium;\">：遇到Enter、Space、Tab键。(这个很重要！)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">对结束符的处理 ：丢弃缓冲区中使得输入结束的结束符(Enter、Space、Tab)</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">&nbsp;</span></strong></div><div style=\"line-height: 28px;\"><font color=\"#dd9222\"><span style=\"font-size: medium;\">读字符的情况：</span></font></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序3</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char c1, c2;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin&gt;&gt;c1;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin&gt;&gt;c2;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;c1&lt;&lt;\" \"&lt;&lt;c2&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">测试一输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a[Enter]</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">b[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 141);\"><span style=\"font-size: medium;\">输出:</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a b</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 143);\"><span style=\"font-size: medium;\">测试二输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a b[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 143);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a b</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;</span></div><div style=\"line-height: 28px;\"><font color=\"#c48d3c\"><span style=\"font-size: medium;\">读字符串的情况：</span></font></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序4</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char str1[10], str2[10];</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin&gt;&gt;str1;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin&gt;&gt;str2;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;str1&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;str2&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 143);\"><span style=\"font-size: medium;\">测试一输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd[Enter]</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">efgh[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 112);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">efgh</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】输入遇到回车符结束，很正常。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 143);\"><span style=\"font-size: medium;\">测试二输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd efgh</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 141);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abcd</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">efgh</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】第一次读取字符串时遇到空格则停止了，将abcd读入str1，并舍弃了空格，将后面的字符串给了第二个字符串。这证明了cin读入数据遇到空格结束；并且丢弃空格符；缓冲区有残留数据室，读入操作直接从缓冲区中取数据。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;</span></div><div style=\"line-height: 28px;\"><font color=\"#ff00ff\"><strong><span style=\"font-size: medium;\">二．</span></strong><strong><span style=\"font-size: medium;\">cin.get()</span></strong></font></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">该函数有三种格式：无参，一参数，二参数</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">即cin.get(), &nbsp;cin.get(char ch), &nbsp;cin.get(array_name, Arsize)</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">读取字符的情况：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">输入结束条件：Enter键</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">对结束符处理：不丢弃缓冲区中的Enter</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin.get() 与 cin.get(char ch)用于读取字符，他们的使用是相似的，</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">即：ch=cin.get() 与 cin.get(ch)是等价的。</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序5</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char c1, c2;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin.get(c1);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cin.get(c2);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;c1&lt;&lt;\" \"&lt;&lt;c2&lt;&lt;endl;&nbsp;&nbsp; //&nbsp;</span><span style=\"font-size: medium;\">打印两个字符</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;(int)c1&lt;&lt;\" \"&lt;&lt;(int)c2&lt;&lt;endl;&nbsp;//&nbsp;</span><span style=\"font-size: medium;\">打印这两个字符的ASCII值</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 174);\"><span style=\"font-size: medium;\">测试一输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">输出:</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">97 10</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】会发现只执行了一次从键盘输入，显然第一个字符变量取的'a', 第二个变量取的是Enter(ASCII值为10)，这是因为该函数不丢弃上次输入结束时的Enter字符，所以第一次输入结束时缓冲区中残留的是上次输入结束时的Enter字符！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">测试二输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a b[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">97 32</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】显然第一个字符变量取的'a',&nbsp;第二个变量取的是Space(ASCII值为32)。原因同上，没有丢弃Space字符。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">读取字符串的情况：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin.get(array_name, Arsize)是用来读取字符串的，可以接受空格字符，遇到Enter结束输入，按照长度(Arsize)读取字符, 会丢弃最后的Enter字符。</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序6</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main ()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">char a[20];</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin.get(a, 10);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cout&lt;&lt;a&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">return 0;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(43, 213, 145);\"><span style=\"font-size: medium;\">测试一输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abc def[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">abc def</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】说明该函数输入字符串时可以接受空格。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 169);\"><span style=\"font-size: medium;\">测试二输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">1234567890[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(51, 204, 174);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">123456789</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】输入超长，则按需要的长度取数据。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序7</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main ()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">char ch, a[20];</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin.get(a, 5);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin&gt;&gt;ch;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cout&lt;&lt;a&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cout&lt;&lt;(int)ch&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">return 0;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(68, 187, 163);\"><span style=\"font-size: medium;\">测试一输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">12345[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(68, 187, 163);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">1234</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">53</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】第一次输入超长，字符串按长度取了\"1234\"，而'5'仍残留在缓冲区中，所以第二次输入字符没有从键盘读入，而是直接取了'5'，所以打印的ASCII值是53('5'的ASCII值)。</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><em><u><span style=\"font-size: medium;\">测试二输入：</span></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">1234[Enter]</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">a[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><span style=\"font-size: medium;\">输出：</span></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">1234</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">97</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】第二次输入有效，说明该函数把第一次输入后的Enter丢弃了！</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">&nbsp;&nbsp;</span></div><div style=\"line-height: 28px;\"><font color=\"#ff00cc\"><strong><span style=\"font-size: medium;\">三．</span></strong><strong><span style=\"font-size: medium;\">cin.getline()</span></strong></font></div><div style=\"line-height: 28px; text-indent: 15.75pt;\"><span style=\"font-size: medium;\">cin.getline() 与 cin.get(array_name, Arsize)的读取方式差不多，以Enter结束，可以接受空格字符。按照长度(Arsize)读取字符, 会丢弃最后的Enter字符。</span></div><div style=\"line-height: 28px; text-indent: 15.75pt;\"><span style=\"font-size: medium;\">但是这两个函数是有区别的：</span></div><div style=\"line-height: 28px; text-indent: 15.75pt;\"><span style=\"font-size: medium;\">cin.get(array_name, Arsize)当输入的字符串超长时，不会引起cin函数的错误，后面的cin操作会继续执行，只是直接从缓冲区中取数据。但是cin.getline()当输入超长时，会引起cin函数的错误，后面的cin操作将不再执行。（具体原因将在下一部分\"cin的错误处理\"中详细介绍）</span></div><div style=\"line-height: 28px;\"><strong><span style=\"font-size: medium;\">程序8</span></strong><strong><span style=\"font-size: medium;\">：</span></strong></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">#include &lt;iostream&gt;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">using namespace std;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">int main ()</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">{</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">char ch, a[20];</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin.getline(a, 5);</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cin&gt;&gt;ch;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cout&lt;&lt;a&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">cout&lt;&lt;(int)ch&lt;&lt;endl;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">return 0;</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">}</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(77, 179, 138);\"><span style=\"font-size: medium;\">测试输入：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">12345[Enter]</span></div><div style=\"line-height: 28px;\"><em><u><font style=\"background-color: rgb(60, 196, 141);\"><span style=\"font-size: medium;\">输出：</span></font></u></em></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">1234</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">-52</span></div><div style=\"line-height: 28px;\"><span style=\"font-size: medium;\">【分析】与cin.get(array_name, Arsize)的例程比较会发现，这里的ch并没有读取缓冲区中的5，而是返回了-52，这里其实cin&gt;&gt;ch语句没有执行，是因为cin出错了！下一部分将详细介绍。</span></div><div style=\"line-height: 28px;\"><span style=\"line-height: 20px;\"><span style=\"line-height: 28px; font-size: medium;\"><br></span></span></div><div style=\"line-height: 28px;\"><span style=\"line-height: 20px;\"><span style=\"line-height: 28px; font-size: medium;\">PS:</span></span></div><div style=\"line-height: 28px;\"><span style=\"line-height: 20px;\"><span style=\"line-height: 28px; font-size: medium;\"></span><span style=\"line-height: 18px; font-weight: normal;\"><span style=\"line-height: 28px; font-size: medium;\"><font color=\"#FF0000\">测试二输入： 1234[Enter] a[Enter] 输出： 1234 97 【分析】第二次输入有效，说明该函数把第一次输入后的Enter丢弃了！ ---------------------------------------------------------- 我觉得这里并不是cin.get()函数把终止符（回车）丢弃的，ENTER应该还留在缓冲区里，是在执行流提取操作cin&gt;&gt;ch时，把ENTER当空白字符（空格、）跳过去了，cin.get()提取完字符后指针不会跳过终止符，这是它与cin.getline()函数的一个最重要的区别之一。</font></span></span></span></div><div style=\"line-height: 28px;\"><font color=\"#000000\"><span style=\"line-height: 25px; font-size: medium; font-weight: normal;\"><br style=\"line-height: 28px;\"></span></font></div><div style=\"line-height: 28px;\"><font color=\"#000000\"><span style=\"line-height: 25px; font-size: medium; font-weight: normal;\"><font color=\"#FF0000\" style=\"line-height: 28px;\">本文转自：</font><span style=\"line-height: 21px; font-size: 14px; color: rgb(0, 51, 255); font-weight: bold;\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.csdn.net/lewsn2008/archive/2008/04/17/2299358.aspx\" style=\"color: rgb(121, 75, 21); line-height: 24.5px; text-decoration: none;\">http://blog.csdn.net/lewsn2008/archive/2008/04/17/2299358.aspx</a></span></span></font></div><div><font color=\"#000000\"><span style=\"line-height: 25px; font-size: medium; font-weight: normal;\"><br></span></font></div></span></div><div class=\"nbw-blog-end\" style=\"color: rgb(78, 78, 78); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 12px; line-height: normal;\"></div><div style=\"color: rgb(78, 78, 78); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 12px; line-height: normal;\"></div><div style=\"color: rgb(78, 78, 78); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 12px; line-height: normal;\"></div><div style=\"color: rgb(78, 78, 78); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 12px; line-height: normal;\"><div class=\"wumii-hook\"></div></div>"
    }
  ]
}
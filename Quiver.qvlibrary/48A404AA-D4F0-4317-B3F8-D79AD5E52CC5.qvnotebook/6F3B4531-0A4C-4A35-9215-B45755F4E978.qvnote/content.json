{
  "title": "揭开Socket编程的面纱",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><div class=\"posthead\" style=\"background-color: rgb(238, 238, 238); background-image: url(http://goodcandle.cnblogs.com/skins/KJC/images/icon-titledoc.gif); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); padding: 4px 4px 4px 25px; color: rgb(68, 68, 68); font-family: Verdana, 'Lucida Grande', Arial, Helvetica, sans-serif; line-height: normal; background-position: 5px 50%; background-repeat: no-repeat no-repeat;\"><h2 style=\"margin: 0px; font-size: 12px;\"><a id=\"cb_post_title_url\" class=\"singleposttitle\" href=\"http://www.cnblogs.com/goodcandle/archive/2005/12/10/socket.html\" style=\"color: rgb(34, 51, 85); text-decoration: none;\">揭开Socket编程的面纱</a></h2>Posted on&nbsp;<span id=\"post-date\">2005-12-10 22:59</span>&nbsp;<a href=\"http://www.cnblogs.com/goodcandle/\" style=\"color: rgb(34, 51, 85); text-decoration: none;\">源码工作室</a>&nbsp;阅读(<span id=\"post_view_count\">145835</span>) 评论(<span id=\"post_comment_count\">100</span>)&nbsp;&nbsp;<a href=\"http://i.cnblogs.com/EditPosts.aspx?postid=294652\" rel=\"nofollow\" style=\"color: rgb(34, 51, 85); text-decoration: none;\">编辑</a>&nbsp;<a href=\"http://goodcandle.cnblogs.com/archive/2005/12/10/294652.aspx#\" style=\"color: rgb(34, 51, 85); text-decoration: none;\">收藏</a></div><div class=\"postbody\" style=\"color: rgb(0, 0, 0); padding: 20px 10px 4px; margin-bottom: 14px; line-height: 1.5; font-family: Verdana, 'Lucida Grande', Arial, Helvetica, sans-serif; font-size: 12px;\"><div id=\"cnblogs_post_body\" style=\"margin-bottom: 20px;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对<span lang=\"EN-US\">TCP/IP</span>、<span lang=\"EN-US\">UDP</span>、<span lang=\"EN-US\">Socket</span>编程这些词你不会很陌生吧？随着网络技术的发展，这些词充斥着我们的耳朵。那么我想问：<br><br><span lang=\"EN-US\">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;什么是<span lang=\"EN-US\">TCP/IP</span>、<span lang=\"EN-US\">UDP</span>？<br><span lang=\"EN-US\">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span lang=\"EN-US\">Socket</span>在哪里呢？<br><span lang=\"EN-US\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span lang=\"EN-US\">Socket</span>是什么呢？<br><span lang=\"EN-US\">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;你会使用它们吗？<br><br><b>什么是<span lang=\"EN-US\">TCP/IP</span></b><b>、<span lang=\"EN-US\">UDP</span></b><b>？</b><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span lang=\"EN-US\">TCP/IP</span>（<span lang=\"EN-US\">Transmission Control Protocol/Internet Protocol</span>）即传输控制协议<span lang=\"EN-US\">/</span>网间协议，是一个工业标准的协议集，它是为广域网（<span lang=\"EN-US\">WANs</span>）设计的。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span lang=\"EN-US\">UDP</span>（<span lang=\"EN-US\">User Data Protocol</span>，用户数据报协议）是与<span lang=\"EN-US\">TCP</span>相对应的协议。它是属于<span lang=\"EN-US\">TCP/IP</span>协议族中的一种。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里有一张图，表明了这些协议的关系。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br><img height=\"448\" hspace=\"0\" src=\"quiver-image-url/22ED55C591A270855509E9E3E459A8DF.jpg\" width=\"596\" style=\"border: 0px;\"><br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 图<span lang=\"EN-US\">1</span></span></span></span></span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TCP/IP</span>协议族包括运输层、网络层、链路层。现在你知道<span lang=\"EN-US\">TCP/IP</span>与<span lang=\"EN-US\">UDP</span>的关系了吧。<br><b><span lang=\"EN-US\">Socket</span></b><b>在哪里呢？<br></b><b><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b>在图<span lang=\"EN-US\">1</span>中，我们没有看到<span lang=\"EN-US\">Socket</span>的影子，那么它到底在哪里呢？还是用图来说话，一目了然。</p><p style=\"margin: 10px auto;\"></p><p align=\"center\" style=\"margin: 10px auto;\"><br><img height=\"476\" hspace=\"0\" src=\"quiver-image-url/5A8CAD4C4F145A40366CE966A8EE438A.jpg\" width=\"542\" style=\"border: 0px;\"><br>图<span lang=\"EN-US\">2</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原来<span lang=\"EN-US\">Socket</span>在这里。<br><b><span lang=\"EN-US\">Socket</span></b><b>是什么呢？<br></b><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span lang=\"EN-US\">Socket</span>是应用层与<span lang=\"EN-US\">TCP/IP</span>协议族通信的中间软件抽象层，它是一组接口。在设计模式中，<span lang=\"EN-US\">Socket</span>其实就是一个门面模式，它把复杂的<span lang=\"EN-US\">TCP/IP</span>协议族隐藏在<span lang=\"EN-US\">Socket</span>接口后面，对用户来说，一组简单的接口就是全部，让<span lang=\"EN-US\">Socket</span>去组织数据，以符合指定的协议。<br><b>你会使用它们吗？<br></b><b><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b>前人已经给我们做了好多的事了，网络间的通信也就简单了许多，但毕竟还是有挺多工作要做的。以前听到<span lang=\"EN-US\">Socket</span>编程，觉得它是比较高深的编程知识，但是只要弄清<span lang=\"EN-US\">Socket</span>编程的工作原理，神秘的面纱也就揭开了。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一个生活中的场景。你要打电话给一个朋友，先拨号，朋友听到电话铃声后提起电话，这时你和你的朋友就建立起了连接，就可以讲话了。等交流结束，挂断电话结束此次交谈。<span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;生活中的场景就解释了这工作原理，也许<span lang=\"EN-US\">TCP/IP</span>协议族就是诞生于生活中，这也不一定。</span></span></span></span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\"><img height=\"491\" hspace=\"0\" src=\"quiver-image-url/3E0BCE9E4EF2868B3C4DB85968DAEAAC.jpg\" width=\"478\" style=\"border: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p align=\"center\" style=\"margin: 10px auto;\">图<span lang=\"EN-US\">3</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;先从服务器端说起。服务器端先初始化<span lang=\"EN-US\">Socket</span>，然后与端口绑定<span lang=\"EN-US\">(bind)</span>，对端口进行监听<span lang=\"EN-US\">(listen)</span>，调用<span lang=\"EN-US\">accept</span>阻塞，等待客户端连接。在这时如果有个客户端初始化一个<span lang=\"EN-US\">Socket</span>，然后连接服务器<span lang=\"EN-US\">(connect)</span>，如果连接成功，这时客户端与服务器端的连接就建立了。客户端发送数据请求，服务器端接收请求并处理请求，然后把回应数据发送给客户端，客户端读取数据，最后关闭连接，一次交互结束。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这里我就举个简单的例子，我们走的是<span lang=\"EN-US\">TCP</span>协议这条路（见图<span lang=\"EN-US\">2</span>）。例子用<span lang=\"EN-US\">MFC</span>编写，运行的界面如下：</span></span></p><p align=\"center\" style=\"margin: 10px auto;\"></p><p align=\"center\" style=\"margin: 10px auto;\"><br><img height=\"228\" hspace=\"0\" src=\"quiver-image-url/C3CDC336374F83F36318A3F6E7C86D64.jpg\" width=\"482\" style=\"border: 0px;\"><br>图<span lang=\"EN-US\">4</span></p><p align=\"center\" style=\"margin: 10px auto;\"></p><p align=\"center\" style=\"margin: 10px auto;\"><br><img height=\"144\" hspace=\"0\" src=\"quiver-image-url/2ADD6BA18D9FE07EF69A34785DDA7F72.jpg\" width=\"504\" style=\"border: 0px;\"><br>图<span lang=\"EN-US\">5</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在客户端输入服务器端的<span lang=\"EN-US\">IP</span>地址和发送的数据，然后按发送按钮，服务器端接收到数据，然后回应客户端。客户端读取回应的数据，显示在界面上。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面是接收数据和发送数据的函数：</span></span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">int&nbsp;&nbsp;&nbsp;&nbsp;Receive(SOCKET fd,char *szText,int len)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">{<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int cnt;<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rc;<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt=len;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(cnt&gt;0)<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rc=recv(fd,szText,cnt,0);<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rc==SOCKET_ERROR)<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></span><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rc==0)&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len-cnt;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;szText+=rc;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt-=rc;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">}<br><br></span><span lang=\"EN-US\">int Send(SOCKET fd,char *szText,int len)<br></span><span lang=\"EN-US\">{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int cnt;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int rc;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt=len;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(cnt&gt;0)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rc=send(fd,szText,cnt,0);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rc==SOCKET_ERROR)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rc==0)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len-cnt;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;szText+=rc;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt-=rc;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">}</span></p><p style=\"margin: 10px auto;\"><b>服务器端：</b></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在服务器端，主要是启动<span lang=\"EN-US\">Socket</span>和监听线程。</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">#define DEFAULT_PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2000</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">void CServerDlg::OnStart()&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sockaddr_in local;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD&nbsp;dwThreadID = 0;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_family=AF_INET;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>设置的端口为<span lang=\"EN-US\">DEFAULT_PORT</span>。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_port=htons(DEFAULT_PORT);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//IP</span>地址设置成<span lang=\"EN-US\">INADDR_ANY,</span>让系统自动获取本机的<span lang=\"EN-US\">IP</span>地址。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_addr.S_un.S_addr=INADDR_ANY;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>初始化<span lang=\"EN-US\">Socket</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_Listening = socket(AF_INET,SOCK_STREAM,0);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(m_Listening == INVALID_SOCKET)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>将本地地址绑定到所创建的套接字上</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bind(m_Listening,(LPSOCKADDR)&amp;local,sizeof(local)) == SOCKET_ERROR )</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closesocket(m_Listening);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>创建监听线程，这样也能响应界面上操作。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_hListenThread = ::CreateThread(NULL,0,ListenThread,this,0,&amp;dwThreadID);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_StartBtn.EnableWindow(FALSE);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_StopBtn.EnableWindow(TRUE);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">}<br><br></span>监听线程函数：<br><span lang=\"EN-US\">DWORD WINAPI CServerDlg::ListenThread(LPVOID lpparam)<br></span><span lang=\"EN-US\">{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CServerDlg* pDlg = (CServerDlg*)lpparam;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(pDlg == NULL)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOCKET&nbsp;&nbsp;Listening = pDlg-&gt;m_Listening;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>开始监听是否有客户端连接。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(listen(Listening,40) == SOCKET_ERROR)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char szBuf[MAX_PATH];</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>初始化</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(szBuf,0,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(1)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOCKET ConnectSocket;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sockaddr_in&nbsp;&nbsp;&nbsp;&nbsp;ClientAddr;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nLen = sizeof(sockaddr);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>阻塞直到有客户端连接，不然多浪费<span lang=\"EN-US\">CPU</span>资源。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConnectSocket = accept(Listening,(sockaddr*)&amp;ClientAddr,&amp;nLen);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>都到客户端的<span lang=\"EN-US\">IP</span>地址。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char *pAddrname = inet_ntoa(ClientAddr.sin_addr);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pDlg-&gt;Receive(ConnectSocket,szBuf,100);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>界面上显示请求数据。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pDlg-&gt;SetRequestText(szBuf);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(szBuf,\" :</span>我是老猫，收到（<span lang=\"EN-US\">\");</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(szBuf,pAddrname);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(szBuf,\"</span>）<span lang=\"EN-US\">\");</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>向客户端发送回应数据</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pDlg-&gt;Send(ConnectSocket,szBuf,100);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器端一直在监听是否有客户端连接，如有连接，处理客户端的请求，给出回应，然后继续监听。</span></p><p style=\"margin: 10px auto;\"><b>客户端：</b></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;客户端的发送函数：</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">#define DEFAULT_PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2000</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">void CClientDlg::OnSend()&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DWORD&nbsp;dwIP = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TCHAR szText[MAX_PATH];</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(szText,0,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_IP.GetWindowText(szText,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>把字符串形式的<span lang=\"EN-US\">IP</span>地址转成<span lang=\"EN-US\">IN_ADDR</span>结构需要的形式。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dwIP = inet_addr(szText);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_RequestEdit.GetWindowText(szText,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sockaddr_in local;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOCKET socketTmp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>必须是<span lang=\"EN-US\">AF_INET,</span>表示该<span lang=\"EN-US\">socket</span>在<span lang=\"EN-US\">Internet</span>域中进行通信</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_family=AF_INET;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>端口号</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_port=htons(DEFAULT_PORT);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>服务器的<span lang=\"EN-US\">IP</span>地址。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local.sin_addr.S_un.S_addr=dwIP;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;////</span>初始化<span lang=\"EN-US\">Socket</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;socketTmp=socket(AF_INET,SOCK_STREAM,0);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>连接服务器</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(connect(socketTmp,(LPSOCKADDR)&amp;local,sizeof(local)) &lt; 0)</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closesocket(socketTmp);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBox(\"</span>连接服务器失败。<span lang=\"EN-US\">\");</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>发送请求，为简单只发<span lang=\"EN-US\">100</span>字节，在服务器端也规定<span lang=\"EN-US\">100</span>字节。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send(socketTmp,szText,100);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>读取服务器端返回的数据。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(szText,0,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>接收服务器端的回应。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Receive(socketTmp,szText,100);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TCHAR szMessage[MAX_PATH];</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(szMessage,0,MAX_PATH);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(szMessage,szText);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span>界面上显示回应数据。</p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_ReplyBtn.SetWindowText(szMessage);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closesocket(socketTmp);</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">}</span></p><p style=\"margin: 10px auto;\"><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;客户端就一个函数完成了一次通信。在这里<span lang=\"EN-US\">IP</span>地址为何用<span lang=\"EN-US\">127.0.0.1</span>呢？使用这个<span lang=\"EN-US\">IP</span>地址，服务器端和客户端就能运行在同一台机器上，这样调试方便多了。当然你可以在你朋友的机器上运行<span lang=\"EN-US\">Server</span>程序<span lang=\"EN-US\">(</span>本人在局域网中测试过<span lang=\"EN-US\">)</span>，在自己的机器上运行<span lang=\"EN-US\">Client</span>程序，当然输入的<span lang=\"EN-US\">IP</span>地址就该是你朋友机器的<span lang=\"EN-US\">IP</span>地址了。<br><span lang=\"EN-US\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简单的理论和实践都说了，现在<span lang=\"EN-US\">Socket</span>编程不神秘了吧？希望对你有些帮助。</span></span></p></span></span></span></span></span></div></div>"
    }
  ]
}
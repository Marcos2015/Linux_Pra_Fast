{
  "title": "C++ Metaprogramming 和 Boost MPL （二）",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"top\" style=\"margin: 0px; padding: 10px 140px 10px 20px; width: 520px; height: auto; border: 0px; display: inline-block; color: rgb(0, 0, 0); font-family: arial, helvetica, clean, sans-serif; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><div class=\"tag\" style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); font-family: 'Microsoft YaHei'; cursor: default;\">作者：<a href=\"http://kuibyshev.bokee.com/\" style=\"text-decoration: none; color: rgb(33, 33, 33); margin: 0px; padding: 0px; font-weight: bold;\"><span itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\" style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); cursor: default;\">&nbsp;<span itemprop=\"name\" style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); cursor: default;\">古比雪夫</span></span></a></span><span itemprop=\"datePublished\" content=\"2005-05-19 22:21\" style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); font-family: 'Microsoft YaHei'; cursor: default;\">2005-05-19 22:21</span><span style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); font-family: 'Microsoft YaHei'; cursor: default;\">分类：<a href=\"http://kuibyshev.bokee.com/category/0/1\" style=\"text-decoration: none; color: rgb(33, 33, 33); margin: 0px; padding: 0px; font-weight: bold;\">默认分类</a></span><span style=\"margin: 0px 10px 0px 0px; line-height: 20px; color: rgb(117, 117, 117); font-family: 'Microsoft YaHei'; cursor: default;\">标签：</span></div></div><span style=\"color: rgb(0, 0, 0); font-family: arial, helvetica, clean, sans-serif; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"></span><div class=\"cnt\" style=\"margin: 0px; padding: 10px 20px; text-align: center; color: rgb(0, 0, 0); font-family: arial, helvetica, clean, sans-serif; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><div itemprop=\"articleBody\" class=\"txt clearfix\" style=\"margin: 0px; padding: 5px 0px; zoom: 1; width: 640px; word-wrap: break-word; line-height: 24px; color: rgb(92, 92, 92); font-size: 14px; font-family: &quot;Microsoft YaHei&quot;; cursor: default; letter-spacing: 1px; text-align: left;\"><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\"><font size=\"2\">模板元编程的原理</font></span></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font face=\"Times New Roman\" size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 36pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -36pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">（一）<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;&nbsp;&nbsp;</span></font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">函数式编程</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">1</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">．函数式编程的概念</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">从上面的例子可以看出，由于模板元编程借助的是</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">模板的特化能力，使它的设计方法迥异于普通的</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">编程习惯。比如我们不能够在元函数中使用变量，编译期显然只可能接受静态定义的常量，也就因此，我们不能够使用传统意义上的循环；要实现任何分支选择，唯一的方法是调用其它元函数或者使用递归。这种编程风格正是具有重要理论意义的函数式编程（</span><span lang=\"EN-US\"><font face=\"Times New Roman\">Functional Programming</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">）。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">Kenneth C. Louden</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">指出函数式编程有如下的特点：</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 17pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -8.5pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\" style=\"font-family: Wingdings;\">l<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;</span></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">所有的过程都是函数，并且严格地区分输入值（参数）和输出值（结果）。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 17pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -8.5pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\" style=\"font-family: Wingdings;\">l<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;</span></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">没有变量或赋值（变量被参数替代）。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 17pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -8.5pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\" style=\"font-family: Wingdings;\">l<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;</span></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">没有循环（循环杯递归调用替代）。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 17pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -8.5pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\" style=\"font-family: Wingdings;\">l<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;</span></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">函数的值只取决于它的参数的值而与求得参数值的先后或者调用函数的路径无关。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 17pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: -8.5pt; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\" style=\"font-family: Wingdings;\">l<span times=\"\" new=\"\" roman\"\"=\"\">&nbsp;</span></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">函数是一类值。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">上述的最后一点是一个很重要的性质。所谓“函数是一类值（</span><span lang=\"EN-US\"><font face=\"Times New Roman\">First Class Value</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">）”指的是函数和值是同等的概念，一个函数可以作为另外一个函数的参数，也可以作为值使用。如果函数可以作为一类值使用，那么我们就可以写出一些函数，使得这些函数接受其它函数作为参数并返回另外一个函数。比如定义了</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">和</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">g</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">两个函数，用</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">compose(f,g)</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的风格就可以生成另外一个函数，使得这个函数执行</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f(g(x))</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的操作，则可称</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">compose</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">为高阶函数（</span><span lang=\"EN-US\"><font face=\"Times New Roman\">Higher-order Function</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">）。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font face=\"Times New Roman\" size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">2</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">．函数式编程在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">中的常用方法</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">如果排除上述的最后一点，那么</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">语言已经能完整模拟出函数式编程的风格，但是在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">语言中，函数却并不能作为一类值。也许我们会想到函数指针，但是试想如果我们的函数需要返回另一个函数的指针：</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">typedef int(*IntProc) (int);</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">IntProc compose(IntProc f, IntProc g)</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int tempProc(int x)</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f(g(x));</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tempProc;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">这个例子是不能通过编译的，因为</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">语言禁止在函数中定义函数。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">幸运的是，我们可以在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">中利用类和模板来解决这个问题，因为</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">允许定义（）操作符，建立所谓的仿函数（</span><span lang=\"EN-US\"><font face=\"Times New Roman\">Functor</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">）。所以对象既可以作为值来传递和调用，又可以像函数一样用</span><span lang=\"EN-US\"><font face=\"Times New Roman\">obj(x)</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的语法来使用了；另一方面，利用模板对返回值的控制，就可以避免上面无法定义内部函数的矛盾了。例如在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">GCC</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的</span><span lang=\"EN-US\"><font face=\"Times New Roman\">&nbsp;STL</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">中有一个不属于</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">标准的</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">compose1</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">函数，可以接受两个定义了（）操作符的对象作为函数参数，并返回一个能进行</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f(g(x))</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">运算的对象：</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">template &lt;class Operation1, class Operation2&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">class unary_compose</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;: public unary_function&lt;typename Operation2::argument_type,</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typename Operation1::result_type&gt; {</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">protected:</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;Operation1 op1;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;Operation2 op2;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">public:</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;unary_compose(const Operation1&amp; x, const Operation2&amp; y) :</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 52.5pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">op1(x), op2(y) {}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;typename Operation1::result_type</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;operator()(const typename Operation2::argument_type&amp; x) const {</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 63pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;return op1(op2(x));</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">};</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">template &lt;class Operation1, class Operation2&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">inline unary_compose&lt;Operation1, Operation2&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">compose1(const Operation1&amp; op1, const Operation2&amp; op2) {</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 42pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;return unary_compose&lt;Operation1, Operation2&gt;(op1, op2);</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font face=\"Times New Roman\" size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">3</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">．模板元编程中的高阶函数</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">那么，使用</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的模板机制又是否可以满足元函数作为一类值使用呢？答案是肯定的，不过解答稍稍有点复杂，并不像上述</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">compose1</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的解决方法一样优雅。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">#include &lt;iostream&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">using namespace std;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">template&lt;int n&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">struct f</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static const int value=n+1;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">};</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">template &lt;int n&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">struct g</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static const int value=n+2;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">};</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">template &lt;template &lt;int n&gt; class op1, template &lt;int n&gt; class op2&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">struct compose</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template &lt;int x&gt;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct return_type</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static const int value=op1&lt;op2&lt;x&gt;::value&gt;::value;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\">&nbsp;</font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">int main()</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">{</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">&nbsp;&nbsp;&nbsp;&nbsp;typedef compose&lt;f, g&gt;::return_type&lt;6&gt; h;</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 21pt; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">cout&lt;&lt;h::value&lt;&lt;std::endl; //6+2+1=9</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt 21pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"><font size=\"2\">}</font></span></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">在这里，</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">和</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">g</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">是两个元函数，</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">compose</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">接受</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">和</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">g</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">作为参数，生成了一个可以计算</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f(g(x))</span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的新函数，看起来能够得出正确的答案，但是却仍然有两个问题。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">首先，在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">compose</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的模板参数中，不能直接使用类似于</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">template &lt;class op1, class op2&gt;</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">的写法，原因是</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">C++</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">的模板机制严格区分模板和类，我们无法把模板直接作为另一个模板的参数，唯一可行的方法是使用“作为类模板的模板参数（</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">Class Template Template Parameter</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">）”，这样就把</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">f</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">和</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">g</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">的参数类型限制死了。不过我们似乎仍然可以勉强接受这个限制，事实上模板机制对非类型的模板参数本来就存在着限制，现在的</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">C++</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">标准禁止浮点数、类对象和内部链接对象（比如字符串和全局指针）作为模板参数，所以非类型的模板参数实际上只剩下布尔型和整型可用，写成类似</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">composeint</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">和</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">composebool&nbsp;</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">的两个类仍然有可行性（模板参数是无法重载的）。</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">其次，同样是</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">的模板机制严格区分模板和类的缘故，返回值</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">return_type</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">是一个模板而并不是一个元函数（或者说是类）。</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">上述两点都隐含着一个最大共同问题，</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">对“作为类模板的模板参数”作了很严格的限制，所以一旦定义了以后，其模板参数的个数不能改变。当然，在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">STL</font></span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">里面我们似乎习惯了这个限制并用重新定义函数的方式来避开这个限制。但在作为函数式编程的模板元编程里面，似乎应该要求以更优雅的方式来解决（事实上即使是常规编程下的高阶函数，也有函数库提供了更好的组合方式</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\">[5]</span><span courier=\"\" new\";=\"\" mso-hansi-font-family:=\"\" \"courier=\"\" mso-bidi-font-family:=\"\" new\"\"=\"\" style=\"font-family: 宋体;\">）。</span><span lang=\"EN-US\" courier=\"\" new\"\"=\"\"></span></font></p><p style=\"margin: 20px 0px; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">现在我们仅仅用到了模板元编程的数值计算能力，还没有引入它对类型的处理能力，稍后在分析</span><span lang=\"EN-US\"><font face=\"Times New Roman\">MPL</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">时会重新讨论到这个问题，还会显示出高阶函数更大的使用障碍。幸而</span><span lang=\"EN-US\"><font face=\"Times New Roman\">MPL</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">提供了很好的解决方案，通过增加包装层和使用</span><span lang=\"EN-US\"><font face=\"Times New Roman\">lambda</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">演算的概念，高阶函数依然能用上，使得模板元编程能够符合函数式编程的要求。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span lang=\"EN-US\"><font face=\"Times New Roman\">Krzysztof Czarnecki</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">曾利用模板元编程实现了一个很简单的</span><span lang=\"EN-US\"><font face=\"Times New Roman\">LISP</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">，而</span><span lang=\"EN-US\"><font face=\"Times New Roman\">LISP</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">就是典型的函数式编程语言。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">总之既然</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">模板能够使用函数式编程，那么也就意味着这个</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">语言的子集已经是图灵完备的，因为任何计算都可以使用函数来描述，理论上模板元编程应该能完成图灵机上的一切运算。</span></font></p><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt; padding: 0px; line-height: 24px; color: rgb(92, 92, 92); text-indent: 2em; word-break: break-all;\"><font size=\"2\"><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">当然，理论上的完备并不意味着实用性。尽管在</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">中能够在某种程度上使用函数式编程的风格，但是从实用性和效率来说，大概没有程序员使用纯粹的函数编程方式。不过，在进行模板元编程的时候，由于语法的特殊性，却不得不使用纯粹函数式编程。因此，模板元编程与传统的</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">命令式编程相差很大，并不符合大多数</span><span lang=\"EN-US\"><font face=\"Times New Roman\">C++</font></span><span times=\"\" new=\"\" roman\";=\"\" mso-hansi-font-family:=\"\" \"times=\"\" roman\"\"=\"\" style=\"font-family: 宋体;\">程序员的习惯，不但会带来编写上的困难，还增加了许多程序理解上的难度。那么，为什么要使用模板元编程呢？首先我们应当了解模板元编程能够做些什么，其次，模板元编程有可能用在什么地方。</span></font></p></div></div>"
    }
  ]
}
{
  "title": "IO多路复用之select总结",
  "cells": [
    {
      "type": "text",
      "data": "<h1 class=\"postTitle\" style=\"color: rgb(0, 0, 0); font-family: Arial;\"><strong style=\"color: rgb(0, 0, 0); font-size: 14px;\">1、基本概念</strong><br></h1><div id=\"cnblogs_post_body\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><p>　　IO多路复用是指内核一旦发现进程指定的一个或者多个IO条件准备读取，它就通知该进程。IO多路复用适用如下场合：</p><p>　　（1）当客户处理多个描述字时（一般是交互式输入和网络套接口），必须使用I/O复用。</p><p>　　（2）当一个客户同时处理多个套接口时，而这种情况是可能的，但很少出现。</p><p>　　（3）如果一个TCP服务器既要处理监听套接口，又要处理已连接套接口，一般也要用到I/O复用。</p><p>　　（4）如果一个服务器即要处理TCP，又要处理UDP，一般要使用I/O复用。</p><p>　　（5）如果一个服务器要处理多个服务或多个协议，一般要使用I/O复用。</p><p>　　与多进程和多线程技术相比，I/O多路复用技术的最大优势是系统开销小，系统不必创建进程/线程，也不必维护这些进程/线程，从而大大减小了系统的开销。</p><p><strong>2、select函数</strong></p><p>　　该函数准许进程指示内核等待多个事件中的任何一个发送，并只在有一个或多个事件发生或经历一段指定的时间后才唤醒。函数原型如下：</p><div class=\"cnblogs_code\"><pre>#include &lt;sys/<span style=\"color: rgb(0, 0, 255);\">select</span>.h&gt;<span style=\"color: rgb(0, 0, 0);\">\n#include </span>&lt;sys/<span style=\"color: rgb(0, 0, 255);\">time.h</span>&gt;\n\n<span style=\"color: rgb(0, 0, 255);\">int</span> <span style=\"color: rgb(0, 0, 255);\">select</span>(<span style=\"color: rgb(0, 0, 255);\">int</span> maxfdp1,fd_set *readset,fd_set *writeset,fd_set *exceptset,<span style=\"color: rgb(0, 0, 255);\">const</span> <span style=\"color: rgb(0, 0, 255);\">struct</span> timeval *timeout)<br>返回值：就绪描述符的数目，超时返回0，出错返回-1</pre></div><p>函数参数介绍如下：</p><p>（1）第一个参数maxfdp1指定待测试的描述字个数，它的值是待测试的最大描述字加1（因此把该参数命名为maxfdp1），描述字0、1、2...maxfdp1-1均将被测试。</p><p>（2）中间的三个参数readset、writeset和exceptset指定我们要让内核测试读、写和异常条件的描 述字。如果对某一个的条件不感兴趣，就可以把它设为空指针。struct fd_set可以理解为一个集合，这个集合中存放的是文件描述符，可通过以下四个宏进行设置：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void FD_ZERO(fd_set *fdset);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //清空集合</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void FD_SET(int fd, fd_set *fdset);&nbsp;&nbsp; //将一个给定的文件描述符加入集合之中</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void FD_CLR(int fd, fd_set *fdset);&nbsp;&nbsp; //将一个给定的文件描述符从集合中删除</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int FD_ISSET(int fd, fd_set *fdset);&nbsp;&nbsp; // 检查集合中指定的文件描述符是否可以读写&nbsp;</p><p>（3）timeout告知内核等待所指定描述字中的任何一个就绪可花多少时间。其timeval结构用于指定这段时间的秒数和微秒数。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct timeval{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long tv_sec;&nbsp;&nbsp; //seconds</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long tv_usec;&nbsp; //microseconds</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</p><p>这个参数有三种可能：</p><p>（1）永远等待下去：仅在有一个描述字准备好I/O时才返回。为此，把该参数设置为空指针NULL。</p><p>（2）等待一段固定时间：在有一个描述字准备好I/O时返回，但是不超过由该参数所指向的timeval结构中指定的秒数和微秒数。</p><p>（3）根本不等待：检查描述字后立即返回，这称为轮询。为此，该参数必须指向一个timeval结构，而且其中的定时器值必须为0。</p><p><strong>3、测试程序</strong></p><p>　　写一个TCP回射程序，程序的功能是：客户端向服务器发送信息，服务器接收并原样发送给客户端，客户端显示出接收到的信息。</p><p>服务端程序如下所示：</p><div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" width=\"20\" height=\"20\"></a></span></div><pre><span style=\"color: rgb(0, 128, 128);\">  1</span> #include &lt;stdio.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  2</span> #include &lt;stdlib.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  3</span> #include &lt;<span style=\"color: rgb(0, 0, 255);\">string</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  4</span> #include &lt;errno.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  5</span> \n<span style=\"color: rgb(0, 128, 128);\">  6</span> #include &lt;netinet/<span style=\"color: rgb(0, 0, 255);\">in</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  7</span> #include &lt;sys/socket.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  8</span> #include &lt;sys/<span style=\"color: rgb(0, 0, 255);\">select</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">  9</span> #include &lt;unistd.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 10</span> #include &lt;sys/types.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 11</span> \n<span style=\"color: rgb(0, 128, 128);\"> 12</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> IPADDRESS   \"127.0.0.1\"\n<span style=\"color: rgb(0, 128, 128);\"> 13</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> PORT        8787\n<span style=\"color: rgb(0, 128, 128);\"> 14</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> MAXLINE     1024\n<span style=\"color: rgb(0, 128, 128);\"> 15</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> LISTENQ     5\n<span style=\"color: rgb(0, 128, 128);\"> 16</span> \n<span style=\"color: rgb(0, 128, 128);\"> 17</span> <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">函数声明\n</span><span style=\"color: rgb(0, 128, 128);\"> 18</span> <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">创建套接字并进行绑定</span>\n<span style=\"color: rgb(0, 128, 128);\"> 19</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">int</span> socket_bind(<span style=\"color: rgb(0, 0, 255);\">const</span> <span style=\"color: rgb(0, 0, 255);\">char</span>* ip,<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> port);\n</span><span style=\"color: rgb(0, 128, 128);\"> 20</span> <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">IO多路复用select</span>\n<span style=\"color: rgb(0, 128, 128);\"> 21</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> do_select(<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> listenfd);\n</span><span style=\"color: rgb(0, 128, 128);\"> 22</span> <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">处理多个连接</span>\n<span style=\"color: rgb(0, 128, 128);\"> 23</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> handle_connection(<span style=\"color: rgb(0, 0, 255);\">int</span> *connfds,<span style=\"color: rgb(0, 0, 255);\">int</span> num,fd_set *prset,fd_set *<span style=\"color: rgb(0, 0, 0);\">pallset);\n</span><span style=\"color: rgb(0, 128, 128);\"> 24</span> \n<span style=\"color: rgb(0, 128, 128);\"> 25</span> <span style=\"color: rgb(0, 0, 255);\">int</span> main(<span style=\"color: rgb(0, 0, 255);\">int</span> argc,<span style=\"color: rgb(0, 0, 255);\">char</span> *<span style=\"color: rgb(0, 0, 0);\">argv[])\n</span><span style=\"color: rgb(0, 128, 128);\"> 26</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\"> 27</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\">  listenfd,connfd,sockfd;\n</span><span style=\"color: rgb(0, 128, 128);\"> 28</span>     <span style=\"color: rgb(0, 0, 255);\">struct</span><span style=\"color: rgb(0, 0, 0);\"> sockaddr_in cliaddr;\n</span><span style=\"color: rgb(0, 128, 128);\"> 29</span> <span style=\"color: rgb(0, 0, 0);\">    socklen_t cliaddrlen;\n</span><span style=\"color: rgb(0, 128, 128);\"> 30</span>     listenfd =<span style=\"color: rgb(0, 0, 0);\"> socket_bind(IPADDRESS,PORT);\n</span><span style=\"color: rgb(0, 128, 128);\"> 31</span> <span style=\"color: rgb(0, 0, 0);\">    listen(listenfd,LISTENQ);\n</span><span style=\"color: rgb(0, 128, 128);\"> 32</span> <span style=\"color: rgb(0, 0, 0);\">    do_select(listenfd);\n</span><span style=\"color: rgb(0, 128, 128);\"> 33</span>     <span style=\"color: rgb(0, 0, 255);\">return</span> <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\"> 34</span> <span style=\"color: rgb(0, 0, 0);\">}\n</span><span style=\"color: rgb(0, 128, 128);\"> 35</span> \n<span style=\"color: rgb(0, 128, 128);\"> 36</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">int</span> socket_bind(<span style=\"color: rgb(0, 0, 255);\">const</span> <span style=\"color: rgb(0, 0, 255);\">char</span>* ip,<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> port)\n</span><span style=\"color: rgb(0, 128, 128);\"> 37</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\"> 38</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\">  listenfd;\n</span><span style=\"color: rgb(0, 128, 128);\"> 39</span>     <span style=\"color: rgb(0, 0, 255);\">struct</span><span style=\"color: rgb(0, 0, 0);\"> sockaddr_in servaddr;\n</span><span style=\"color: rgb(0, 128, 128);\"> 40</span>     listenfd = socket(AF_INET,SOCK_STREAM,<span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 41</span>     <span style=\"color: rgb(0, 0, 255);\">if</span> (listenfd == -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\"> 42</span> <span style=\"color: rgb(0, 0, 0);\">    {\n</span><span style=\"color: rgb(0, 128, 128);\"> 43</span>         perror(<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">socket error:</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 44</span>         exit(<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 45</span> <span style=\"color: rgb(0, 0, 0);\">    }\n</span><span style=\"color: rgb(0, 128, 128);\"> 46</span>     bzero(&amp;servaddr,<span style=\"color: rgb(0, 0, 255);\">sizeof</span><span style=\"color: rgb(0, 0, 0);\">(servaddr));\n</span><span style=\"color: rgb(0, 128, 128);\"> 47</span>     servaddr.sin_family =<span style=\"color: rgb(0, 0, 0);\"> AF_INET;\n</span><span style=\"color: rgb(0, 128, 128);\"> 48</span>     inet_pton(AF_INET,ip,&amp;<span style=\"color: rgb(0, 0, 0);\">servaddr.sin_addr);\n</span><span style=\"color: rgb(0, 128, 128);\"> 49</span>     servaddr.sin_port =<span style=\"color: rgb(0, 0, 0);\"> htons(port);\n</span><span style=\"color: rgb(0, 128, 128);\"> 50</span>     <span style=\"color: rgb(0, 0, 255);\">if</span> (bind(listenfd,(<span style=\"color: rgb(0, 0, 255);\">struct</span> sockaddr*)&amp;servaddr,<span style=\"color: rgb(0, 0, 255);\">sizeof</span>(servaddr)) == -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\"> 51</span> <span style=\"color: rgb(0, 0, 0);\">    {\n</span><span style=\"color: rgb(0, 128, 128);\"> 52</span>         perror(<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">bind error: </span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 53</span>         exit(<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 54</span> <span style=\"color: rgb(0, 0, 0);\">    }\n</span><span style=\"color: rgb(0, 128, 128);\"> 55</span>     <span style=\"color: rgb(0, 0, 255);\">return</span><span style=\"color: rgb(0, 0, 0);\"> listenfd;\n</span><span style=\"color: rgb(0, 128, 128);\"> 56</span> <span style=\"color: rgb(0, 0, 0);\">}\n</span><span style=\"color: rgb(0, 128, 128);\"> 57</span> \n<span style=\"color: rgb(0, 128, 128);\"> 58</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> do_select(<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> listenfd)\n</span><span style=\"color: rgb(0, 128, 128);\"> 59</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\"> 60</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\">  connfd,sockfd;\n</span><span style=\"color: rgb(0, 128, 128);\"> 61</span>     <span style=\"color: rgb(0, 0, 255);\">struct</span><span style=\"color: rgb(0, 0, 0);\"> sockaddr_in cliaddr;\n</span><span style=\"color: rgb(0, 128, 128);\"> 62</span> <span style=\"color: rgb(0, 0, 0);\">    socklen_t cliaddrlen;\n</span><span style=\"color: rgb(0, 128, 128);\"> 63</span> <span style=\"color: rgb(0, 0, 0);\">    fd_set  rset,allset;\n</span><span style=\"color: rgb(0, 128, 128);\"> 64</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> maxfd,maxi;\n</span><span style=\"color: rgb(0, 128, 128);\"> 65</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> i;\n</span><span style=\"color: rgb(0, 128, 128);\"> 66</span>     <span style=\"color: rgb(0, 0, 255);\">int</span> clientfds[FD_SETSIZE];  <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">保存客户连接描述符</span>\n<span style=\"color: rgb(0, 128, 128);\"> 67</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> nready;\n</span><span style=\"color: rgb(0, 128, 128);\"> 68</span>     <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">初始化客户连接描述符</span>\n<span style=\"color: rgb(0, 128, 128);\"> 69</span>     <span style=\"color: rgb(0, 0, 255);\">for</span> (i = <span style=\"color: rgb(128, 0, 128);\">0</span>;i &lt; FD_SETSIZE;i++<span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\"> 70</span>         clientfds[i] = -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\"> 71</span>     maxi = -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\"> 72</span>     FD_ZERO(&amp;<span style=\"color: rgb(0, 0, 0);\">allset);\n</span><span style=\"color: rgb(0, 128, 128);\"> 73</span>     <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">添加监听描述符</span>\n<span style=\"color: rgb(0, 128, 128);\"> 74</span>     FD_SET(listenfd,&amp;<span style=\"color: rgb(0, 0, 0);\">allset);\n</span><span style=\"color: rgb(0, 128, 128);\"> 75</span>     maxfd =<span style=\"color: rgb(0, 0, 0);\"> listenfd;\n</span><span style=\"color: rgb(0, 128, 128);\"> 76</span>     <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">循环处理</span>\n<span style=\"color: rgb(0, 128, 128);\"> 77</span>     <span style=\"color: rgb(0, 0, 255);\">for</span><span style=\"color: rgb(0, 0, 0);\"> ( ; ; )\n</span><span style=\"color: rgb(0, 128, 128);\"> 78</span> <span style=\"color: rgb(0, 0, 0);\">    {\n</span><span style=\"color: rgb(0, 128, 128);\"> 79</span>         rset =<span style=\"color: rgb(0, 0, 0);\"> allset;\n</span><span style=\"color: rgb(0, 128, 128);\"> 80</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">获取可用描述符的个数</span>\n<span style=\"color: rgb(0, 128, 128);\"> 81</span>         nready = <span style=\"color: rgb(0, 0, 255);\">select</span>(maxfd+<span style=\"color: rgb(128, 0, 128);\">1</span>,&amp;<span style=\"color: rgb(0, 0, 0);\">rset,NULL,NULL,NULL);\n</span><span style=\"color: rgb(0, 128, 128);\"> 82</span>         <span style=\"color: rgb(0, 0, 255);\">if</span> (nready == -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\"> 83</span> <span style=\"color: rgb(0, 0, 0);\">        {\n</span><span style=\"color: rgb(0, 128, 128);\"> 84</span>             perror(<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">select error:</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 85</span>             exit(<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 86</span> <span style=\"color: rgb(0, 0, 0);\">        }\n</span><span style=\"color: rgb(0, 128, 128);\"> 87</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">测试监听描述符是否准备好</span>\n<span style=\"color: rgb(0, 128, 128);\"> 88</span>         <span style=\"color: rgb(0, 0, 255);\">if</span> (FD_ISSET(listenfd,&amp;<span style=\"color: rgb(0, 0, 0);\">rset))\n</span><span style=\"color: rgb(0, 128, 128);\"> 89</span> <span style=\"color: rgb(0, 0, 0);\">        {\n</span><span style=\"color: rgb(0, 128, 128);\"> 90</span>             cliaddrlen = <span style=\"color: rgb(0, 0, 255);\">sizeof</span><span style=\"color: rgb(0, 0, 0);\">(cliaddr);\n</span><span style=\"color: rgb(0, 128, 128);\"> 91</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">接受新的连接</span>\n<span style=\"color: rgb(0, 128, 128);\"> 92</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> ((connfd = accept(listenfd,(<span style=\"color: rgb(0, 0, 255);\">struct</span> sockaddr*)&amp;cliaddr,&amp;cliaddrlen)) == -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\"> 93</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\"> 94</span>                 <span style=\"color: rgb(0, 0, 255);\">if</span> (errno ==<span style=\"color: rgb(0, 0, 0);\"> EINTR)\n</span><span style=\"color: rgb(0, 128, 128);\"> 95</span>                     <span style=\"color: rgb(0, 0, 255);\">continue</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\"> 96</span>                 <span style=\"color: rgb(0, 0, 255);\">else</span>\n<span style=\"color: rgb(0, 128, 128);\"> 97</span> <span style=\"color: rgb(0, 0, 0);\">                {\n</span><span style=\"color: rgb(0, 128, 128);\"> 98</span>                    perror(<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">accept error:</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\"> 99</span>                    exit(<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">100</span> <span style=\"color: rgb(0, 0, 0);\">                }\n</span><span style=\"color: rgb(0, 128, 128);\">101</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">102</span>             fprintf(stdout,<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">accept a new client: %s:%d\\n</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">, inet_ntoa(cliaddr.sin_addr),cliaddr.sin_port);\n</span><span style=\"color: rgb(0, 128, 128);\">103</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">将新的连接描述符添加到数组中</span>\n<span style=\"color: rgb(0, 128, 128);\">104</span>             <span style=\"color: rgb(0, 0, 255);\">for</span> (i = <span style=\"color: rgb(128, 0, 128);\">0</span>;i &lt;FD_SETSIZE;i++<span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">105</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\">106</span>                 <span style=\"color: rgb(0, 0, 255);\">if</span> (clientfds[i] &lt; <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">107</span> <span style=\"color: rgb(0, 0, 0);\">                {\n</span><span style=\"color: rgb(0, 128, 128);\">108</span>                     clientfds[i] =<span style=\"color: rgb(0, 0, 0);\"> connfd;\n</span><span style=\"color: rgb(0, 128, 128);\">109</span>                     <span style=\"color: rgb(0, 0, 255);\">break</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">110</span> <span style=\"color: rgb(0, 0, 0);\">                }\n</span><span style=\"color: rgb(0, 128, 128);\">111</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">112</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> (i ==<span style=\"color: rgb(0, 0, 0);\"> FD_SETSIZE)\n</span><span style=\"color: rgb(0, 128, 128);\">113</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\">114</span>                 fprintf(stderr,<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">too many clients.\\n</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">115</span>                 exit(<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">116</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">117</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">将新的描述符添加到读描述符集合中</span>\n<span style=\"color: rgb(0, 128, 128);\">118</span>             FD_SET(connfd,&amp;<span style=\"color: rgb(0, 0, 0);\">allset);\n</span><span style=\"color: rgb(0, 128, 128);\">119</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">描述符个数</span>\n<span style=\"color: rgb(0, 128, 128);\">120</span>             maxfd = (connfd &gt; maxfd ?<span style=\"color: rgb(0, 0, 0);\"> connfd : maxfd);\n</span><span style=\"color: rgb(0, 128, 128);\">121</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">记录客户连接套接字的个数</span>\n<span style=\"color: rgb(0, 128, 128);\">122</span>             maxi = (i &gt; maxi ?<span style=\"color: rgb(0, 0, 0);\"> i : maxi);\n</span><span style=\"color: rgb(0, 128, 128);\">123</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> (--nready &lt;= <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">124</span>                 <span style=\"color: rgb(0, 0, 255);\">continue</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">125</span> <span style=\"color: rgb(0, 0, 0);\">        }\n</span><span style=\"color: rgb(0, 128, 128);\">126</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">处理客户连接</span>\n<span style=\"color: rgb(0, 128, 128);\">127</span>         handle_connection(clientfds,maxi,&amp;rset,&amp;<span style=\"color: rgb(0, 0, 0);\">allset);\n</span><span style=\"color: rgb(0, 128, 128);\">128</span> <span style=\"color: rgb(0, 0, 0);\">    }\n</span><span style=\"color: rgb(0, 128, 128);\">129</span> <span style=\"color: rgb(0, 0, 0);\">}\n</span><span style=\"color: rgb(0, 128, 128);\">130</span> \n<span style=\"color: rgb(0, 128, 128);\">131</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> handle_connection(<span style=\"color: rgb(0, 0, 255);\">int</span> *connfds,<span style=\"color: rgb(0, 0, 255);\">int</span> num,fd_set *prset,fd_set *<span style=\"color: rgb(0, 0, 0);\">pallset)\n</span><span style=\"color: rgb(0, 128, 128);\">132</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\">133</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> i,n;\n</span><span style=\"color: rgb(0, 128, 128);\">134</span>     <span style=\"color: rgb(0, 0, 255);\">char</span><span style=\"color: rgb(0, 0, 0);\"> buf[MAXLINE];\n</span><span style=\"color: rgb(0, 128, 128);\">135</span>     memset(buf,<span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">,MAXLINE);\n</span><span style=\"color: rgb(0, 128, 128);\">136</span>     <span style=\"color: rgb(0, 0, 255);\">for</span> (i = <span style=\"color: rgb(128, 0, 128);\">0</span>;i &lt;= num;i++<span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">137</span> <span style=\"color: rgb(0, 0, 0);\">    {\n</span><span style=\"color: rgb(0, 128, 128);\">138</span>         <span style=\"color: rgb(0, 0, 255);\">if</span> (connfds[i] &lt; <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">139</span>             <span style=\"color: rgb(0, 0, 255);\">continue</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">140</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">测试客户描述符是否准备好</span>\n<span style=\"color: rgb(0, 128, 128);\">141</span>         <span style=\"color: rgb(0, 0, 255);\">if</span><span style=\"color: rgb(0, 0, 0);\"> (FD_ISSET(connfds[i],prset))\n</span><span style=\"color: rgb(0, 128, 128);\">142</span> <span style=\"color: rgb(0, 0, 0);\">        {\n</span><span style=\"color: rgb(0, 128, 128);\">143</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">接收客户端发送的信息</span>\n<span style=\"color: rgb(0, 128, 128);\">144</span>             n =<span style=\"color: rgb(0, 0, 0);\"> read(connfds[i],buf,MAXLINE);\n</span><span style=\"color: rgb(0, 128, 128);\">145</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> (n == <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">146</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\">147</span> <span style=\"color: rgb(0, 0, 0);\">                close(connfds[i]);\n</span><span style=\"color: rgb(0, 128, 128);\">148</span> <span style=\"color: rgb(0, 0, 0);\">                FD_CLR(connfds[i],pallset);\n</span><span style=\"color: rgb(0, 128, 128);\">149</span>                 connfds[i] = -<span style=\"color: rgb(128, 0, 128);\">1</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">150</span>                 <span style=\"color: rgb(0, 0, 255);\">continue</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">151</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">152</span>             printf(<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">read msg is: </span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">153</span> <span style=\"color: rgb(0, 0, 0);\">            write(STDOUT_FILENO,buf,n);\n</span><span style=\"color: rgb(0, 128, 128);\">154</span>             <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">向客户端发送buf</span>\n<span style=\"color: rgb(0, 128, 128);\">155</span> <span style=\"color: rgb(0, 0, 0);\">            write(connfds[i],buf,n);\n</span><span style=\"color: rgb(0, 128, 128);\">156</span> <span style=\"color: rgb(0, 0, 0);\">        }\n</span><span style=\"color: rgb(0, 128, 128);\">157</span> <span style=\"color: rgb(0, 0, 0);\">    }\n</span><span style=\"color: rgb(0, 128, 128);\">158</span> }</pre><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" width=\"20\" height=\"20\"></a></span></div></div><p>客户端程序如下：</p><div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" width=\"20\" height=\"20\"></a></span></div><pre><span style=\"color: rgb(0, 128, 128);\"> 1</span> #include &lt;netinet/<span style=\"color: rgb(0, 0, 255);\">in</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 2</span> #include &lt;sys/socket.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 3</span> #include &lt;stdio.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 4</span> #include &lt;<span style=\"color: rgb(0, 0, 255);\">string</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 5</span> #include &lt;stdlib.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 6</span> #include &lt;sys/<span style=\"color: rgb(0, 0, 255);\">select</span>.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 7</span> #include &lt;time.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 8</span> #include &lt;unistd.h&gt;\n<span style=\"color: rgb(0, 128, 128);\"> 9</span> #include &lt;sys/types.h&gt;\n<span style=\"color: rgb(0, 128, 128);\">10</span> \n<span style=\"color: rgb(0, 128, 128);\">11</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> MAXLINE     1024\n<span style=\"color: rgb(0, 128, 128);\">12</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> IPADDRESS   \"127.0.0.1\"\n<span style=\"color: rgb(0, 128, 128);\">13</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> SERV_PORT   8787\n<span style=\"color: rgb(0, 128, 128);\">14</span> \n<span style=\"color: rgb(0, 128, 128);\">15</span> <span style=\"color: rgb(0, 0, 255);\">#define</span> max(a,b) (a &gt; b) ? a : b\n<span style=\"color: rgb(0, 128, 128);\">16</span> \n<span style=\"color: rgb(0, 128, 128);\">17</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> handle_connection(<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> sockfd);\n</span><span style=\"color: rgb(0, 128, 128);\">18</span> \n<span style=\"color: rgb(0, 128, 128);\">19</span> <span style=\"color: rgb(0, 0, 255);\">int</span> main(<span style=\"color: rgb(0, 0, 255);\">int</span> argc,<span style=\"color: rgb(0, 0, 255);\">char</span> *<span style=\"color: rgb(0, 0, 0);\">argv[])\n</span><span style=\"color: rgb(0, 128, 128);\">20</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\">21</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\">                 sockfd;\n</span><span style=\"color: rgb(0, 128, 128);\">22</span>     <span style=\"color: rgb(0, 0, 255);\">struct</span><span style=\"color: rgb(0, 0, 0);\"> sockaddr_in  servaddr;\n</span><span style=\"color: rgb(0, 128, 128);\">23</span>     sockfd = socket(AF_INET,SOCK_STREAM,<span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">24</span>     bzero(&amp;servaddr,<span style=\"color: rgb(0, 0, 255);\">sizeof</span><span style=\"color: rgb(0, 0, 0);\">(servaddr));\n</span><span style=\"color: rgb(0, 128, 128);\">25</span>     servaddr.sin_family =<span style=\"color: rgb(0, 0, 0);\"> AF_INET;\n</span><span style=\"color: rgb(0, 128, 128);\">26</span>     servaddr.sin_port =<span style=\"color: rgb(0, 0, 0);\"> htons(SERV_PORT);\n</span><span style=\"color: rgb(0, 128, 128);\">27</span>     inet_pton(AF_INET,IPADDRESS,&amp;<span style=\"color: rgb(0, 0, 0);\">servaddr.sin_addr);\n</span><span style=\"color: rgb(0, 128, 128);\">28</span>     connect(sockfd,(<span style=\"color: rgb(0, 0, 255);\">struct</span> sockaddr*)&amp;servaddr,<span style=\"color: rgb(0, 0, 255);\">sizeof</span><span style=\"color: rgb(0, 0, 0);\">(servaddr));\n</span><span style=\"color: rgb(0, 128, 128);\">29</span>     <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">处理连接描述符</span>\n<span style=\"color: rgb(0, 128, 128);\">30</span> <span style=\"color: rgb(0, 0, 0);\">    handle_connection(sockfd);\n</span><span style=\"color: rgb(0, 128, 128);\">31</span>     <span style=\"color: rgb(0, 0, 255);\">return</span> <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">32</span> <span style=\"color: rgb(0, 0, 0);\">}\n</span><span style=\"color: rgb(0, 128, 128);\">33</span> \n<span style=\"color: rgb(0, 128, 128);\">34</span> <span style=\"color: rgb(0, 0, 255);\">static</span> <span style=\"color: rgb(0, 0, 255);\">void</span> handle_connection(<span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> sockfd)\n</span><span style=\"color: rgb(0, 128, 128);\">35</span> <span style=\"color: rgb(0, 0, 0);\">{\n</span><span style=\"color: rgb(0, 128, 128);\">36</span>     <span style=\"color: rgb(0, 0, 255);\">char</span><span style=\"color: rgb(0, 0, 0);\">    sendline[MAXLINE],recvline[MAXLINE];\n</span><span style=\"color: rgb(0, 128, 128);\">37</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\">     maxfdp,stdineof;\n</span><span style=\"color: rgb(0, 128, 128);\">38</span> <span style=\"color: rgb(0, 0, 0);\">    fd_set  rset;\n</span><span style=\"color: rgb(0, 128, 128);\">39</span>     <span style=\"color: rgb(0, 0, 255);\">int</span><span style=\"color: rgb(0, 0, 0);\"> n;\n</span><span style=\"color: rgb(0, 128, 128);\">40</span>     FD_ZERO(&amp;<span style=\"color: rgb(0, 0, 0);\">rset);\n</span><span style=\"color: rgb(0, 128, 128);\">41</span>     <span style=\"color: rgb(0, 0, 255);\">for</span><span style=\"color: rgb(0, 0, 0);\"> (; ;)\n</span><span style=\"color: rgb(0, 128, 128);\">42</span> <span style=\"color: rgb(0, 0, 0);\">    {\n</span><span style=\"color: rgb(0, 128, 128);\">43</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">添加标准输入描述符</span>\n<span style=\"color: rgb(0, 128, 128);\">44</span>         FD_SET(STDIN_FILENO,&amp;<span style=\"color: rgb(0, 0, 0);\">rset);\n</span><span style=\"color: rgb(0, 128, 128);\">45</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">添加连接描述符</span>\n<span style=\"color: rgb(0, 128, 128);\">46</span>         FD_SET(sockfd,&amp;<span style=\"color: rgb(0, 0, 0);\">rset);\n</span><span style=\"color: rgb(0, 128, 128);\">47</span>         maxfdp =<span style=\"color: rgb(0, 0, 0);\"> max(STDIN_FILENO,sockfd);\n</span><span style=\"color: rgb(0, 128, 128);\">48</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">进行轮询</span>\n<span style=\"color: rgb(0, 128, 128);\">49</span>         <span style=\"color: rgb(0, 0, 255);\">select</span>(maxfdp+<span style=\"color: rgb(128, 0, 128);\">1</span>,&amp;<span style=\"color: rgb(0, 0, 0);\">rset,NULL,NULL,NULL);\n</span><span style=\"color: rgb(0, 128, 128);\">50</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">测试连接套接字是否准备好</span>\n<span style=\"color: rgb(0, 128, 128);\">51</span>         <span style=\"color: rgb(0, 0, 255);\">if</span> (FD_ISSET(sockfd,&amp;<span style=\"color: rgb(0, 0, 0);\">rset))\n</span><span style=\"color: rgb(0, 128, 128);\">52</span> <span style=\"color: rgb(0, 0, 0);\">        {\n</span><span style=\"color: rgb(0, 128, 128);\">53</span>             n =<span style=\"color: rgb(0, 0, 0);\"> read(sockfd,recvline,MAXLINE);\n</span><span style=\"color: rgb(0, 128, 128);\">54</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> (n == <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">55</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\">56</span>                     fprintf(stderr,<span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(128, 0, 0);\">client: server is closed.\\n</span><span style=\"color: rgb(128, 0, 0);\">\"</span><span style=\"color: rgb(0, 0, 0);\">);\n</span><span style=\"color: rgb(0, 128, 128);\">57</span> <span style=\"color: rgb(0, 0, 0);\">                    close(sockfd);\n</span><span style=\"color: rgb(0, 128, 128);\">58</span>                     FD_CLR(sockfd,&amp;<span style=\"color: rgb(0, 0, 0);\">rset);\n</span><span style=\"color: rgb(0, 128, 128);\">59</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">60</span> <span style=\"color: rgb(0, 0, 0);\">            write(STDOUT_FILENO,recvline,n);\n</span><span style=\"color: rgb(0, 128, 128);\">61</span> <span style=\"color: rgb(0, 0, 0);\">        }\n</span><span style=\"color: rgb(0, 128, 128);\">62</span>         <span style=\"color: rgb(0, 128, 0);\">//</span><span style=\"color: rgb(0, 128, 0);\">测试标准输入是否准备好</span>\n<span style=\"color: rgb(0, 128, 128);\">63</span>         <span style=\"color: rgb(0, 0, 255);\">if</span> (FD_ISSET(STDIN_FILENO,&amp;<span style=\"color: rgb(0, 0, 0);\">rset))\n</span><span style=\"color: rgb(0, 128, 128);\">64</span> <span style=\"color: rgb(0, 0, 0);\">        {\n</span><span style=\"color: rgb(0, 128, 128);\">65</span>             n =<span style=\"color: rgb(0, 0, 0);\"> read(STDIN_FILENO,sendline,MAXLINE);\n</span><span style=\"color: rgb(0, 128, 128);\">66</span>             <span style=\"color: rgb(0, 0, 255);\">if</span> (n  == <span style=\"color: rgb(128, 0, 128);\">0</span><span style=\"color: rgb(0, 0, 0);\">)\n</span><span style=\"color: rgb(0, 128, 128);\">67</span> <span style=\"color: rgb(0, 0, 0);\">            {\n</span><span style=\"color: rgb(0, 128, 128);\">68</span>                 FD_CLR(STDIN_FILENO,&amp;<span style=\"color: rgb(0, 0, 0);\">rset);\n</span><span style=\"color: rgb(0, 128, 128);\">69</span>                 <span style=\"color: rgb(0, 0, 255);\">continue</span><span style=\"color: rgb(0, 0, 0);\">;\n</span><span style=\"color: rgb(0, 128, 128);\">70</span> <span style=\"color: rgb(0, 0, 0);\">            }\n</span><span style=\"color: rgb(0, 128, 128);\">71</span> <span style=\"color: rgb(0, 0, 0);\">            write(sockfd,sendline,n);\n</span><span style=\"color: rgb(0, 128, 128);\">72</span> <span style=\"color: rgb(0, 0, 0);\">        }\n</span><span style=\"color: rgb(0, 128, 128);\">73</span> <span style=\"color: rgb(0, 0, 0);\">    }\n</span><span style=\"color: rgb(0, 128, 128);\">74</span> }</pre><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" width=\"20\" height=\"20\"></a></span></div></div><p><strong>4、程序结果</strong></p><p>　　启动服务程序，执行两个客户程序进行测试，结果如下图所示：</p><p><img src=\"quiver-image-url/80B18436569ACB7A0C8AFD85823EAEAE.png\" alt=\"\" width=\"285\" height=\"56\"></p><p><img src=\"quiver-image-url/45FE6D7FDCF62B77B5671DA0AD9C21AB.png\" alt=\"\" width=\"306\" height=\"61\"></p><p><img src=\"quiver-image-url/A7C079E29EFBB5C85746A65C528651DC.png\" alt=\"\" width=\"329\" height=\"98\"></p><p>参考：</p><p><a href=\"http://konglingchun.is-programmer.com/posts/12146.html\">http://konglingchun.is-programmer.com/posts/12146.html</a></p><p><a href=\"http://blog.163.com/smileface100@126/blog/static/27720874200951024532966/\">http://blog.163.com/smileface100@126/blog/static/27720874200951024532966/</a></p></div>"
    }
  ]
}
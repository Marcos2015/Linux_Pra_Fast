{
  "title": "在Linux(CentOS_7.2)和MacOS中安装gcc-6.2.0(包含动态库替换问题解决办法)",
  "cells": [
    {
      "type": "text",
      "data": "<div><br></div><div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><font color=\"#ff40ff\" size=\"5\" class=\"\">自动安装版本:</font></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><h4 id=\"一下载gcc-6.2.0安装包并解压\" class=\"\" style=\"font-family: Arial; font-size: 14px;\">一、下载<em class=\"\">gcc-6.2.0</em>安装包并解压:</h4><blockquote class=\"\" style=\"font-family: Arial; font-size: 14px;\"><p class=\"\">wget&nbsp;<a href=\"http://ftp.gnu.org/gnu/gcc/gcc-6.2.0/gcc-6.2.0.tar.gz\" class=\"uri\">http://ftp.gnu.org/gnu/gcc/gcc-6.2.0/gcc-6.2.0.tar.gz</a><br class=\"\">tar zxvf gcc-6.2.0.tar.gz或tar jxvf gcc-6.2.0.tar.bz2</p></blockquote><h4 id=\"二下载编译所需依赖项\" class=\"\" style=\"font-family: Arial; font-size: 14px;\">二、下载编译所需依赖项：</h4><p class=\"\" style=\"font-family: Arial; font-size: 14px;\">自动下载依赖项：</p><blockquote class=\"\" style=\"font-family: Arial; font-size: 14px;\"><p class=\"\">cd gcc-6.2.0<br class=\"\">./contrib/download_prerequisites</p></blockquote><p class=\"\" style=\"font-family: Arial; font-size: 14px;\">有时下载依赖项很慢，这时就需要手动自己安装依赖了。<br class=\"\">在gcc-6.2.0源码根目录执行<em class=\"\">configure</em>，checking过程中会报找不到c、c++编译器，还有gmp、mpfr、mpc这三个库，因此先安装依赖项(由于宿舍网速快,所以省略了手动安装这三个库的步骤,若要手动安装,请参考另外一篇完整文章.)。</p><blockquote class=\"\" style=\"font-family: Arial; font-size: 14px;\"><p class=\"\">./configure --prefix=/usr/local/gcc-6.2.0 --enable-threads=posix --enable-languages=c,c++ \\<br class=\"\">--enable--long-long --disable-checking --disable-multilib&nbsp;<br class=\"\">make -j4 &amp;&amp; make install</p></blockquote><h4 id=\"四将新版本gcc加入命令命令搜索路径\" class=\"\" style=\"font-family: Arial; font-size: 14px;\">四、将新版本gcc加入命令命令搜索路径：</h4><blockquote class=\"\" style=\"font-family: Arial; font-size: 14px;\"><p class=\"\">重命名之前版本的gcc编译器 :</p><p class=\"\">mv /usr/bin/gcc /usr/bin/gcc-4.8.5,</p>mv /usr/bin/g++ /usr/bin/g++-4.8.5<p class=\"\">(原有的gcc命令就没有了)</p><p class=\"\">在<font color=\"#ff40ff\" class=\"\">/usr/bin/&nbsp;</font>的位置添加一个gcc文件,此文件为ln -s 生成的链接,<font color=\"#ff40ff\" class=\"\">ln -s + 目标文件 + 链接文件 :</font></p><p class=\"\">ln -s /usr/local/gcc-6.2.0/bin/gcc &nbsp;gcc<br class=\"\">ln -s /usr/local/gcc-6.2.0/bin/g++ &nbsp;g++</p><div class=\"\">gcc 和g++ 是使用ln -s 生成的软链接.无需自己建立一个gcc和g++. 所以必须要在/usr/bin/该位置生成这两个链接文件, 因为在此位置生成的文件,处于Path路径下,可自动搜索执行.</div></blockquote></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span class=\"\" style=\"color: rgb(255, 64, 255); font-size: x-large;\"><br class=\"\"></span></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span class=\"\" style=\"color: rgb(255, 64, 255); font-size: x-large;\">手动安装版本</span></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">默认情况下，CentOS 7.2预装的gcc版本是4.8.x，通过执行命令&nbsp;<span class=\"cnblogs_code\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">gcc</span>&nbsp;-v</span>&nbsp;可以看到，一般情况下这个版本的编译器已经满足需要了，但是某些特殊的时候为了支持C++更高的特性，需要对gcc编译器的版本进行升级，比如安装最新的Mariadb 10的时候，就需要使用高版本的gcc，具体升级过程如下：</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　 　首先去官网下载gcc的高版本安装包，镜像列表是：<a href=\"https://gcc.gnu.org/mirrors.html\" class=\"\">https://gcc.gnu.org/mirrors.html</a>&nbsp;进入后选择其中的镜像站，下载gcc即可，我这里要从4.8升级到4.9，所以这里下载的版本是4.9.3 下载地址是：<a href=\"http://fr.mirror.babylon.network/gcc/releases/gcc-4.9.3/\" class=\"\">http://fr.mirror.babylon.network/gcc/releases/gcc-4.9.3/</a>&nbsp;下载其中的包为：gcc-4.9.3.tar.bz2</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　 　下载之后上传至Linux准备安装，如果此时直接进行编译安装，此时gcc会报出错误：configure: error: Building GCC requires GMP 4.2+, MPFR 2.4.0+ and MPC 0.8.0+. 也就是说安装该版本的GCC 需要GMP 版本 &gt;= 4.2 MPFR版本 &gt;= 2.4.0 MPC版本 &gt;= 0.8.0&nbsp;<font color=\"#942192\" class=\"\">这3个依赖缺一不可，并且这3个依赖之间也具有相互依赖关系，即gmp独立安装，mpfr依赖于gmp，mpc依赖于gmp和mpfr，虽然执行gcc目 录下的：&nbsp;<span class=\"cnblogs_code\">./contrib/download_prerequisites</span>&nbsp;可以解决依赖问题，但是一般国内下载速度比较慢，所以这里手动安装如下三个依赖</font>：</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　这三个依赖分别是：gmp,mpfr和mpc，下载地址分别如下：</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　　　gmp：http://<a href=\"http://ftp.gnu.org/gnu/gmp/\" class=\"\">ftp.gnu.org/gnu/gmp/</a></span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　　　mpfr(GNU镜像)：<a href=\"http://ftp.gnu.org/gnu/mpfr/\" class=\"\">http://ftp.gnu.org/gnu/mpfr/</a>&nbsp;或者官网:<a href=\"http://www.mpfr.org/mpfr-current/\" class=\"\">http://www.mpfr.org/mpfr-current/</a></span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　　　mpc：http://<a href=\"http://ftp.gnu.org/gnu/mpc/\" class=\"\">ftp.gnu.org/gnu/mpc/</a></span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　三个软件包具体版本分别是：gmp-5.0.1.tar.gz，mpfr-3.1.5.tar.gz，mpc-1.0.3.tar.gz</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　首先安装gmp，命令如下：</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div><pre class=\"\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span> -xvzf gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span>.<span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span>.gz\ncd gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span>/\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">mkdir</span> temp\ncd temp/\n../configure --prefix=/usr/local/gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span> <span class=\"\" style=\"color: rgb(0, 0, 255);\">install</span></pre><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　这样就安装好了，注意：编译时建议指定安装位置，以便后面加载依赖，这里是/usr/local下</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; color: rgb(128, 0, 128); font-size: 18px;\">如果之前已经安装了这三个依赖库，但是没有指定位置，虽然可以安装成功，但是会在随后安装gcc6.2时出现错误，这时就需要重新安装，先进入安装文件执行make distclean,再安装。</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; color: rgb(128, 0, 128); font-size: 18px;\">eg：</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"color: rgb(128, 0, 128); font-size: 18px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei';\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; cd gmp-6.1.2</span>&nbsp;&amp;&amp; make distclean</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"color: rgb(128, 0, 128); font-size: 18px;\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; mkdir temp</span></p><pre class=\"\" style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(128, 0, 128); font-size: 18px;\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; cd temp/\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ../configure --prefix=/usr/local/gmp-6.1.2\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; make\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; make install</span></pre><div class=\"\" style=\"font-family: Arial; font-size: 14px;\"><br class=\"webkit-block-placeholder\"></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　然后安装mpfr，命令如下:</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div><pre class=\"\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span> -xvzf mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span>.<span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span>.gz\ncd mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span>/\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">mkdir</span> temp\ncd temp/\n../configure --prefix=/usr/local/mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span> --with-gmp=/usr/local/gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span> <span class=\"\" style=\"color: rgb(0, 0, 255);\">install</span></pre><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　到这里mpfr安装完毕，并且必须添加--with-gmp导入gmp依赖，如果不加这个参数也会安装成功，但是后面安装GCC会报一个内部依赖的错误，如果这里不加会很麻烦，然后再安装mpc，命令如下：</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div><pre class=\"\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span> -xvzf mpc-<span class=\"\" style=\"color: rgb(128, 0, 128);\">1.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span>.<span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span>.gz\ncd mpc-<span class=\"\" style=\"color: rgb(128, 0, 128);\">1.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span>/\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">mkdir</span> temp\ncd temp/\n../configure --prefix=/usr/local/mpc-<span class=\"\" style=\"color: rgb(128, 0, 128);\">1.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span> --with-gmp=/usr/local/gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span> --with-mpfr=/usr/local/mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span>\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span> <span class=\"\" style=\"color: rgb(0, 0, 255);\">install</span></pre><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\" class=\"\"><img src=\"quiver-image-url/51E409B11AA51C150090697429A953ED.gif\" alt=\"复制代码\" class=\"\" width=\"20\" height=\"20\"></a></span></div></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　同样一定要加上依赖的参数，现在mpc也安装完毕，然后执行&nbsp;<span class=\"cnblogs_code\">vim /etc/profile</span>&nbsp;编辑环境变量配置文件，直接在文件最后添加一行下面的变量：</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><pre class=\"\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpc-<span class=\"\" style=\"color: rgb(128, 0, 128);\">1.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span>/lib:/usr/local/gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span>/lib:/usr/local/mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span>/lib</pre></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　上面的路径要和实际安装时编译的路径一致，保存并退出后，执行&nbsp;<span class=\"cnblogs_code\">source /etc/profile</span>&nbsp;使环境变量生效</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　最后就可以开始安装gcc了，安装过程如下：</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><pre class=\"\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span> -jxvf <span class=\"\" style=\"color: rgb(0, 0, 255);\">gcc</span>-<span class=\"\" style=\"color: rgb(128, 0, 128);\">4.9</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span>.<span class=\"\" style=\"color: rgb(0, 0, 255);\">tar</span>.bz2\ncd <span class=\"\" style=\"color: rgb(0, 0, 255);\">gcc</span>-<span class=\"\" style=\"color: rgb(128, 0, 128);\">4.9</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span>/\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">mkdir</span> output\ncd output/\n../configure --disable-multilib --enable-languages=c,c++ --with-gmp=/usr/local/gmp-<span class=\"\" style=\"color: rgb(128, 0, 128);\">5.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">1</span> --with-mpfr=/usr/local/mpfr-<span class=\"\" style=\"color: rgb(128, 0, 128);\">3.1</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">5</span> --with-mpc=/usr/local/mpc-<span class=\"\" style=\"color: rgb(128, 0, 128);\">1.0</span>.<span class=\"\" style=\"color: rgb(128, 0, 128);\">3</span></pre></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　然后开始编译并且安装：</span></p><div class=\"cnblogs_code\" style=\"font-family: Arial; font-size: 14px;\"><pre class=\"\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span> -j4\n<span class=\"\" style=\"color: rgb(0, 0, 255);\">make</span> <span class=\"\" style=\"color: rgb(0, 0, 255);\">install</span></pre></div><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　make过程时间非常长，根据计算机配置不同，时间有所差别，一般来说半个小时到一个多小时都是正常的，因为gcc编译器相对来说还是比较庞大的一个项目的，安装成功之后执行&nbsp;<span class=\"cnblogs_code\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">gcc</span>&nbsp;-v</span>&nbsp;或者&nbsp;<span class=\"cnblogs_code\"><span class=\"\" style=\"color: rgb(0, 0, 255);\">gcc</span>&nbsp;--version</span>&nbsp;查看新的版本信息如下：</span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　<img src=\"quiver-image-url/333B29F9D1A39F8DA73F667B4FDFB4A4.png\" alt=\"\" class=\"\" style=\"width: 634px;\" width=\"858\" height=\"195\"></span></p><p class=\"\" style=\"font-family: Arial; font-size: 14px;\"><span class=\"\" style=\"font-family: 'Microsoft YaHei'; font-size: 16px;\">　　可以看到，新的gcc版本4.9.3已经生效了，现在gcc升级就完成了.</span></p><div class=\"\"><br class=\"\"></div></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><font color=\"#ff40ff\" size=\"5\" class=\"\">gcc-6.2.0 Glibc动态库无法找到需要替换问题</font></div><div class=\"\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><h1 class=\"\" style=\"margin: 0px; padding: 0px; font-family: 'microsoft yahei';\"><font color=\"#0433ff\" class=\"\">解决类似 /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found 的问题</font></h1><div class=\"\" style=\"margin: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: 'microsoft yahei'; font-size: 15px;\">&nbsp;2015年10月17日 &nbsp;&nbsp; 4416&nbsp;</div><div class=\"post_content\" style=\"font-family: 'microsoft yahei'; font-size: 15px;\"><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><a href=\"http://itbilu.com/linux/management/NymXRUieg.html\" class=\"\">http://itbilu.com/linux/management/NymXRUieg.html</a></div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">源码编译升级安装了<code class=\"\">gcc</code>后，编译程序或运行其它程序时，有时会出现类似<code class=\"\">/usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found</code>的问题。这是因为升级<code class=\"\">gcc</code>时，生成的动态库没有替换老版本<code class=\"\">gcc</code>的动态库导致的，将<code class=\"\">gcc</code>最新版本的动态库替换系统中老版本的动态库即可解决。</div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><br class=\"\"></div><h3 class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><a name=\"t1\" class=\"\" style=\"color: rgb(12, 137, 207);\"></a>1. 问题原因分析</h3><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">为了安装最新版本的<code class=\"\"><a href=\"http://lib.csdn.net/base/30\" class=\"replace_word\" title=\"Node.js知识库\" target=\"_blank\" style=\"text-decoration: none; color: rgb(223, 52, 52); font-weight: bold;\">Node.js</a></code>（最新版本的<code class=\"\">Node.js</code>使用了<code class=\"\">C++ 11</code>中，而<code class=\"\">C++ 11</code>需要code&gt;gcc 4.8+才能支持），将<code class=\"\">gcc</code>升级到了当前最新版本<code class=\"\">v 5.2.0</code>。升级后，成功编译安装了新版本的<code class=\"\">Node.js</code>（<code class=\"\">v 4.2.1</code>）,但运行时程序时出现了以下错误：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">node: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by node)\nnode: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by node)\nnode: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by node)</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">运行以下命令检查动态库：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">strings /usr/lib64/libstdc++.so.6 | grep GLIBC</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">输出结果如下：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">GLIBCXX_3.4\nGLIBCXX_3.4.1\nGLIBCXX_3.4.2\nGLIBCXX_3.4.3\nGLIBCXX_3.4.4\nGLIBCXX_3.4.5\nGLIBCXX_3.4.6\nGLIBCXX_3.4.7\nGLIBCXX_3.4.8\nGLIBCXX_3.4.9\nGLIBCXX_3.4.10\nGLIBCXX_3.4.11\nGLIBCXX_3.4.12\nGLIBCXX_3.4.13\nGLIBCXX_FORCE_NEW\nGLIBCXX_DEBUG_MESSAGE_LENGTH</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">从以上输出可以看出，<code class=\"\">gcc</code>的动态库还是旧版本的。说明出现这些问题，是因为升级<code class=\"\">gcc</code>时，生成的动态库没有替换老版本<code class=\"\">gcc</code>的动态库。</div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><br class=\"\"></div><h3 class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><a name=\"t2\" class=\"\" style=\"color: rgb(12, 137, 207);\"></a>2. 问题处理</h3><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">执行以下命令，查找编译<code class=\"\">gcc</code>时生成的最新动态库：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">find / -name \"libstdc++.so*\"</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">输出如下：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so\n/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6\n/home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.21  //最新动态库\n……\n</pre><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\"><br class=\"\"></pre><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\"><br class=\"\"></pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><code class=\"\">/home/gcc-5.2.0/gcc-temp</code>是<a target=\"_blank\" href=\"http://itbilu.com/linux/management/V1vdnt9ll.html\" class=\"\" style=\"text-decoration: none; color: rgb(12, 137, 207);\">升级gcc</a>时的输出目录。</div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">将上面的最新动态库<code class=\"\">libstdc++.so.6.0.21</code>复制到<code class=\"\">/usr/lib64</code>目录下：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">cp /home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.21 /usr/lib64</pre><div class=\"\" style=\"margin: 0px; padding: 0px;\"><pre class=\"\" style=\"white-space: pre-wrap; word-wrap: break-word;\"><font color=\"#ff40ff\" class=\"\">我自己电脑gcc版本是gcc-6.2.0</font></pre><pre class=\"\" style=\"white-space: pre-wrap; word-wrap: break-word;\"><font color=\"#ff40ff\" class=\"\">cp /usr/local/gcc-6.2.0/lib64/libstdc++.so.6.0.22  /usr/lib64/</font></pre><div class=\"\" style=\"color: rgb(85, 85, 85);\"><br class=\"\"></div></div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">复制后，修改系统默认动态库的指向，即：重建默认库的软连接。</div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">切换工作目录至<code class=\"\">/usr/lib64</code>：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">cd /usr/lib64</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">删除原来软连接：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">rm -rf libstdc++.so.6</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">将默认库的软连接指向最新动态库：</div><pre class=\"\" style=\"white-space: pre-wrap; word-wrap: break-word;\"><span class=\"\" style=\"color: rgb(85, 85, 85);\">ln -s </span><font color=\"#ff40ff\" class=\"\">libstdc++.so.6.0.22</font><font color=\"#555555\" class=\"\"> libstdc++.so.6</font></pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\"><br class=\"\"></div><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">默认动态库升级完成。重新运行以下命令检查动态库：</div><pre class=\"\" style=\"color: rgb(85, 85, 85); white-space: pre-wrap; word-wrap: break-word;\">strings /usr/lib64/libstdc++.so.6 | grep GLIBC</pre><div class=\"\" style=\"color: rgb(85, 85, 85); margin: 0px; padding: 0px;\">现在输出如下：</div><pre class=\"\" style=\"white-space: pre-wrap; word-wrap: break-word;\"><span class=\"\" style=\"color: rgb(85, 85, 85);\">GLIBCXX_3.4\nGLIBCXX_3.4.1\nGLIBCXX_3.4.2\nGLIBCXX_3.4.3\nGLIBCXX_3.4.4\nGLIBCXX_3.4.5\nGLIBCXX_3.4.6\nGLIBCXX_3.4.7\nGLIBCXX_3.4.8\nGLIBCXX_3.4.9\nGLIBCXX_3.4.10\nGLIBCXX_3.4.11\nGLIBCXX_3.4.12\nGLIBCXX_3.4.13\n</span><font color=\"#ff40ff\" class=\"\">GLIBCXX_3.4.14\nGLIBCXX_3.4.15\nGLIBCXX_3.4.16\nGLIBCXX_3.4.17\nGLIBCXX_3.4.18\nGLIBCXX_3.4.19\nGLIBCXX_3.4.20\nGLIBCXX_3.4.21(这些都红色标注是旧版本没有的,所以可以识别为新版本)</font><font color=\"#555555\" class=\"\">\nGLIBC_2.3\nGLIBC_2.2.5\nGLIBC_2.3.2\nGLIBCXX_FORCE_NEW\nGLIBCXX_DEBUG_MESSAGE_LENGTH</font></pre></div></div></div>"
    }
  ]
}
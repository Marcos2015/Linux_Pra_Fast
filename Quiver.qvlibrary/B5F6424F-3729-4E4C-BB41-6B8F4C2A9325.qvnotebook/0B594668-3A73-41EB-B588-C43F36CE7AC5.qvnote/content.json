{
  "title": "如何交互式地创建一个Docker容器",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"d\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; word-wrap: break-word; margin: 15px; min-height: 100px; line-height: 1.8;\"><div class=\"vwtb\" id=\"article_content\" style=\"word-wrap: break-word; table-layout: fixed; width: 808px; vertical-align: top; min-height: 700px;\"><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">大家好，今天我们来学习如何使用一个docker镜像交互式地创建一个Docker容器。当我们从镜像中启动一个Docker进程，Docker就会获取该镜像及其父镜像，并重复这个过程，直到到达基础镜像。然后联合文件系统（UFS）会在其顶层添加一个读写层。读写层被称之为容器，它包含了一些关于父镜像信息及一些其他的信息，如唯一ID，网络配置和资源限制等。容器是有状态的，其状态可以从&nbsp;<strong style=\"word-wrap: break-word; color: rgb(196, 15, 15);\">运行态</strong>&nbsp;切换到&nbsp;<strong style=\"word-wrap: break-word; color: rgb(196, 15, 15);\">退出态</strong>。一个处于&nbsp;<strong style=\"word-wrap: break-word; color: rgb(196, 15, 15);\">运行态</strong>的容器包含了在CPU上面运行的进程树，于其它在该主机上运行的进程相隔离，而<strong style=\"word-wrap: break-word; color: rgb(196, 15, 15);\">退出态</strong>是指文件系统的状态，并保留了其退出值。你可以使用它来启动，停止和重启一个容器。</p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">Docker技术为IT界带来了巨大的改变，它使得云服务可以用来共享应用和工作流程自动化，使得应用可以用组件快速组合，消除了开发、品质保证、产品环境间的摩擦。在这篇文章中，我们将会建立CentOS环境，然后用Apache网络服务器提供一个网站服务。</p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/17F94B0A8F4EA6E5E6FA065756EB39AF.jpg\" alt=\"\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"614\" height=\"236\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">这是一个快速且容易的教程，讨论我们怎样使用交互的shell，以交互的方式来创建一个容器。</p><a id=\"3_1439\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_1\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">1. 运行一个Docker实例</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">Docker首先会尝试从本地取得并运行所需的镜像，如果在本地主机上没有发现，它就会从<a href=\"https://registry.hub.docker.com/\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">Docker公共注册中心</a>拉取。这里，我们将会拉取镜像并在 Docker 容器中创建一个fedora实例，并连接到它的 tty 上的bash shell。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker run -i -t fedora bash</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/4158839AFD2ED74C36BE23C8710C8DB2.png\" alt=\"Downloading Fedora Base Image\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"682\" height=\"380\"></p><a id=\"3_2035\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_2\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">2.安装Apache网络服务器</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">现在，在我们的Fedora基本镜像实例准备好后，我们将会开始交互式地安装Apache网络服务器，而不是为它创建Dockerfile。为了做到这点，我们需要在终端或者shell运行以下命令。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># yum update</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/1FE578049552EECC80C5F935E344C806.png\" alt=\"Installing httpd\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"730\" height=\"516\"></p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># yum install httpd</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/1FE578049552EECC80C5F935E344C806.png\" alt=\"Installing httpd\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"730\" height=\"516\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">退出容器的 tty。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># exit</span></code></li></ol></pre><a id=\"3_2800\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_3\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">3.保存镜像</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">现在，我们要去保存在Fedora实例里做的修改。要做到这个，我们首先需要知道实例的容器ID。而为了得到ID，我们又需要运行以下命令（LCTT 译注：在容器外执行该命令）。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker ps -a</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/45B4DFF218122560A59B2CD035CC0DE0.png\" alt=\"Docker Running Container\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"838\" height=\"136\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">然后，我们会保存这些改变为一个新的镜像，请运行以下命令。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker commit c16378f943fe fedora-httpd</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/AB2E55E0677D955CD8EE9B281CA370CB.png\" alt=\"committing fedora httpd\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"833\" height=\"153\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">这里，修改已经通过使用容器ID保存起来了，镜像名字叫fedora-httpd。为了确认新的镜像是否在运行，我们将运行以下命令。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker images</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/0EDFBFF7E4ADCEE98A9DB833389F8994.png\" alt=\"view docker images\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"780\" height=\"135\"></p><a id=\"3_3948\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_4\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">4. 添加内容到新的镜像</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">我们自己新的Fedora Apache镜像正成功的运行，现在我们想添加一些我们网站的网页内容到Apache网络服务器，使得网站能够开箱即用。为做到这点，我们需要创建一个新的Dockerfile，它会处理从复制网页内容到启用80端口的所有操作。要达到这样的目的，我们需要使用我们最喜欢的文本编辑器创建Dockerfile文件，像下面演示的一样。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># nano Dockerfile</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">现在，我们需要添加以下的命令行到文件中。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">FROM fedora</span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">-</span><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">httpd</span></code></li><li class=\"L1\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">ADD mysite</span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">.</span><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">tar </span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">/</span><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">tmp</span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">/</span></code></li><li class=\"L2\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">RUN mv </span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">/</span><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">tmp</span><span class=\"pun\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">/</span><span class=\"pln\" style=\"word-wrap: break-word; color: rgb(255, 255, 255);\">mysite</span><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\">/* /var/www/html</span></code></li><li class=\"L3\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\">EXPOSE 80</span></code></li><li class=\"L4\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\">ENTRYPOINT [ \"/usr/sbin/httpd\" ]</span></code></li><li class=\"L5\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\">CMD [ \"-D\", \"FOREGROUND\" ]</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/43BF7212AEFDFF3D9C5A4DBDC67870A3.png\" alt=\"configuring Dockerfile\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"594\" height=\"329\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">这里，上述的Dockerfile中，放在mysite.tar里的网页内容会自动解压到/tmp/文件夹里。然后，整个站点会被移动到Apache的网页根目录/var/www/html/，命令expose 80会打开80端口，这样网站就能正常访问了。其次，入口点放在了/usr/sbin/https里面，保证Apache服务器能够执行。</p><a id=\"3_5263\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_5\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">5. 构建并运行一个容器　</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">现在，我们要用刚刚创建的Dockerfile创建我们的容器，以便将我们的网站添加到上面。为做到这，我们需要运行以下命令。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker build -rm -t mysite .</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/71D4E34487B62213EA607F9F6E40278D.png\" alt=\"Building mysite Image\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"778\" height=\"533\"></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">建立好我们的新容器后，我们需要要用下面的命令来运行容器。</p><pre class=\"prettyprint linenums prettyprinted\" style=\"width: 646.390625px; margin: 10px 15px; padding: 1em 2em; border: 2px solid rgb(0, 170, 255); background-color: rgb(51, 51, 51); color: rgb(238, 238, 238); border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-right-radius: 8px; border-bottom-left-radius: 8px;\"><ol class=\"linenums\" style=\"word-wrap: break-word; margin: 1em; padding: 0px 0px 0px 10px; color: rgb(174, 174, 174); border-left-width: 2px; border-left-style: solid; border-left-color: rgb(0, 153, 0);\"><li class=\"L0\" style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><code style=\"word-wrap: break-word; border: none !important; padding-top: 0px !important; padding-bottom: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; margin-top: 1em !important; margin-bottom: 1em !important;\"><span class=\"com\" style=\"word-wrap: break-word; font-style: italic;\"># docker run -d -P mysite</span></code></li></ol></pre><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><img src=\"quiver-image-url/637C9DCF2390299DC2EC53114B98BCE8.png\" alt=\"Running mysite Container\" style=\"word-wrap: break-word; max-width: 95%; margin: 10px 15px;\" width=\"559\" height=\"53\"></p><a id=\"3_6000\" class=\"target-fix\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); position: relative; top: -40px; display: block; height: 0px; overflow: hidden; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"></a><h3 id=\"toc_6\" style=\"word-wrap: break-word; margin: 6px 0px 3px; padding: 0px; font-size: 1.1em; font-family: 'Microsoft YaHei', 'Hiragino Sans GB', STHeiti, Tahoma, SimHei, sans-serif; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(47, 47, 47); width: 727.1875px;\">总结</h3><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">最后，我们已经成功的以交互式的方式建立了一个Docker容器。在本节方法中，我们是直接通过交互的shell命令建立我们的容器和镜像。在建立与配置镜像与容器时，这种方法十分简单且快速。如果你有任何问题，建议和反馈，请在下方的评论框里写下来，以便我们可以提升或者更新我们的文章。谢谢！祝生活快乐 :-)</p><hr style=\"word-wrap: break-word; clear: both; margin: 0px 10px; font-family: Tahoma, Helvetica, SimSun, sans-serif;\"><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">via:&nbsp;<a href=\"http://linoxide.com/linux-how-to/interactively-create-docker-container/\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">http://linoxide.com/linux-how-to/interactively-create-docker-container/</a></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">作者：<a href=\"http://linoxide.com/author/arunp/\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">Arun Pyasi</a>&nbsp;译者：<a href=\"https://github.com/wi-cuckoo\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">wi-cuckoo</a>&nbsp;校对：<a href=\"https://github.com/wxy\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">wxy</a></p><p style=\"word-wrap: break-word; margin: 10px 0px; padding: 0px; line-height: 2em; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">本文由&nbsp;<a href=\"https://github.com/LCTT/TranslateProject\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">LCTT</a>&nbsp;原创翻译，<a href=\"http://linux.cn/\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none;\">Linux中国</a>&nbsp;荣誉推出</p><span style=\"font-family: Tahoma, Helvetica, SimSun, sans-serif;\">来源：</span><a href=\"https://linux.cn/article-5484-1.html\" style=\"word-wrap: break-word; color: rgb(77, 138, 216); text-decoration: none; font-family: Tahoma, Helvetica, SimSun, sans-serif;\">https://linux.cn/article-5484-1.html</a></div></div>"
    }
  ]
}
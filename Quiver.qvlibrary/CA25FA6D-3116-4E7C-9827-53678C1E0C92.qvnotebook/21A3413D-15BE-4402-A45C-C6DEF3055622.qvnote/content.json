{
  "title": "IPv6地址长度的定义 INET6_ADDRSTRLEN为46位",
  "cells": [
    {
      "type": "text",
      "data": "<div><br></div><div><ul class=\"Content\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><li id=\"ArticleBox\"><p>先看看在头文件中的定义，/usr/include/linux/in6.h<br><br>&nbsp;</p><pre class=\"brush:cpp;\">/*\n *  IPv6 address structure\n */\n\nstruct in6_addr {\n    union {\n        __u8        u6_addr8[16];\n        __be16      u6_addr16[8];\n        __be32      u6_addr32[4];\n    } in6_u;\n#define s6_addr         in6_u.u6_addr8\n#define s6_addr16       in6_u.u6_addr16\n#define s6_addr32       in6_u.u6_addr32\n};\n\n/* IPv6 Wildcard Address (::) and Loopback Address (::1) defined in RFC2553\n * NOTE: Be aware the IN6ADDR_* constants and in6addr_* externals are defined\n * in network byte order, not in host byte order as are the IPv4 equivalents\n */\n\nstruct sockaddr_in6 {\n    unsigned short int  sin6_family;    /* AF_INET6 */\n    __be16          sin6_port;      /* Transport layer port # */\n    __be32          sin6_flowinfo;  /* IPv6 flow information */\n    struct in6_addr     sin6_addr;      /* IPv6 address */\n    __u32           sin6_scope_id;  /* scope id (new in RFC2553) */\n};</pre><br><p>而在头文件 /usr/include/netinet/in.h 中，有如下的定义：</p><p>#define INET6_ADDRSTRLEN 46</p><p>这说明了什么问题呢？</p><p>说明了ipv6的地址长度定义为46，在进行网络地址转化的时候，最长只能为46位。inet_ntop()</p><p>那么ipv4的地址长度定义为多少呢？ 是 16 。这个16比较好理解了，因为ipv4的地址长度最长也就是 255.255.255.255 ，15位。为什么要把ipv6的地址长度定义为46？这需要在文章开始处寻找答案了。看这一段话，</p><p>IPv6 Wildcard Address (::) and Loopback Address (::1) defined in RFC2553 * NOTE: Be aware the IN6ADDR_* constants and in6addr_* externals are defined* in network byte order, not in host byte order as are the IPv4 equivalents</p><p>ipv6的通配符地址是 :: 并且回环地址是 ::1 ，这些是在RFC中定义的。要意识到IN6ADDR *的常量和in6addr_* 是定义在网络字节序中的，并不像ipv4那样是定义在本地主机字节序上的。所以你觉得他们不搭调，其实是正常的。<a href=\"http://www.it165.net/\">www.it165.net</a></p><p>科普：网络字节序和主机字节序</p><p>网络字节顺序是TCP/IP中规定好的一种数据表示格式，它与具体的CPU类型、操作系统等无关，从而可以保证数据在不同主机之间传输时能够被正确解释。网络字节顺序采用big endian排序方式。</p><p>主机字节序就是我们平常说的大端和小端模式：不同的 CPU 有不同的字节序类型，这些字节序是指整数在内存中保存的顺序 这个叫做主机序。</p><p>系统提供了API供我们进行IP地址、端口号的转化。分别是</p><p>htonl()、htons()、inet_addr()、ntohl()、ntohs()、inet_ntoa()</p><p>可以使用man来查看一下具体用法，顺便将转化前后的值打印出来看看，长度是不是46 ？</p></li></ul></div>"
    }
  ]
}
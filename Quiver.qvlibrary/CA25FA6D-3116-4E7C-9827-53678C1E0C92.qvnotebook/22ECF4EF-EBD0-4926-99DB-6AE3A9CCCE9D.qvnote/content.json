{
  "title": "计算机网络协议包头赏析-TCP",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"current_nav\" style=\"margin: 0px; padding: 0px 0px 15px; border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(77, 166, 255); font-size: 14px; color: rgb(136, 136, 136); font-family: &quot;Microsoft Yahei&quot;;\"><a href=\"http://www.codeweblog.com/\" style=\"color: rgb(39, 42, 48); text-decoration: none; outline: none medium;\">首页</a>&nbsp;<span class=\"sub\" style=\"padding: 0px 5px;\">&gt;</span>&nbsp;<a href=\"http://www.codeweblog.com/category/%e7%bc%96%e7%a8%8b/\" title=\"编程\" style=\"color: rgb(39, 42, 48); text-decoration: none; outline: none medium;\">编程</a>&nbsp;<span class=\"sub\" style=\"padding: 0px 5px;\">&gt;</span>&nbsp;<a href=\"http://www.codeweblog.com/%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c%e5%8d%8f%e8%ae%ae%e5%8c%85%e5%a4%b4%e8%b5%8f%e6%9e%90-tcp/\" style=\"color: rgb(39, 42, 48); text-decoration: none; outline: none medium;\">计算机网络协议包头赏析-TCP</a></div><div style=\"margin: 0px; padding: 10px 0px; color: rgb(39, 42, 48); font-family: &quot;Microsoft Yahei&quot;; font-size: 12px; text-align: center;\"></div><div class=\"post_title\" style=\"margin: 0px; padding: 20px 0px 0px; text-align: center; color: rgb(39, 42, 48); font-family: &quot;Microsoft Yahei&quot;; font-size: 12px;\"><h1 style=\"margin: 0px; padding: 0px; font-size: 2.2em; font-weight: 500; font-family: &quot;Microsoft YaHei&quot;; line-height: 1.5;\">计算机网络协议包头赏析-TCP</h1></div><div style=\"margin: 0px; padding: 10px 0px; color: rgb(39, 42, 48); font-family: &quot;Microsoft Yahei&quot;; font-size: 12px; text-align: center;\"></div><div class=\"post_content\" id=\"paragraph\" style=\"margin: 0px; padding: 0px; color: rgb(39, 42, 48); font-family: &quot;Microsoft Yahei&quot;; font-size: 12px;\"><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">已经了解了以太网和IP了，下面我们进入传输层，开始讲解TCP协议。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">仍然先把TCP报文段的格式放在这里，然后我们看图说话：</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><a href=\"http://image.codeweblog.com/upload/9/90/99089a5d34d1b66b.jpg\" class=\"lightbox\" style=\"color: rgb(77, 166, 255); outline: none medium;\"><img src=\"quiver-image-url/D67A96A2D0805018F617206A2E103973.jpg\" alt=\"计算机网络协议包头赏析-TCP\" title=\"计算机网络协议包头赏析-TCP\" style=\"border: 0px none; vertical-align: bottom; max-width: 628px; margin: 0px auto; display: block;\" width=\"500\" height=\"325\"></a><br></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">TCP报文段也分为首部和数据两部分，首部默认情况下一般是20字节长度，但在一些需求情况下，会使用“可选字段”，这时，首部长度会有所增加。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">下面，我们仍然延续讲解IP协议的思路，针对不同的域，分别进行讲解：</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【源端口】- 16bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">来源处的端口号；</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【目的端口】- 16bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">目的处的端口号；</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【序号】- 32bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">每一个TCP报文段都会有一个序号，序号字段的值其实是本报文段所发送的数据的第一个字节的序号。这是因为TCP是面向连接的可靠服务，其每一个字节都会对应一个序号，通过序号来确保服务的可靠性和有序性。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【确认号】- 32bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">确认号，是期望收到对方的下一个报文段的数据的第一个字节的序号。（这句话有些拗口，但是在后面我们讲解三次握手和四次挥手时，大家会更深刻的理解这句话的含义）</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【数据偏移】- 4bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">其实它本质上就是“首部长度”，因为“数据偏移”是指TCP报文段的数据部分的起始处距离TCP报文段的起始处的距离。（仍然很拗口，但相信你能明白）。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">数据偏移总共占4bit，因此最大能表示的数值为15。而数据偏移的单位是“4字节”，此处的设计和IP数据报的设计是完全相同的，所以说TCP报文段首部的长度最长为15×4=60字节，且首部长度必须为4字节的整数倍。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【保留字段】- 6bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">这6bit在标准中是保留字段，我猜测，有两个目的，第一个是预留除URG/ACK/PSH/RST/SYN/FIN/之外的冗余功能位；第二个是为了对其字节位。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【紧急字段URG】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">此字段告诉系统此报文段中有紧急数据，应尽快传送。当URG=1时，</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【确认字段ACK】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">当ACK=1时，表示确认，且确认号有效；当ACK=0时，确认号字段无效。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【推送字段PSH】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">当PSH=1时，则报文段会被尽快地交付给目的方，不会对这样的报文段使用缓存策略。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【复位字段RST】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">当RST为1时，表明TCP连接中出现了严重的差错，必须释放连接，然后再重新建立连接。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【同步字段SYN】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">当SYN=1时，表示发起一个连接请求。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【终止字段FIN】- 1bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">用来释放连接。当FIN=1时，表明此报文段的发送端的数据已发送完成，并要求释放连接。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【窗口字段】- 16bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">此字段用来控制对方发送的数据量，单位为字节。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">一般TCP连接的其中一端会根据自身的缓存空间大小来确定自己的接收窗口大小，然后告知另一端以确定另一端的发送窗口大小。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【校验和字段】- 16bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">这个校验和是针对首部和数据两部分的。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\"><strong>【紧急指针字段】- 16bit</strong></p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">紧急指针指出在本报文段中的紧急数据的最后一个字节的序号。</p><p style=\"margin: 0px; padding: 10px 0px; font-size: 14px; line-height: 22px; word-wrap: break-word;\">PS:对于后面的选项字段，后续会安排单独讲解:)</p></div>"
    }
  ]
}
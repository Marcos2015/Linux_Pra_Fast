{
  "title": "tcp粘包问题补充",
  "cells": [
    {
      "type": "text",
      "data": "<div id=\"meta_content\" class=\"rich_media_meta_list\">\n                                        <span id=\"copyright_logo\" class=\"rich_media_meta meta_original_tag\">原创</span>\n                                                            <em id=\"post-date\" class=\"rich_media_meta rich_media_meta_text\">2017-12-27</em>\n\n                                        <em class=\"rich_media_meta rich_media_meta_text\">王传义</em>\n                                        <a class=\"rich_media_meta rich_media_meta_link rich_media_meta_nickname\" href=\"https://mp.weixin.qq.com/s/XGcSFk16ILKJujTuwl2YUw##\" id=\"post-user\">架构说</a>\n                    \n\n                    \n                </div>\n                \n                \n                \n                \n                                                \n                                                                \n                \n                <div class=\"rich_media_content \" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section class=\"\" data-tools=\"新媒体排版\" style=\"color: rgb(51, 51, 51);\"><section class=\"\" style=\"box-sizing: border-box;\"><section class=\"\" powered-by=\"xiumi.us\" style=\"box-sizing: border-box;\"><section class=\"\" style=\"margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;\"><section class=\"\" style=\"padding-bottom: 1.2em;box-sizing: border-box;\"><section style=\"margin-top: -0.5em;display: inline-block;vertical-align: top;line-height: 1em;height: 1em;box-sizing: border-box;\"><span style=\"box-sizing:border-box;color:rgb(170, 232, 115);display:inline-block;font-size:80px;line-height:1em;vertical-align:top;\" data-css=\"box-sizing: border-box;color: rgb(192, 200, 209);display: inline-block;font-size: 80px;line-height: 1em;vertical-align: top\">“</span>&nbsp;<section style=\"margin-top: 1.6em;margin-left: -0.6em;width: 4em;border-bottom: 1px solid rgb(192, 200, 209);display: inline-block;vertical-align: middle;box-sizing: border-box;\"></section></section><section class=\"\" style=\"padding: 10px;margin-top: -0.5em;box-sizing: border-box;\"><section class=\"\" powered-by=\"xiumi.us\" style=\"box-sizing: border-box;\"><section class=\"\" style=\"box-sizing: border-box;\"><section class=\"\" style=\"text-align: center;box-sizing: border-box;\"><p style=\"line-height: 1.75em;\"><span style=\"color:rgb(170, 232, 115);font-size:15px;letter-spacing:2px;\" data-css=\"color: rgb(214, 168, 65);font-size: 15px;letter-spacing: 2px\"></span></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>上篇文章</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>提到阻塞(block)一下如何read数据</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>这里针对是非阻塞如何read数据</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>并且纠正前面出现几个错误</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>(1) 非阻塞 遇到errno=EAGAIN必须continue处理 ,epoll_wait 下次还能触发吗？</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>(2) &nbsp;服务器read一次数据 ，只解析一个包的数据</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>会不会出现每次客户端发送新数据 但是服务器读取仍然是历史发送记录，</strong></p><p style=\"color:rgb(153, 153, 153);\" data-css=\"color: rgb(153, 153, 153);font-family: helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, simsun;font-size: 16px;margin-bottom: 5px;margin-top: 5px;text-align: justify;white-space: normal;word-wrap: break-word\"><strong>缓存里留着未处理数据情况</strong></p></section></section></section></section><section style=\"display: inline-block;height: 1em;float: right;line-height: 1;box-sizing: border-box;\"><section style=\"display: inline-block;vertical-align: top;width: 4em;border-bottom: 1px solid rgb(192, 200, 209);box-sizing: border-box;\"></section><span style=\"box-sizing:border-box;color:rgb(170, 232, 115);display:inline-block;font-size:80px;margin-left:-0.1em;margin-top:-0.11em;vertical-align:top;\" data-css=\"box-sizing: border-box;color: rgb(192, 200, 209);display: inline-block;font-size: 80px;margin-left: -0.1em;margin-top: -0.11em;vertical-align: top\">”</span></section></section></section></section></section></section><section><section powered-by=\"xiumi.us\"><section><section><section powered-by=\"xiumi.us\"><section><section><h1></h1><h1 style=\"margin-top: 1em; margin-bottom: 1em; font-size: 18px; line-height: 24px; padding-left: 12px; color: rgb(93, 93, 93);\"><strong>&nbsp;</strong></h1><section><section powered-by=\"xiumi.us\"><section><section><section powered-by=\"xiumi.us\"><section><section><section class=\"\" data-tools=\"新媒体排版\" style=\"background-color: rgb(255, 255, 255);\"><section class=\"\" powered-by=\"xiumi.us\" style=\"box-sizing: border-box;\"><section class=\"\" style=\"margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;\"><section class=\"\" style=\"display: inline-block;box-sizing: border-box;\"><section style=\"border-left: 5px solid rgb(249, 110, 87);box-sizing: border-box;\"><span style=\"color: rgb(51, 51, 51);\"></span><strong style=\"color: rgb(93, 93, 93);\">&nbsp;在一个异步非阻塞的socket上调用read/write函数读为2个步骤</strong><br></section></section></section></section></section><ul class=\"list-paddingleft-2\"><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">步骤1 调用read从系统&nbsp;层读取到应用层</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">步骤2 解析数据</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\"><br></p></li></ul><p style=\"font-size: 16px; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: center; word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;letter-spacing: 0px;color: rgb(26, 173, 25);font-size: 20px;word-wrap: break-word !important;\">—</span></p><p><br></p><section style=\"font-size: 16px; max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); word-wrap: break-word !important;\"><section class=\"\" powered-by=\"xiumi.us\" style=\"max-width: 100%;box-sizing: border-box;word-wrap: break-word !important;\"><section class=\"\" style=\"max-width: 100%;box-sizing: border-box;word-wrap: break-word !important;\"><section class=\"\" style=\"padding-right: 20px;padding-left: 20px;max-width: 100%;box-sizing: border-box;line-height: 0.8;word-wrap: break-word !important;\"><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;color: rgb(26, 173, 25);font-size: 24px;word-wrap: break-word !important;\">01</span></p><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;letter-spacing: 0px;color: rgb(26, 173, 25);font-size: 20px;word-wrap: break-word !important;\">—</span></p><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;letter-spacing: 0px;color: rgb(26, 173, 25);font-size: 20px;word-wrap: break-word !important;\"><br></span></p><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><strong><br></strong></p><p style=\"max-width: 100%; box-sizing: border-box; min-height: 1em; text-indent: 2em; word-wrap: break-word !important;\"><strong>步骤1 调用read从系统buffer读取到应用层buffer</strong></p></section></section></section></section><p style=\"font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"color: rgb(93, 93, 93);\"><br></span></p><p><span style=\"background-color: rgb(255, 255, 255);color: rgb(93, 93, 93);\"></span><br></p></section></section></section></section></section></section></section><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp;epoll提供两种工作模式：LT和ET&nbsp;<span style=\"color: rgb(249, 141, 106);\">Level-Triggered and Edge-Triggered&nbsp;</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;\"><span style=\"color:#f98d6a;\">区别是：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">前者触发多次，下次触发条件：</p></li></ul><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp; &nbsp; &nbsp; &nbsp;<strong>&nbsp;&nbsp; <span style=\"color: rgb(249, 141, 106);\">只 要缓冲区有数据，不区分是上次未读取还是新来的</span></strong></p><ul class=\"list-paddingleft-2\"><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">后者只 &nbsp;触发一次 下次触发条件：</p></li></ul><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp; &nbsp; &nbsp; <span style=\"color: rgb(249, 141, 106);\">&nbsp; 1 &nbsp;有新的数据写入管道 缓冲区有数据 （consume the whole buffer data）</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><span style=\"color: rgb(249, 141, 106);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp;遇到EAGAIN （return EAGAIN）</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><span style=\"color: rgb(249, 141, 106);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3 &nbsp;缓冲区有数据但是属于上次遗留的 不触发&nbsp;</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>参考 man epoll 例子</strong></p><ul class=\"list-paddingleft-2\"><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">如果是ET模式，管道中剩余的1KB被挂起，再次调用epoll_wait，得不到管道读者的文件句柄，除 非有新的数据写入管道</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">如果是LT模式，只要管道中有数据可读，每次调用epoll_wait都会触发。</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\"><br></p></li></ul><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">//所以，在epoll的ET模式下，正确的读写方式为:</p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp;<span style=\"color: rgb(249, 141, 106);\">&nbsp;&nbsp;&nbsp;读：只要可读，就一直读，直到返回0，或者 errno = EAGAIN(break 满足下次触发条件)</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><span style=\"color: rgb(249, 141, 106);\">&nbsp;&nbsp;&nbsp;&nbsp;写:只要可写，就一直写，直到数据发送完，或者 errno = EAGAIN(break 满足下次触发条件)</span></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">在epoll的LT模式下相反</p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp;&nbsp;&nbsp;&nbsp;读：忽略掉errno = EAGAIN的错误，下次继续读 continue</p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">&nbsp;&nbsp;&nbsp;&nbsp;写：忽略掉errno = EAGAIN的错误，下次继续写</p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><img data-src=\"http://mmbiz.qpic.cn/mmbiz_jpg/2H3gcc9GEbtMaXMsUm6zF5742lHW743samlsrAwMHSNp8I8N8Mr1qGIZwiaHKS6PvbyibteqNQ7zjCv0M7Aibic9YQ/?wx_fmt=jpeg\" style=\"max-width: 80%; display: block; clear: both; margin-right: auto; margin-left: auto; width: auto !important; visibility: visible !important;\" class=\"\" data-ratio=\"0.7203125\" data-w=\"640\" data-type=\"jpeg\" src=\"quiver-image-url/753322BF71751027E3D88597A5C80A63.jpg\" data-fail=\"0\" width=\"640\" height=\"461\"></p><p class=\"\" style=\"margin-top: -6px;margin-bottom: 1em;word-wrap: break-word;text-align: center;line-height: 1.5;color: rgb(153, 153, 153);font-size: 16px;\">ET</p><p style=\"color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: center; word-wrap: break-word !important;\"><span style=\"color: rgb(26, 173, 25);font-size: 20px;letter-spacing: 0px;\"></span></p><hr><p style=\"color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: center; word-wrap: break-word !important;\"><span style=\"color: rgb(26, 173, 25);font-size: 20px;letter-spacing: 0px;\"></span><br></p><p style=\"color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: center; word-wrap: break-word !important;\"><span style=\"color: rgb(26, 173, 25);font-size: 20px;letter-spacing: 0px;\">—</span><br></p><section style=\"font-size: 16px; max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); word-wrap: break-word !important;\"><section class=\"\" powered-by=\"xiumi.us\" style=\"max-width: 100%;box-sizing: border-box;word-wrap: break-word !important;\"><section class=\"\" style=\"max-width: 100%;box-sizing: border-box;word-wrap: break-word !important;\"><section class=\"\" style=\"padding-right: 20px;padding-left: 20px;max-width: 100%;box-sizing: border-box;line-height: 0.8;word-wrap: break-word !important;\"><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;color: rgb(26, 173, 25);font-size: 24px;word-wrap: break-word !important;\">02</span></p><p style=\"max-width: 100%;box-sizing: border-box;min-height: 1em;text-align: center;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box;letter-spacing: 0px;color: rgb(26, 173, 25);font-size: 20px;word-wrap: break-word !important;\">—</span></p></section></section></section></section><p style=\"font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;\"></p><p style=\"font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;\"><strong>&nbsp;步骤2 解析数据</strong><br></p><p style=\"font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 20px;box-sizing: border-box !important;word-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;\"></span></span></p><p><br></p></section></section></section></section></section></section></section><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>说明： 这里约定数据包是指是客户端发送一次的数据</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">应用层 利用socket从系统底层缓冲区(buffer)read一次n字节大小数据到本地buffer</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">这些数据</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">可能客户端发送数据过大一个包拆拆分多个包发送，</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">也可能数据过小</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">多个包合并成一个包发送，</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">也可能就是客户端连续发送多次</p><p><br></p><p><br></p><section><section powered-by=\"xiumi.us\"><section><section><section powered-by=\"xiumi.us\"><section><section><section class=\"\" data-tools=\"新媒体排版\" style=\"background-color: rgb(255, 255, 255);\"><section class=\"\" powered-by=\"xiumi.us\" style=\"box-sizing: border-box;\"><section class=\"\" style=\"margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;\"><section class=\"\" style=\"display: inline-block;box-sizing: border-box;\"><section style=\"border-left: 5px solid rgb(249, 110, 87);box-sizing: border-box;\"><span style=\"color: rgb(51, 51, 51);\"></span><strong style=\"color: rgb(93, 93, 93);\">&nbsp;&nbsp;</strong><strong style=\"color: rgb(93, 93, 93);\">解析n字节大小数据 步骤</strong></section></section></section></section></section></section></section></section></section></section></section></section><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong><br></strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>1 小于一个包 俗称半包</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>&nbsp; &nbsp; &nbsp;判断bytebuffer中剩余数据是否足够一个包,不够继续系统缓冲区读取 IO操作</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>2 完整的一个包</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>&nbsp; &nbsp; &nbsp; 读取一个包之后，剩余数据为零继续等待客户端下一个请求IO操作</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>3 &nbsp;包涵：多个包</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong>&nbsp; &nbsp; 继续解析，知道满足条件1和2为止</strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><strong><br></strong></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><img data-src=\"http://mmbiz.qpic.cn/mmbiz_jpg/2H3gcc9GEbtMaXMsUm6zF5742lHW743skQDAdA8bic6xnVhjaTqbJu7d2khs44FofNp5iajs9o3ps2hpgp9OAZJw/?wx_fmt=jpeg\" style=\"max-width: 80%; display: block; clear: both; margin-right: auto; margin-left: auto; width: auto !important; visibility: visible !important;\" class=\"\" data-ratio=\"0.5203125\" data-w=\"640\" data-type=\"jpeg\" src=\"quiver-image-url/5CDD2871FB090650F93F40750E675568.jpg\" data-fail=\"0\" width=\"640\" height=\"333\"></p><p class=\"\" style=\"margin-top: -6px;margin-bottom: 1em;word-wrap: break-word;text-align: center;line-height: 1.5;color: rgb(153, 153, 153);font-size: 16px;\">解包</p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\">关于同步和异步后面在详细说明</p><ul class=\"list-paddingleft-2\"><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">blocking I/O</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">nonblocking I/O</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">I/O multiplexing (select&nbsp;and&nbsp;poll)</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">signal driven I/O (SIGIO)</p></li><li><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">asynchronous I/O (the POSIX&nbsp;aio_functions)</p></li></ul><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><img data-src=\"http://mmbiz.qpic.cn/mmbiz_jpg/2H3gcc9GEbtMaXMsUm6zF5742lHW743sDic4wZ5V9P9sdS0My9oSLwQBEha5a7ezTXUDBz5lpuzSKJt35tkuNrQ/?wx_fmt=jpeg\" style=\"max-width: 80%; display: block; clear: both; margin-right: auto; margin-left: auto; width: auto !important; visibility: visible !important;\" class=\"\" data-ratio=\"0.3614457831325301\" data-w=\"415\" data-type=\"jpeg\" src=\"quiver-image-url/96EF8349C08A669B9F3D77DC14F8D1C2.jpg\" data-fail=\"0\" width=\"415\" height=\"150\"></p><p class=\"\" style=\"margin-top: -6px;margin-bottom: 1em;word-wrap: break-word;text-align: center;line-height: 1.5;color: rgb(153, 153, 153);font-size: 16px;\">io</p><h1 style=\"margin-top: 1em; margin-bottom: 1em; font-size: 18px; line-height: 24px; padding-left: 12px; color: rgb(93, 93, 93);\">本章节内容：</h1><p><br></p><blockquote style=\"line-height: 1.4;padding: 12px 8px;color: rgb(153, 153, 153);background-color: rgb(243, 244, 245);margin-top: 10px;margin-bottom: 10px;\"><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">socket之send与发送缓冲区大小的没有任何关系</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">主要原因是发送缓冲区大小和接受缓冲大小可以设置任意数值</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">造成了这 一个数据包被多次接受才算完整</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\"><br></p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">异步非阻塞的socket上调用read/write函数读为2个步骤</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">步骤1 如何读取数据，注意是遇到错误该如何处理</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\">&nbsp;步骤2：如何处理这些数据，注意黏合包，半包如何处理</p><p style=\"margin-top: 5px;margin-bottom: 5px;word-wrap: break-word;text-align: justify;\"><br></p></blockquote><h1 style=\"margin-top: 1em; margin-bottom: 1em; font-size: 18px; line-height: 24px; padding-left: 12px; color: rgb(93, 93, 93);\"><br></h1><h1 style=\"margin-top: 1em; margin-bottom: 1em; font-size: 18px; line-height: 24px; padding-left: 12px; color: rgb(93, 93, 93);\">下章预告：</h1><section style=\"margin-top: 10px; margin-left: 16px;\"><strong style=\"color: inherit;\"><span style=\"margin-left: 0.3em;padding: 0.2em 0.5em;border-radius: 1.2em;border-width: 1px;border-style: solid;border-color: rgb(170, 166, 149);color: rgb(170, 166, 149);height: 1.2em;line-height: 1.2em;background-color: rgb(255, 255, 255);\">大纲</span></strong></section><section data-style=\"font-size: 14px;line-height:1.5em;color: rgb(51, 51, 51)\" style=\"margin: -1em auto 5px; padding: 20px 10px 5px; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: 1px solid rgb(170, 166, 149); color: rgb(51, 51, 51); background-color: rgb(250, 250, 250);\"><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">这次提到tcp数据流无边界特点</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">还有一个特点那就是 TCP协议中有长连接和短连接之分</p><p style=\"margin-top: 1em; margin-bottom: 1em; font-size: 16px; word-wrap: break-word; text-align: justify; line-height: 1.5; color: rgb(93, 93, 93);\">&nbsp;需要心跳包传统的 keepAlive有什么缺点，为什么非要自己实现</p></section><p><br></p><p><br></p><h1 style=\"margin-top: 1em; margin-bottom: 1em; font-size: 18px; line-height: 24px; padding-left: 12px; color: rgb(93, 93, 93);\">计划：</h1><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><br></p><p style=\"margin-top: 1em;margin-bottom: 1em;word-wrap: break-word;text-align: justify;line-height: 1.5;color: rgb(93, 93, 93);\"><img data-src=\"http://mmbiz.qpic.cn/mmbiz_jpg/2H3gcc9GEbtMaXMsUm6zF5742lHW743siayicLVTfCCDjMZI59sViaPBsIpBN1E5AxdGjhE54VFNOiaGKsVAeBHK0g/?wx_fmt=jpeg\" style=\"max-width: 80%; display: block; clear: both; margin-right: auto; margin-left: auto; width: auto !important; visibility: visible !important;\" class=\"\" data-ratio=\"0.3370998116760829\" data-w=\"531\" data-type=\"jpeg\" src=\"quiver-image-url/799C50FD5DF860469CB7EAB7926300EE.jpg\" data-fail=\"0\" width=\"531\" height=\"179\"></p><p class=\"\" style=\"margin-top: -6px;margin-bottom: 1em;word-wrap: break-word;text-align: center;line-height: 1.5;color: rgb(153, 153, 153);font-size: 16px;\"><span style=\"text-align: justify;\">plan</span></p></div>"
    }
  ]
}
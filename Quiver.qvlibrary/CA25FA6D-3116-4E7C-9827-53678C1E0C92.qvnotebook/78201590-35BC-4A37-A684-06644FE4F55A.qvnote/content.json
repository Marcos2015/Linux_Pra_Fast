{
  "title": "TCP状态转换图详解-1",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><a target=\"_blank\" href=\"http://blog.csdn.net/wenqian1991/article/details/39667131\" style=\"box-sizing: border-box; color: rgb(202, 12, 22); text-decoration: none; margin: 0px; padding: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\">在前面</a>，已经介绍了TCP协议的三路握手和四次挥手。如下图所示，TCP通信过程包括三个步骤：建立TCP连接通道（三次握手）、数据传输、断开TCP连接通道（四次挥手）。</span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"quiver-image-url/23B6A16174D0E52B8813AB9B92B7C20F\" alt=\"\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; outline: none;\" width=\"437\" height=\"486\"><br style=\"box-sizing: border-box;\"></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">这里进一步探究TCP三路握手和四次挥手过程中的状态变迁以及数据传输过程。先看TCP状态状态转换图。</span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;<img src=\"quiver-image-url/1E3E2D0028D510D36EED1C0ABEFAB3E9\" alt=\"\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; outline: none;\" width=\"450\" height=\"495\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br style=\"box-sizing: border-box;\"></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">上半部分是TCP三路握手过程的状态变迁，下半部分是TCP四次挥手过程的状态变迁。<br style=\"box-sizing: border-box;\"></span></p><ol style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">CLOSED</strong>：起始点，在超时或者连接关闭时候进入此状态，这并不是一个真正的状态，而是这个状态图的假想起点和终点。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">LISTEN</strong>：服务器端等待连接的状态。服务器经过 socket，bind，listen 函数之后进入此状态，开始监听客户端发过来的连接请求。此称为应用程序被动打开（等到客户端连接请求）。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">SYN_SENT</strong>：第一次握手发生阶段，客户端发起连接。客户端调用 connect，发送 SYN 给服务器端，然后进入 SYN_SENT 状态，等待服务器端确认（三次握手中的第二个报文）。如果服务器端不能连接，则直接进入CLOSED状态。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">SYN_RCVD</strong>：第二次握手发生阶段，跟 3 对应，这里是服务器端接收到了客户端的 SYN，此时服务器由 LISTEN 进入 SYN_RCVD状态，同时服务器端回应一个 ACK，然后再发送一个 SYN 即 SYN+ACK 给客户端。状态图中还描绘了这样一种情况，当客户端在发送 SYN 的同时也收到服务器端的 SYN请求，即两个同时发起连接请求，那么客户端就会从 SYN_SENT 转换到 SYN_REVD 状态。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">ESTABLISHED</strong>：第三次握手发生阶段，客户端接收到服务器端的 ACK 包（ACK，SYN）之后，也会发送一个 ACK 确认包，客户端进入 ESTABLISHED 状态，表明客户端这边已经准备好，但TCP 需要两端都准备好才可以进行数据传输。服务器端收到客户端的 ACK 之后会从 SYN_RCVD 状态转移到 ESTABLISHED 状态，表明服务器端也准备好进行数据传输了。这样客户端和服务器端都是 ESTABLISHED 状态，就可以进行后面的数据传输了。所以 ESTABLISHED 也可以说是一个数据传送状态。</span></li></ol><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">上面就是 TCP 三次握手过程的状态变迁。结合第一张三次握手过程图，从报文的角度看状态变迁：SYN_SENT 状态表示已经客户端已经发送了 SYN 报文，SYN_RCVD 状态表示服务器端已经接收到了 SYN 报文。<br style=\"box-sizing: border-box;\"></span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><br style=\"box-sizing: border-box;\"></span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">下面看看TCP四次挥手过程的状态变迁。结合第一张四次挥手过程图来理解。</span></p><ol style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">FIN_WAIT_1</strong>：第一次挥手。主动关闭的一方（执行主动关闭的一方既可以是客户端，也可以是服务器端，这里以客户端执行主动关闭为例），终止连接时，发送 FIN 给对方，然后等待对方返回 ACK 。调用 close() 第一次挥手就进入此状态。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">CLOSE_WAIT</strong>：接收到FIN 之后，被动关闭的一方进入此状态。具体动作是接收到 FIN，同时发送 ACK。之所以叫 CLOSE_WAIT 可以理解为被动关闭的一方此时正在等待上层应用程序发出关闭连接指令。<a target=\"_blank\" href=\"http://blog.csdn.net/wenqian1991/article/details/39667131\" style=\"box-sizing: border-box; color: rgb(202, 12, 22); text-decoration: none; margin: 0px; padding: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\">前面</a>已经说过，TCP关闭是全双工过程，这里客户端执行了主动关闭，被动方服务器端接收到FIN 后也需要调用 close 关闭，这个 CLOSE_WAIT 就是处于这个状态，等待发送 FIN，发送了FIN 则进入 LAST_ACK 状态。<br style=\"box-sizing: border-box;\"></span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">FIN_WAIT_2</strong>：主动端（这里是客户端）先执行主动关闭发送FIN，然后接收到被动方返回的 ACK 后进入此状态。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">LAST_ACK</strong>：被动方（服务器端）发起关闭请求，由状态2 进入此状态，具体动作是发送 FIN给对方，同时在接收到ACK 时进入CLOSED状态。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">CLOSING</strong>：两边同时发起关闭请求时（即主动方发送FIN，等待被动方返回ACK，同时被动方也发送了FIN，主动方接收到了FIN之后，发送ACK给被动方），主动方会由FIN_WAIT_1 进入此状态，等待被动方返回ACK。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><strong style=\"box-sizing: border-box;\">TIME_WAIT</strong>：从状态变迁图会看到，四次挥手操作最后都会经过这样一个状态然后进入CLOSED状态。共有三个状态会进入该状态</span></li></ol><ul style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">由CLOSING进入：同时发起关闭情况下，当主动端接收到ACK后，进入此状态，实际上这里的同时是这样的情况：客户端发起关闭请求，发送FIN之后等待服务器端回应ACK，但此时服务器端同时也发起关闭请求，也发送了FIN，并且被客户端先于ACK接收到。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">由FIN_WAIT_1进入：发起关闭后，发送了FIN，等待ACK的时候，正好被动方（服务器端）也发起关闭请求，发送了FIN，这时客户端接收到了先前ACK，也收到了对方的FIN，然后发送ACK（对对方FIN的回应），与CLOSING进入的状态不同的是接收到FIN和ACK的先后顺序。</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">由FIN_WAIT_2进入：这是不同时的情况，主动方在完成自身发起的主动关闭请求后，接收到了对方发送过来的FIN，然后回应 ACK。<br style=\"box-sizing: border-box;\"></span></li></ul><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">下面来看看这个看似有点多余的TIME_WAIT状态：从上面进入TIME_WAIT状态的三个状态动作来看（可以直接看状态变迁图）都是主动方最后回应一个ACK（CLOSING实际上前面的那个FIN_WAIT_1状态就已经回应了ACK）。</span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><br></span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">先考虑这样的一个情况，假如这个最后回应的ACK丢失了，也就是服务器端接收不到这个ACK，那么服务器将继续发送它最终的那个FIN，因此客户端必须维护状态信息（TIME_WAIT）允许它重发最后的那个ACK。如果没有这个TIME_WAIT状态，客户端处于CLOSED状态（开头就说了CLOSED状态实际并不存在，是我们为了方便描述假想的），那么客户端将响应RST，服务器端收到后会将该RST分节解释成一个错误，也就不能实现最后的全双工关闭了（可能是主动方单方的关闭）。所以要实现TCP全双工连接的正常终止（两方都关闭连接），必须处理终止过程中四个分节任何一个分节的丢失情况，那么主动关闭连接的主动端必须维持TIME_WAIT状态，最后一个回应ACK的是主动执行关闭的那端。从变迁图可以看出，如果没有TIME_WAIT状态，我们将没有任何机制来保证最后一个ACK能够正常到达。前面的FIN，ACK正常到达均有相应的状态对应。</span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><br></span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">还有这样一种情况，如果目前的通信双方都已经调用了 close()，都到达了CLOSED状态，没有TIME_WAIT状态时，会出现这样一种情况，现在有一个新的连接被建立起来，使用的IP地址和端口和这个先前到达了CLOSED状态的完全相同，假定原先的连接中还有数据报残存在网络之中，这样新的连接建立以后传输的数据极有可能就是原先的连接的数据报，为了防止这一点，TCP不允许从处于TIME_WAIT状态的socket 建立一个连接。处于TIME_WAIT状态的 socket 在等待了两倍的MSL时间之后，将会转变为CLOSED状态。这里TIME_WAIT状态持续的时间是2MSL（MSL是任何IP数据报能够在因特网中存活的最长时间），足以让这两个方向上的数据包被丢弃（最长是2MSL）。通过实施这个规则，我们就能保证每成功建立一个TCP连接时，来自该连接先前化身的老的重复分组都已经在网络中消逝了。</span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">&nbsp; 综上来看：TIME_WAIT存在的两个理由就是</span></p><ol style=\"box-sizing: border-box; margin: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">可靠地实现TCP全双工连接的终止；</span></li><li style=\"box-sizing: border-box; margin: 0px 0px 0px 40px; padding: 0px; list-style: decimal;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">允许老的重复分节（数据报）在网络中消逝。</span></li></ol><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\"><br style=\"box-sizing: border-box;\"></span></p><p style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-family: FangSong_GB2312; font-size: 18px;\">参考资料《UNP》《TCP/IP Vol.1》</span></p><div><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;\nmargin-bottom:.0001pt;background:white\"><span style=\"color: rgb(69, 69, 69); font-family: FangSong_GB2312; font-size: large; background-color: rgb(255, 255, 255);\">&nbsp; &nbsp; &nbsp;如果主动方在2MSL内没有收到被动方的FIN,说明被动方安全收到FIN.</span></p><p style=\"margin-top:0cm;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;\nmargin-bottom:.0001pt;background:white\"><span style=\"color: rgb(69, 69, 69); font-family: FangSong_GB2312; font-size: large; background-color: rgb(255, 255, 255);\"><br></span></p></div><h3><ul><li><i><b><u><font color=\"#323232\" style=\"background-color: rgb(254, 250, 0);\"><font class=\"f006\" style=\"font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-variant-ligatures: normal;\">我理解</font></font></u></b></i></li><li><i><b><u><font color=\"#323232\" style=\"background-color: rgb(254, 250, 0);\"><font class=\"f006\" style=\"font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-variant-ligatures: normal;\"><br></font></font></u></b></i></li><li><i><b><u><font color=\"#323232\" style=\"background-color: rgb(254, 250, 0);\"><font class=\"f006\" style=\"font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-variant-ligatures: normal;\">第一个MSL，是主动close端发出被动端FIN对应的ACK这个包在网络上的最大存活时间&nbsp;</font></font></u></b></i></li></ul><ul><li><i><b><u><font color=\"#323232\" style=\"background-color: rgb(254, 250, 0);\"><font class=\"f006\" style=\"font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-variant-ligatures: normal;\">第二个MSL,是被动端重复的FIN在网络上的最大存活时间&nbsp;</font></font></u></b></i></li></ul><ul><li><i><b><u><font color=\"#323232\" style=\"background-color: rgb(254, 250, 0);\"><font class=\"f006\" style=\"font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-variant-ligatures: normal;\">二者之和就是2MSL .</font></font></u></b></i></li></ul></h3><p></p>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": "<h3 style=\"color: rgb(221, 221, 221);\"><ul><li><font face=\"FangSong_GB2312\" size=\"4\"><b><i><u><font class=\"f006\" style=\"color: rgb(0, 180, 174); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">还有，每个ACK和FIN都有可能丢失掉，如果主动端发送的FIN或者ACK被动端总是收不到&nbsp;</font><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"></span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font class=\"f006\" style=\"color: rgb(0, 180, 174); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">: 是不是就是双方都按超时处理连接中断呢？&nbsp;</font><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"></span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">&nbsp;&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">如果主动端发送的FIN/ACK而总是收不到对方的相应确认ACK&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">它就是跟一般的超时重传处理一样&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">从协议上来说，主动端出现的FIN_WAIT状态和被动端出现的CLOSE_WAIT是可以永远保持的&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">直到应用层关闭&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">但是大多数实现都会采用一个超时机制来防止永远的保持&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">当然很多情况下应用层就会解决这个问题&nbsp;</span><br style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 宋体, 'Lucida Grande', 'Lucida Sans', Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; orphans: 2; widows: 2;\">你可以想象下，在一个telnet连接中，如果网线突然被拔掉的情况&nbsp;</span><br></u></i></b></font></li></ul><div><br></div><div><br></div><div><br></div><div><br></div><ul></ul></h3>"
    },
    {
      "type": "text",
      "data": "<div style=\"color: rgb(221, 221, 221);\"><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 36pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">如果</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Client</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">直接</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">CLOSED</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">了，那么由于</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">IP</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">协议的不可靠性或者是其它网络原因，导致</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Server</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">没有收到</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Client</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">最后回复的</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">ACK</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">。那么</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Server</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">就会在超时之后继续发送</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">FIN</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，此时由于</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Client</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">已经</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">CLOSED</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">了，就找不到与重发的</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">FIN</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">对应的连接，最后</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Server</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">就会收到</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">RST(复位报文)</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">而不是</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">ACK</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Server</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">就会以为是连接错误把问题报告给高层。这样的情况虽然不会造成数据丢失，但是却导致</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">TCP</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">协议不符合可靠连接的要求。所以，</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">Client</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">不是直接进入</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">CLOSED</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，而是要保持</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">TIME_WAIT</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，当再次收到</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">FIN</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">的时候，能够保证对方收到</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">ACK</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，最后正确的关闭连接。</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\"><o:p></o:p></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 36pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"><br></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 36pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"><br></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 36pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 42pt;\"><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">TIME_WAIT</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">的状态是为了等待连接上所有的分组的消失。单纯的想法，发送端只需要等待一个</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">MSL</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">就足够了。这是不够的，假设现在一个</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">MSL</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">的时候，接收端需要发送一个应答，这时候，我们也必须等待这个应答的消失，这个应答的消失也是需要一个</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">MSL</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">，所以我们需要等待</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">2MSL</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">。（更多的内容参考</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">&nbsp;</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">《</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">UNIX&nbsp;</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">网络编程》第</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">3</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">版</span><span lang=\"EN-US\" style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: FangSong_GB2312, serif; background-position: initial initial; background-repeat: initial initial;\">&nbsp;2.7&nbsp;</span><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\">节）</span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 42pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"><br></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 42pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"><br></span></p><p style=\"background-color: white; margin: 0cm 0cm 0.0001pt 42pt;\"><span style=\"color: rgb(69, 69, 69); background-color: yellow; font-size: 18pt; font-family: 'PingFang SC', sans-serif; background-position: initial initial; background-repeat: initial initial;\"><br></span></p></div><p style=\"background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"></p><h1 style=\"color: rgb(221, 221, 221);\"></h1><h2 style=\"color: rgb(221, 221, 221);\"></h2><h3 style=\"color: rgb(221, 221, 221);\"><ul></ul></h3>"
    },
    {
      "type": "text",
      "data": "<span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">为什么 TIME_WAIT 状态需要保持 2MSL 这么长的时间？&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">如果 TIME_WAIT 状态保持时间不足够长(比如小于2MSL)，第一个连接就正常终止了。&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">第二个拥有相同相关五元组的连接出现，而第一个连接的重复报文到达，干扰了第二&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">个连接。TCP实现必须防止某个连接的重复报文在连接终止后出现，所以让TIME_WAIT&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">状态保持时间足够长(2MSL)，连接相应方向上的TCP报文要么完全响应完毕，要么被&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">丢弃。建立第二个连接的时候，不会混淆。</span><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div>"
    },
    {
      "type": "text",
      "data": "<span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">为什么需要 TIME_WAIT 状态？&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">假设最终的ACK丢失，server将重发FIN，client必须维护TCP状态信息以便可以重发&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">最终的ACK，否则会发送RST，结果server认为发生错误。TCP实现必须可靠地终止连&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">接的两个方向(全双工关闭)，client必须进入 TIME_WAIT 状态，因为client可能面&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">临重发最终ACK的情形。&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">{&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">scz 2001-08-31 13:28&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">先调用close()的一方会进入TIME_WAIT状态&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">}&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">此外，考虑一种情况，TCP实现可能面临先后两个同样的相关五元组。如果前一个连&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">接处在 TIME_WAIT 状态，而允许另一个拥有相同相关五元组的连接出现，可能处理&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; box-sizing: border-box; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\">TCP报文时，两个连接互相干扰。使用 SO_REUSEADDR 选项就需要考虑这种情况。&nbsp;</span><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><div><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; orphans: 2; widows: 2; font-variant-ligatures: normal;\"><br></span></div><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><br></p>"
    },
    {
      "type": "text",
      "data": "<p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2;\">更详细的2MSL的解释: (来自知乎:<a href=\"https://www.zhihu.com/question/36930631\" style=\"font-size: 13px; font-family: -apple-system, Helvetica, Arial, sans-serif;\">https://www.zhihu.com/question/36930631</a>).</p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; 关闭流程:</font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1.主动方-&gt;被动方 FIN.</font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2-1.被动方-&gt;主动方 ACK.(主动方收到被动方的ACK之后,从主动方到被动方的连接就关闭了,这时主动方不能发送数据,但是可以接收数据).</font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2-2.被动方-&gt;主动方 FIN.</font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.主动方-&gt;被动方 ACK.</font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">一个通常的TCP连接终止可以用图描述如下：&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">client &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; server&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FIN M&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">close&nbsp;&nbsp;-----------------&gt;&nbsp;&nbsp;(被动关闭)&nbsp;</span></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACK M+1&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;-----------------&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FIN N&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;-----------------&nbsp;&nbsp;close&nbsp;</span></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><br></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACK N+1&nbsp;</span><br style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\"><span style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————————&gt;&nbsp;</span><font face=\"FangSong_GB2312\" size=\"4\"><br></font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><br></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\"><br></font></p><p style=\"color: rgb(69, 69, 69); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><font face=\"FangSong_GB2312\" size=\"4\">&nbsp; &nbsp; &nbsp; &nbsp;主动方(发起关闭一方)发送ACK给被动方(接收到关闭请求一方), 被动方收到ACK,关闭连接.但是主动方无法知道ACK是否已经到达被动方,于是开始等待,等待什么呢? 假如ACK没有到达被动方,被动方会为FIN这个消息超时重传(timeout retransmit),那如果主动方等待时间足够,有收到FIN消息,说明ACK没有到达被动方,于是再次发送ACK,直到在足够的时间内没有收到FIN,说明ACK成功到达.这个等待时间至少是:被动方的timeout + FIN 的传输时间,为了保证可靠,采用更加保守的等待时间2MSL.</font></p><p style=\"color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2;\">&nbsp; &nbsp; &nbsp; 在TIME_WAIT状态时两端的端口不能使用，要等到2MSL时间结束才可继续使用。当连接处于2MSL等待阶段时任何迟到的报文段都将被丢弃。不过在实际应用中可以通过设置SO_REUSEADDR选项达到不必等待2MSL时间结束再使用此端口。</p><p style=\"color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"></p><p style=\"color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); box-sizing: border-box; margin: 0px; padding: 0px; font-family: 'PingFang SC', 'Microsoft YaHei', SimHei, Arial, SimSun; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2;\">&nbsp;&nbsp;&nbsp;&nbsp;TTL与MSL是有关系的但不是简单的相等的关系，MSL要大于等于TTL。</p><div><br></div>"
    }
  ]
}
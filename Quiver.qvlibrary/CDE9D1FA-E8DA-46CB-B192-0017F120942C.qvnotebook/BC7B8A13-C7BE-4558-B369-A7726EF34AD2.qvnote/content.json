{
  "title": "linux socket 缓存: core rmem_default rmem_max",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"dp-highlighter bg_html\"><div class=\"bar\"><div class=\"tools\"><b>[html]</b> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"ViewSource\" title=\"view plain\">view plain</a><span class=\"tracking-ad\" data-mod=\"popu_168\"> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"CopyToClipboard\" title=\"copy\">copy</a><div style=\"position: absolute; left: 221px; top: 232px; width: 16px; height: 16px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_1\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" name=\"ZeroClipboardMovie_1\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=1&amp;width=16&amp;height=16\" wmode=\"transparent\" height=\"16\" align=\"middle\" width=\"16\"></div></span><span class=\"tracking-ad\" data-mod=\"popu_169\"> </span></div></div><ol start=\"1\" class=\"dp-xml\"><li class=\"alt\">之前讲到缓存大小的配置项:&nbsp;&nbsp;</li><li class=\"\">/proc/sys/net/core/rmem_default&nbsp;&nbsp;</li><li class=\"alt\">/proc/sys/net/core/rmem_max&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">使用udp接收数据时：&nbsp;&nbsp;</li><li class=\"\">若没有调用setsockopt设置系统接收缓存,则接收缓存的大小为rmem_default.&nbsp;&nbsp;</li><li class=\"alt\">若程序调用setsockopt设置系统接收缓存,设置值不能超过rmem_max.&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">系统会为每个udp&nbsp;socket申请一份缓存空间,而不是共用同一份缓存.&nbsp;&nbsp;</li><li class=\"\">即每个udp&nbsp;socket都会有一个rmem_default大小的缓存空间(假设没有setsockopt设置).&nbsp;&nbsp;</li></ol></div>\n<p><br>\n</p>\n<p>测试代码：</p>\n<p></p>\n<div class=\"dp-highlighter bg_cpp\"><div class=\"bar\"><div class=\"tools\"><b>[cpp]</b> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"ViewSource\" title=\"view plain\">view plain</a><span class=\"tracking-ad\" data-mod=\"popu_168\"> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"CopyToClipboard\" title=\"copy\">copy</a><div style=\"position: absolute; left: 216px; top: 527px; width: 16px; height: 16px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_2\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" name=\"ZeroClipboardMovie_2\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=2&amp;width=16&amp;height=16\" wmode=\"transparent\" height=\"16\" align=\"middle\" width=\"16\"></div></span><span class=\"tracking-ad\" data-mod=\"popu_169\"> </span></div></div><ol start=\"1\" class=\"dp-cpp\"><li class=\"alt\"><span class=\"comment\">//udp.c</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;stdio.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;stdlib.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;string.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;errno.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;unistd.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;sys/types.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;netinet/in.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#define&nbsp;SERVER_PORT&nbsp;&nbsp;1201</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#define&nbsp;MAX_DATA_LEN&nbsp;1024&nbsp;&nbsp;&nbsp;//服务端每次发送数据大小</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#define&nbsp;SERVER_SEND_SLEEP&nbsp;1000*4&nbsp;&nbsp;&nbsp;&nbsp;//服务端发送数据的间隔时间</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#define&nbsp;CLIENT_RECV_SLEEP&nbsp;1000*100&nbsp;&nbsp;//客户端接收数据的间隔时间</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\"><span class=\"comment\">//全局定义</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"keyword\">static</span>&nbsp;<span class=\"datatypes\">int</span>&nbsp;serverfd&nbsp;&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//服务端UDP句柄</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"keyword\">static</span>&nbsp;<span class=\"datatypes\">int</span>&nbsp;sendcount&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//发送数据的次数</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\"><span class=\"comment\">//服务端发送数据线程</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"keyword\">void</span>*&nbsp;thread_server_send(<span class=\"keyword\">void</span>&nbsp;*arg)&nbsp;&nbsp;</li><li class=\"\">{&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">static</span>&nbsp;<span class=\"datatypes\">int</span>&nbsp;threadidx&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;threadidx++;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;tname[256]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;snprintf(tname,&nbsp;<span class=\"keyword\">sizeof</span>(tname),&nbsp;<span class=\"string\">\"thread-%d\"</span>,&nbsp;threadidx);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//填充发送数据</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;data[MAX_DATA_LEN]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">for</span>&nbsp;(&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;MAX_DATA_LEN;&nbsp;i++)&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[i]&nbsp;=&nbsp;<span class=\"string\">'0'</span>&nbsp;+&nbsp;(i&nbsp;%&nbsp;10);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//拷贝客户端地址信息</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">struct</span>&nbsp;sockaddr_in&nbsp;cliaddr&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;memcpy(&amp;cliaddr,&nbsp;arg,&nbsp;<span class=\"keyword\">sizeof</span>(cliaddr));&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;printer&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">while</span>(1){&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(sendcount&nbsp;&lt;=&nbsp;0){&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usleep(1000*10);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(printer&nbsp;&gt;=&nbsp;0)&nbsp;printer++;&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(printer&gt;250){&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"%s&nbsp;is&nbsp;alive!\\n\"</span>,&nbsp;tname);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printer&nbsp;=&nbsp;-1;&nbsp;<span class=\"comment\">//不再打印</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">continue</span>;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;count&nbsp;=&nbsp;sendcount;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(2);<span class=\"comment\">//等待,让其他线程也读取到sendcount.</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sendcount&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"read&nbsp;new&nbsp;count&nbsp;value:%d\\n\"</span>,&nbsp;count);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">for</span>&nbsp;(&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;count;&nbsp;i++)&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;result&nbsp;=&nbsp;sendto(serverfd,&nbsp;data,&nbsp;<span class=\"keyword\">sizeof</span>(data),&nbsp;0,&nbsp;(<span class=\"keyword\">struct</span>&nbsp;sockaddr*)&amp;cliaddr,&nbsp;<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span>&nbsp;sockaddr_in));&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"tname:%s&nbsp;fd:%d&nbsp;sendlen:%d&nbsp;client:%s:%u&nbsp;counter:%d\\n\"</span>,&nbsp;tname,&nbsp;serverfd,&nbsp;result,&nbsp;inet_ntoa(cliaddr.sin_addr),&nbsp;ntohs(cliaddr.sin_port),&nbsp;i+1);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usleep(SERVER_SEND_SLEEP);&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"datatypes\">int</span>&nbsp;exec_udp_server()&nbsp;&nbsp;</li><li class=\"\">{&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"########&nbsp;exec&nbsp;udp&nbsp;server&nbsp;########\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(&nbsp;(serverfd&nbsp;=&nbsp;socket(AF_INET,&nbsp;SOCK_DGRAM,&nbsp;0))&nbsp;==&nbsp;-1)&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"Socket&nbsp;error..&nbsp;%d\\n\"</span>,&nbsp;errno);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(&nbsp;EXIT_FAILURE&nbsp;);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">struct</span>&nbsp;sockaddr_in&nbsp;servaddr;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;bzero(&nbsp;&amp;servaddr,&nbsp;<span class=\"keyword\">sizeof</span>(servaddr));&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_family&nbsp;=&nbsp;AF_INET;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_addr.s_addr&nbsp;=&nbsp;htonl(INADDR_ANY);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_port&nbsp;=&nbsp;htons(SERVER_PORT);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//检查发送缓存大小</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;buflen&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;paramlen&nbsp;=&nbsp;<span class=\"keyword\">sizeof</span>(buflen);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;ret&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//setsockopt(listenfd,&nbsp;SOL_SOCKET,&nbsp;SO_SNDBUF,&nbsp;(char*)&amp;nZero,&nbsp;sizeof(nZero));&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;getsockopt(serverfd,&nbsp;SOL_SOCKET,&nbsp;SO_SNDBUF,&nbsp;&amp;buflen,&nbsp;¶mlen);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"fd:%d&nbsp;send&nbsp;buffer&nbsp;length:%d&nbsp;result:%d\\n\"</span>,&nbsp;serverfd,&nbsp;buflen,&nbsp;ret);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;getsockopt(serverfd,&nbsp;SOL_SOCKET,&nbsp;SO_RCVBUF,&nbsp;&amp;buflen,&nbsp;¶mlen);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"fd:%d&nbsp;recv&nbsp;buffer&nbsp;length:%d&nbsp;result:%d\\n\"</span>,&nbsp;serverfd,&nbsp;buflen,&nbsp;ret);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//绑定端口</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(&nbsp;bind(serverfd,&nbsp;(<span class=\"keyword\">struct</span>&nbsp;sockaddr*)&amp;servaddr,&nbsp;<span class=\"keyword\">sizeof</span>(servaddr))&nbsp;==&nbsp;-1)&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"Bind&nbsp;error...&nbsp;%d\\n\"</span>,&nbsp;errno);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(&nbsp;EXIT_FAILURE&nbsp;);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"udp&nbsp;bind&nbsp;exec\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//接收客户端数据</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">while</span>(1){&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//使用说明:</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//选择1之后,服务器这边会等待客户端数据.此时启动客户端程序,待服务端收到客户端数据后,该步骤才执行完.</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//选择2之后,需要数据发送次数(每次发送数据为MAX_DATA_LEN),为所有已经连接连接上的客户端共用.</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"menu&nbsp;info\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"1：waiting&nbsp;for&nbsp;client\\n\"</span>);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"2：ready&nbsp;to&nbsp;send&nbsp;data\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;input[256]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets(input);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(strcmp(input,&nbsp;<span class=\"string\">\"1\"</span>)&nbsp;==&nbsp;0){&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"waiting&nbsp;for&nbsp;client&nbsp;data&nbsp;now!\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;recvbuf[1024]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">struct</span>&nbsp;sockaddr_in&nbsp;cliaddr&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paramlen&nbsp;=&nbsp;<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span>&nbsp;sockaddr_in);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;recvfrom(serverfd,&nbsp;recvbuf,&nbsp;<span class=\"keyword\">sizeof</span>(recvbuf),&nbsp;0,&nbsp;(<span class=\"keyword\">struct</span>&nbsp;sockaddr*)&amp;cliaddr,&nbsp;¶mlen);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"recv&nbsp;client&nbsp;data:%s&nbsp;len:%d\\n\"</span>,&nbsp;recvbuf,&nbsp;ret);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;<span class=\"keyword\">thread</span>&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pthread_create(&amp;<span class=\"keyword\">thread</span>,&nbsp;NULL,&nbsp;thread_server_send,&nbsp;&amp;cliaddr);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(1);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class=\"keyword\">else</span>&nbsp;<span class=\"keyword\">if</span>&nbsp;(strcmp(input,&nbsp;<span class=\"string\">\"2\"</span>)&nbsp;==&nbsp;0){&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;input[256]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"the&nbsp;count&nbsp;you&nbsp;want&nbsp;to&nbsp;send:\"</span>);<span class=\"comment\">//对所有客户端有效</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets(input);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sendcount&nbsp;=&nbsp;atoi(input);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"new&nbsp;count&nbsp;value:%d\\n\"</span>,&nbsp;sendcount);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"datatypes\">int</span>&nbsp;exec_udp_client()&nbsp;&nbsp;</li><li class=\"\">{&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"########&nbsp;exec&nbsp;udp&nbsp;client&nbsp;########\\n\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;connfd;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>(&nbsp;(connfd&nbsp;=&nbsp;socket(AF_INET,&nbsp;SOCK_DGRAM,&nbsp;0))&nbsp;==&nbsp;-1&nbsp;)&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"Socket&nbsp;error..&nbsp;%d\\n\"</span>,&nbsp;errno);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(&nbsp;EXIT_FAILURE&nbsp;);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">struct</span>&nbsp;sockaddr_in&nbsp;servaddr;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;bzero(&amp;servaddr,&nbsp;<span class=\"keyword\">sizeof</span>(servaddr));&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_family&nbsp;=&nbsp;AF_INET;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_addr.s_addr&nbsp;=&nbsp;inet_addr(<span class=\"string\">\"192.168.6.37\"</span>);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;servaddr.sin_port&nbsp;=&nbsp;htons(SERVER_PORT);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//检查发送缓存大小</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;buflen&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;paramlen&nbsp;=&nbsp;<span class=\"keyword\">sizeof</span>(buflen);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;ret&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//setsockopt(listenfd,&nbsp;SOL_SOCKET,&nbsp;SO_SNDBUF,&nbsp;(char*)&amp;nZero,&nbsp;sizeof(nZero));&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;getsockopt(connfd,&nbsp;SOL_SOCKET,&nbsp;SO_SNDBUF,&nbsp;&amp;buflen,&nbsp;¶mlen);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"fd:%d&nbsp;send&nbsp;buffer&nbsp;length:%d&nbsp;result:%d\\n\"</span>,&nbsp;connfd,&nbsp;buflen,&nbsp;ret);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;getsockopt(connfd,&nbsp;SOL_SOCKET,&nbsp;SO_RCVBUF,&nbsp;&amp;buflen,&nbsp;¶mlen);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"fd:%d&nbsp;recv&nbsp;buffer&nbsp;length:%d&nbsp;result:%d\\n\"</span>,&nbsp;connfd,&nbsp;buflen,&nbsp;ret);&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//发送数据到服务端</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;sendbuf[1024]&nbsp;=&nbsp;<span class=\"string\">\"hello&nbsp;server,&nbsp;start&nbsp;now!\"</span>;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;result&nbsp;=&nbsp;sendto(connfd,&nbsp;sendbuf,&nbsp;strlen(sendbuf),&nbsp;0,&nbsp;(<span class=\"keyword\">struct</span>&nbsp;sockaddr*)&amp;servaddr,&nbsp;<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span>&nbsp;sockaddr_in));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"send&nbsp;server&nbsp;data:%s&nbsp;len:%d\\n\"</span>,&nbsp;sendbuf,&nbsp;result);&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//接收缓存&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;data[MAX_DATA_LEN+1]&nbsp;=&nbsp;{0};&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;counter&nbsp;=&nbsp;0;&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">while</span>(1)&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;len&nbsp;=&nbsp;<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span>&nbsp;sockaddr_in);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">int</span>&nbsp;result&nbsp;=&nbsp;recvfrom(connfd,&nbsp;data,&nbsp;MAX_DATA_LEN,&nbsp;0,&nbsp;(<span class=\"keyword\">struct</span>&nbsp;sockaddr*)&amp;servaddr,&nbsp;&amp;len);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(result&nbsp;&gt;&nbsp;0)&nbsp;counter++;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class=\"string\">\"fd:%d&nbsp;recvlen:%d&nbsp;server:%s:%u&nbsp;counter:%d\\n\"</span>,&nbsp;connfd,&nbsp;result,&nbsp;inet_ntoa(servaddr.sin_addr),&nbsp;ntohs(servaddr.sin_port),&nbsp;counter);&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usleep(CLIENT_RECV_SLEEP);&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;close(connfd);&nbsp;&nbsp;</li><li class=\"\">}&nbsp;&nbsp;</li></ol></div>\n<p></p>\n<div class=\"dp-highlighter bg_cpp\"><div class=\"bar\"><div class=\"tools\"><b>[cpp]</b> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"ViewSource\" title=\"view plain\">view plain</a><span class=\"tracking-ad\" data-mod=\"popu_168\"> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"CopyToClipboard\" title=\"copy\">copy</a><div style=\"position: absolute; left: 216px; top: 3564px; width: 16px; height: 16px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_3\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" name=\"ZeroClipboardMovie_3\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=3&amp;width=16&amp;height=16\" wmode=\"transparent\" height=\"16\" align=\"middle\" width=\"16\"></div></span><span class=\"tracking-ad\" data-mod=\"popu_169\"> </span></div></div><ol start=\"1\" class=\"dp-cpp\"><li class=\"alt\"><span class=\"comment\">//main.c</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"comment\">//输入参数us表示执行服务端代码.</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"comment\">//输入参数us表示执行客户端代码</span>&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;stdio.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;stdlib.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;stdarg.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;time.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\"><span class=\"preprocessor\">#include&nbsp;&lt;string.h&gt;</span>&nbsp;&nbsp;</li><li class=\"\"><span class=\"preprocessor\">#include&nbsp;&lt;unistd.h&gt;</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\"><span class=\"datatypes\">int</span>&nbsp;main(<span class=\"datatypes\">int</span>&nbsp;argc,&nbsp;<span class=\"datatypes\">char</span>**&nbsp;argv[])&nbsp;&nbsp;</li><li class=\"alt\">{&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(strcmp(argv[1],&nbsp;<span class=\"string\">\"us\"</span>)&nbsp;==&nbsp;0){&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec_udp_server();&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}<span class=\"keyword\">else</span>&nbsp;<span class=\"keyword\">if</span>&nbsp;(strcmp(argv[1],&nbsp;<span class=\"string\">\"uc\"</span>)&nbsp;==&nbsp;0){&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec_udp_client();&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\">return</span>&nbsp;0;&nbsp;&nbsp;</li><li class=\"\">}&nbsp;&nbsp;</li></ol></div>\n<p><br>\n</p>\n<p></p><div class=\"dp-highlighter bg_html\"><div class=\"bar\"><div class=\"tools\"><b>[html]</b> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"ViewSource\" title=\"view plain\">view plain</a><span class=\"tracking-ad\" data-mod=\"popu_168\"> <a href=\"http://blog.csdn.net/penzchan/article/details/41682411#\" class=\"CopyToClipboard\" title=\"copy\">copy</a><div style=\"position: absolute; left: 221px; top: 4018px; width: 16px; height: 16px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_4\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" name=\"ZeroClipboardMovie_4\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=4&amp;width=16&amp;height=16\" wmode=\"transparent\" height=\"16\" align=\"middle\" width=\"16\"></div></span><span class=\"tracking-ad\" data-mod=\"popu_169\"> </span></div></div><ol start=\"1\" class=\"dp-xml\"><li class=\"alt\">之前讲到缓存大小的配置项:&nbsp;&nbsp;</li><li class=\"\">/proc/sys/net/core/rmem_default&nbsp;&nbsp;</li><li class=\"alt\">/proc/sys/net/core/rmem_max&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">使用udp接收数据时：&nbsp;&nbsp;</li><li class=\"\">若没有调用setsockopt设置系统接收缓存,则接收缓存的大小为rmem_default.&nbsp;&nbsp;</li><li class=\"alt\">若程序调用setsockopt设置系统接收缓存,设置值不能超过rmem_max.&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">系统会为每个udp&nbsp;socket申请一份缓存空间,而不是共用同一份缓存.&nbsp;&nbsp;</li><li class=\"\">即每个udp&nbsp;socket都会有一个rmem_default大小的缓存空间(假设没有setsockopt设置).&nbsp;&nbsp;</li><li class=\"alt\">更新:&nbsp;&nbsp;&nbsp;</li><li class=\"\">经过测试发现,实际上这个缓存空间能存储的数据大小只有getsockopt&amp;SO_RCVBUF值的一半.具体原因见下面测试过程-1.&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">测试过程-1:&nbsp;&nbsp;</li><li class=\"\">1.启动服务端程序,选择菜单-1,等待客户端的连接.&nbsp;&nbsp;</li><li class=\"alt\">2.设置客户端的接收缓存为16K&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;sysctl&nbsp;-w&nbsp;<span class=\"attribute\">net.core.rmem_max</span>=<span class=\"attribute-value\">16384</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;sysctl&nbsp;-w&nbsp;<span class=\"attribute\">net.core.rmem_default</span>=<span class=\"attribute-value\">16384</span>&nbsp;&nbsp;</li><li class=\"\">3.启动客户端程序&nbsp;&nbsp;</li><li class=\"alt\">4.服务端选择菜单-2,输入16.(即发送16K的数据给客户端)&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">服务端打印:&nbsp;&nbsp;</li><li class=\"\">read&nbsp;new&nbsp;count&nbsp;value:16&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:1&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:2&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:3&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:4&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:5&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:6&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:7&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:8&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:9&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:11&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:12&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:13&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:14&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:15&nbsp;&nbsp;</li><li class=\"\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:58402&nbsp;counter:16&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\">客户端端打印:&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;send&nbsp;buffer&nbsp;length:108544&nbsp;result:0&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recv&nbsp;buffer&nbsp;length:16384&nbsp;result:0&nbsp;&nbsp;</li><li class=\"alt\">send&nbsp;server&nbsp;data:hello&nbsp;server,&nbsp;start&nbsp;now!&nbsp;len:24&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:1&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:2&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:3&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:4&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:5&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:6&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:7&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:8&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:9&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">可以发现虽然客户端的接收缓存有16K,但实际上并没有存储下16K的数据.而只有10K.&nbsp;&nbsp;</li><li class=\"\">重复上面的测试步骤,把客户端的接收缓存修改成48K,服务端发送48次数据,客户端只收到30K.&nbsp;&nbsp;</li><li class=\"alt\">测试得出一个结论:&nbsp;upd接收缓存最多能存储数据大小为:&nbsp;SO_RCVBUF&nbsp;*&nbsp;0.625&nbsp;(0.625是我测试得出的数据,不同的机器测试结果应该不同)&nbsp;&nbsp;</li><li class=\"\">至于为什么如此?&nbsp;我也想不明白.&nbsp;&nbsp;</li><li class=\"alt\">通过不断测试,发现调用命令:&nbsp;sysctl&nbsp;-w&nbsp;<span class=\"attribute\">net.core.rmem_max</span>=<span class=\"attribute-value\">xxxx</span>&nbsp;设置缓存时,&nbsp;&nbsp;</li><li class=\"\">需要把xxxx设置为我们需要的缓存值的2倍,才能最大程度的保证不丢包.&nbsp;&nbsp;</li><li class=\"alt\">但如果程序调用setsockopt设置SO_RCVBUF把缓存设置成xxxx,此时无需乘以2倍.&nbsp;&nbsp;</li><li class=\"\">就能实现我们预期的效果.&nbsp;&nbsp;</li><li class=\"alt\">为什么?&nbsp;&nbsp;&nbsp;</li><li class=\"\">Sets&nbsp;or&nbsp;gets&nbsp;the&nbsp;maximum&nbsp;socket&nbsp;receive&nbsp;buffer&nbsp;in&nbsp;bytes.&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">The&nbsp;kernel&nbsp;doubles&nbsp;this&nbsp;value&nbsp;(to&nbsp;allow&nbsp;space&nbsp;for&nbsp;&nbsp;book‐keeping&nbsp;&nbsp;overhead)&nbsp;&nbsp;</li><li class=\"\">when&nbsp;&nbsp;it&nbsp;is&nbsp;set&nbsp;using&nbsp;setsockopt(2),&nbsp;and&nbsp;this&nbsp;doubled&nbsp;value&nbsp;is&nbsp;returned&nbsp;by&nbsp;getsockopt(2).&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">The&nbsp;default&nbsp;value&nbsp;is&nbsp;set&nbsp;by&nbsp;the&nbsp;/proc/sys/net/core/rmem_default&nbsp;file,&nbsp;&nbsp;&nbsp;</li><li class=\"\">and&nbsp;the&nbsp;maximum&nbsp;allowed&nbsp;&nbsp;value&nbsp;&nbsp;is&nbsp;&nbsp;set&nbsp;&nbsp;by&nbsp;&nbsp;the/proc/sys/net/core/rmem_max&nbsp;file.&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">The&nbsp;minimum&nbsp;(doubled)&nbsp;value&nbsp;for&nbsp;this&nbsp;option&nbsp;is&nbsp;256.&nbsp;&nbsp;</li><li class=\"\">可以在程序里调用setsockopt马上调用getsockopt查询下缓存的大小.&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">测试过程-2:&nbsp;&nbsp;</li><li class=\"\">1.启动服务端程序,选择菜单-1,等待客户端的连接.&nbsp;&nbsp;</li><li class=\"alt\">2.设置客户端的接收缓存为16K&nbsp;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;sysctl&nbsp;-w&nbsp;<span class=\"attribute\">net.core.rmem_max</span>=<span class=\"attribute-value\">16384</span>&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;sysctl&nbsp;-w&nbsp;<span class=\"attribute\">net.core.rmem_default</span>=<span class=\"attribute-value\">16384</span>&nbsp;&nbsp;</li><li class=\"\">3.启动客户端程序1&nbsp;&nbsp;</li><li class=\"alt\">4.服务端程序再次选择菜单-1&nbsp;&nbsp;</li><li class=\"\">5.启动客户端程序2&nbsp;&nbsp;</li><li class=\"alt\">6.服务端选择菜单-2,输入16.(即发送16K的数据给客户端)&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">服务端打印:&nbsp;&nbsp;</li><li class=\"\">read&nbsp;new&nbsp;count&nbsp;value:16&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:1&nbsp;&nbsp;</li><li class=\"\">read&nbsp;new&nbsp;count&nbsp;value:16&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:1&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:2&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:2&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:3&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:3&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:4&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:4&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:5&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:5&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:6&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:6&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:7&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:7&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:8&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:8&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:9&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:9&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:11&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:11&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:12&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:12&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:13&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:13&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:14&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:14&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:15&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:15&nbsp;&nbsp;</li><li class=\"\">tname:thread-2&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:57408&nbsp;counter:16&nbsp;&nbsp;</li><li class=\"alt\">tname:thread-1&nbsp;fd:3&nbsp;sendlen:1024&nbsp;client:192.168.6.125:55154&nbsp;counter:16&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;</li><li class=\"alt\">客户端1打印:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;send&nbsp;buffer&nbsp;length:108544&nbsp;result:0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recv&nbsp;buffer&nbsp;length:16384&nbsp;result:0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">send&nbsp;server&nbsp;data:hello&nbsp;server,&nbsp;start&nbsp;now!&nbsp;len:24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"alt\">客户端2打印:&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;send&nbsp;buffer&nbsp;length:108544&nbsp;result:0&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recv&nbsp;buffer&nbsp;length:16384&nbsp;result:0&nbsp;&nbsp;</li><li class=\"\">send&nbsp;server&nbsp;data:hello&nbsp;server,&nbsp;start&nbsp;now!&nbsp;len:24&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:1&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:2&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:3&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:4&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:5&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:6&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:7&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:8&nbsp;&nbsp;</li><li class=\"alt\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:9&nbsp;&nbsp;</li><li class=\"\">fd:3&nbsp;recvlen:1024&nbsp;server:192.168.6.37:1201&nbsp;counter:10&nbsp;&nbsp;</li><li class=\"alt\">&nbsp;&nbsp;</li><li class=\"\">由此可以得出结论:&nbsp;&nbsp;</li><li class=\"alt\">/proc/sys/net/core/rmem_default&nbsp;&nbsp;</li><li class=\"\">/proc/sys/net/core/rmem_max&nbsp;&nbsp;</li><li class=\"alt\">每个udp&nbsp;socket都有自己的一份缓存,而不是共用. &nbsp;</li></ol></div>"
    }
  ]
}
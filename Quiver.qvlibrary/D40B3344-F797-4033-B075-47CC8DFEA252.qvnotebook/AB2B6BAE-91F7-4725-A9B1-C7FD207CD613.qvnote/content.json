{
  "title": "编写Linux系统下Daemon程序的方法步骤",
  "cells": [
    {
      "type": "text",
      "data": "<article style=\"box-sizing: inherit; outline: 0px; position: relative; padding-top: 16px; color: rgb(51, 51, 51); font-family: &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><div id=\"article_content\" class=\"article_content csdn-tracking-statistics\" data-pid=\"blog\" data-mod=\"popu_307\" data-dsm=\"post\" style=\"box-sizing: inherit; outline: 0px; padding: 0px; margin: 0px; word-break: break-all;\"><div class=\"markdown_views\" style=\"box-sizing: inherit; outline: 0px; padding: 0px; margin: 0px; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; word-break: break-all;\"><p style=\"box-sizing: border-box; outline: 0px; padding: 0px; margin: 0px 0px 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">一、引言 Daemon程序是一直运行的服务端程序，又称为守护进程。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">本文介绍了在Linux下编写Daemon程序的步骤，并给出了例子程序。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">二、Daemon程序简介 Daemon是长时间运行的进程，通常在系统启动后就运行，在系统关闭时才结束。一般说Daemon程序在后台运行，是因为它没有控制终端，无法和前台的用户交互。Daemon程序一般都作为服务程序使用，等待客户端程序与它通信。我们也把运行的Daemon程序称作守护进程。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">三、Daemon程序编写规则&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">编写Daemon程序有一些基本的规则，以避免不必要的麻烦。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">1、首先是程序运行后调用fork，并让父进程退出。子进程获得一个新的进程ID，但继承了父进程的进程组ID。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">2、调用setsid创建一个新的session，使自己成为新session和新进程组的leader，并使进程没有控制终端(tty)。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">3、改变当前工作目录至根目录，以免影响可加载文件系统。或者也可以改变到某些特定的目录。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">4、设置文件创建mask为0，避免创建文件时权限的影响。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">5、关闭不需要的打开文件描述符。因为Daemon程序在后台执行，不需要于终端交互，通常就关闭STDIN、STDOUT和STDERR。其它根据实际情况处理。</p><p style=\"box-sizing: border-box; outline: 0px; padding: 0px; margin: 0px 0px 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">另一个问题是Daemon程序不能和终端交互，也就无法使用printf方法输出信息了。我们可以使用syslog机制来实现信息的输出，方便程序的调试。在使用syslog前需要首先启动syslogd程序，关于syslogd程序的使用请参考它的man page，或相关文档，我们就不在这里讨论了。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">四、一个Daemon程序的例子 编译运行环境为Redhat Linux 8.0。&nbsp;<br style=\"box-sizing: border-box; outline: 0px; word-break: break-all;\">我们新建一个daemontest.c程序，文件内容如下：</p><pre class=\"prettyprint\" name=\"code\" style=\"box-sizing: border-box; outline: 0px; padding: 8px 16px 4px 56px; margin-top: 0px; margin-bottom: 24px; position: relative; overflow-y: hidden; overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 22px; color: rgb(0, 0, 0); word-break: break-all; background-color: rgb(246, 248, 250); border: none;\"><code class=\"hljs cpp has-numbering\" style=\"box-sizing: border-box; outline: 0px; display: block; color: rgb(0, 0, 0); font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; background-color: rgb(246, 248, 250); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-x: auto; word-wrap: normal; word-break: break-all;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">int</span> daemon_init(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">void</span>)\n{\n    pid_t pid;\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> ((pid = fork()) &lt; <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>) \n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">return</span>(-<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">1</span>);\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">else</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (pid != <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>) \n        <span class=\"hljs-built_in\" style=\"box-sizing: border-box; outline: 0px; color: rgb(79, 79, 79); word-break: break-all;\">exit</span>(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* parent exit */</span>\n    <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* child continues */</span>\n    setsid(); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* become session leader */</span>\n    chdir(<span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 153, 0); word-break: break-all;\">\"/\"</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* change working directory */</span>\n    umask(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* clear file mode creation mask */</span>\n    close(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* close stdin */</span>\n    close(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">1</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* close stdout */</span>\n    close(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">2</span>); <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* close stderr */</span>\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">return</span>(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>);\n}\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">void</span> sig_term(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">int</span> signo)\n{\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (signo == SIGTERM)\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">/* catched signal sent by kill(1) command */</span>\n    {\n        syslog(LOG_INFO, <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 153, 0); word-break: break-all;\">\"program terminated.\"</span>);\n        closelog(); <span class=\"hljs-built_in\" style=\"box-sizing: border-box; outline: 0px; color: rgb(79, 79, 79); word-break: break-all;\">exit</span>(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>);\n    }\n}</code><ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; padding: 8px 0px; margin: 0px; list-style: none; word-break: break-all; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;\"><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">1</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">2</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">3</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">4</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">5</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">6</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">7</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">8</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">9</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">10</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">11</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">12</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">13</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">14</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">15</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">16</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">17</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">18</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">19</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">20</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">21</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">22</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">23</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">24</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">25</li></ul></pre><p style=\"box-sizing: border-box; outline: 0px; padding: 0px; margin: 0px 0px 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">在实际项目中我是这么做的：</p><pre class=\"prettyprint\" name=\"code\" style=\"box-sizing: border-box; outline: 0px; padding: 8px 16px 4px 56px; margin-top: 0px; margin-bottom: 24px; position: relative; overflow-y: hidden; overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 22px; color: rgb(0, 0, 0); word-break: break-all; background-color: rgb(246, 248, 250); border: none;\"><code class=\"hljs cpp has-numbering\" style=\"box-sizing: border-box; outline: 0px; display: block; color: rgb(0, 0, 0); font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; background-color: rgb(246, 248, 250); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-x: auto; word-wrap: normal; word-break: break-all;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (isdaemon) {\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">int</span> pid;\n        signal(SIGCHLD, SIG_IGN);\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//1）在父进程中，fork返回新创建子进程的进程ID；</span>\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//2）在子进程中，fork返回0；</span>\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//3）如果出现错误，fork返回一个负值；</span>\n        pid = fork();\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (pid &lt; <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>) {\n            perror(<span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 153, 0); word-break: break-all;\">\"fork\"</span>);\n            <span class=\"hljs-built_in\" style=\"box-sizing: border-box; outline: 0px; color: rgb(79, 79, 79); word-break: break-all;\">exit</span>(-<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">1</span>);\n        }\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//父进程退出，子进程独立运行</span>\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">else</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (pid &gt; <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>) {\n            <span class=\"hljs-built_in\" style=\"box-sizing: border-box; outline: 0px; color: rgb(79, 79, 79); word-break: break-all;\">exit</span>(<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>);\n        }\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//之前parent和child运行在同一个session里,parent是会话（session）的领头进程,</span>\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//parent进程作为会话的领头进程，如果exit结束执行的话，那么子进程会成为孤儿进程，并被init收养。</span>\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//执行setsid()之后,child将重新获得一个新的会话(session)id。</span>\n        <span class=\"hljs-comment\" style=\"box-sizing: border-box; outline: 0px; color: rgb(136, 0, 0); word-break: break-all;\">//这时parent退出之后,将不会影响到child了。</span>\n        setsid();\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">int</span> fd;\n        fd = open(<span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 153, 0); word-break: break-all;\">\"/dev/null\"</span>,O_RDWR,<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">0</span>);\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (fd != -<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">1</span>) {\n            dup2(fd,STDIN_FILENO);\n            dup2(fd,STDOUT_FILENO);\n            dup2(fd,STDERR_FILENO);\n        }\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 0, 136); word-break: break-all;\">if</span> (fd &gt; <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; color: rgb(0, 102, 102); word-break: break-all;\">2</span>)\n            close(fd);\n    }</code><ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; padding: 8px 0px; margin: 0px; list-style: none; word-break: break-all; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;\"><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">1</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">2</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">3</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">4</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">5</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">6</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">7</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">8</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">9</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">10</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">11</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">12</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">13</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">14</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">15</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">16</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">17</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">18</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">19</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">20</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">21</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">22</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">23</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">24</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">25</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">26</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">27</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">28</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">29</li><li style=\"box-sizing: border-box; outline: 0px; padding: 0px 8px; margin: 0px; list-style: none; word-break: break-all; color: rgb(153, 153, 153);\">30</li></ul></pre></div></div></article><div class=\"article-bar-bottom\" style=\"box-sizing: inherit; outline: 0px; padding: 0px 0px 16px; margin: 36px 0px 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(227, 227, 227); color: rgb(51, 51, 51); font-family: &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><div class=\"article-copyright\" style=\"box-sizing: inherit; outline: 0px; padding: 0px; margin: 0px; font-size: 12px; color: rgb(153, 153, 153);\">版权声明：欢迎访问我的个人网站：http://www.hootina.org\thttps://blog.csdn.net/analogous_love/article/details/52806722</div></div>"
    }
  ]
}
{
  "title": "关于某些编译器为什么是从右向左处理参数的理解",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"Blog_tit4 Blog_tit5\" style=\"word-wrap: break-word; border-bottom-width: 0px; padding: 0px 0px 11px; color: rgb(86, 86, 86); font-family: 宋体, Arial; font-size: 12px; line-height: 12px;\"><b class=\"Blog_b1\" style=\"word-wrap: break-word; background-image: url(http://blog.chinaunix.net/image/default/bg.png); width: 38px; height: 18px; display: inline-block; margin-right: 9px; vertical-align: -2px; background-position: -150px -73px; background-repeat: no-repeat no-repeat;\"><br></b></div><div class=\"Blog_con2\" style=\"word-wrap: break-word; color: rgb(102, 102, 102); line-height: 26px; font-family: 宋体, Arial; font-size: 12px;\"><div class=\"Blog_con3\" style=\"word-wrap: break-word; margin-top: 10px; line-height: 22px;\"><p style=\"word-wrap: break-word; margin: 0px; padding: 0px; color: rgb(25, 89, 155);\"></p></div><div class=\"Blog_wz1\" style=\"word-wrap: break-word;\"><h2 style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;对于printf 函数，想必大家都不是很陌生。</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"word-wrap: break-word;\">例如:</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;int a = 3;</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"word-wrap: break-word;\">printf(\"%d %d</span><span style=\"word-wrap: break-word;\">\", a, a&nbsp;</span><span style=\"word-wrap: break-word;\">*= 2</span><span style=\"word-wrap: break-word;\">);</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;输出的结果是6 6</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;我想那些初学C语言的同学可能会有些疑问。为什么结果不是3 6？而是6 6？</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;其实这个问题从表面上理解很简单，printf函数对参数的处理是从右向左进行的，因此输出的第一个值是6，而不是3。</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;可是这种理解过于简单化了。大家有没有想过，为什么其对参数的处理是从右向左进行？为什么不是从左向右？从左向右不是更加符合我们的理解么？</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;而且编译器对于代码的扫描是从左向右进行的，从左向右处理参数不是更加方便么？</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;其实，不仅printf函数对参数的处理是从右向左，很多</span><span style=\"word-wrap: break-word;\">函数对参数都是从右向左处理的，C和C++的设计者当然也想过从左</span><span style=\"word-wrap: break-word;\">向右，只不过为了更加统一，更加方便的对一些变元数目</span><span style=\"word-wrap: break-word;\">不固定的函数处理，不得不从右向左处理</span><span style=\"word-wrap: break-word;\">罢了</span><span style=\"word-wrap: break-word;\">。</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">我以前也不是很理解，前些天</span><span style=\"word-wrap: break-word;\">自学了栈，对这个问题有了些较为</span><span style=\"word-wrap: break-word;\">深层次的理解，特地写出来跟大家分享一下</span><span style=\"word-wrap: break-word;\">，当然，这也是我的第一篇技术博客，如果有什么不对的地方，还希望大家帮忙指出来</span><span style=\"word-wrap: break-word;\">。</span></h2><div style=\"word-wrap: break-word;\"><h1 style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\">下面我用一个C语言的例子来解释这一问题：</span><span style=\"word-wrap: break-word;\"></span></h1><br style=\"word-wrap: break-word;\"><div style=\"word-wrap: break-word;\"><div class=\"codeheads\" style=\"word-wrap: break-word; background-image: none; background-attachment: scroll; background-color: rgb(242, 242, 242); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221); line-height: 25px; font-weight: bold; height: 25px; padding: 0px; width: 946px; background-position: 0px 0px; background-repeat: repeat repeat;\"><p style=\"word-wrap: break-word; margin: 5px 0px; padding: 0px 0px 0px 30px;\">点击(<span style=\"word-wrap: break-word; cursor: pointer; color: red;\">此处</span>)折叠或打开</p></div><div id=\"code14\" class=\"codeText\" style=\"word-wrap: break-word; border: 1px solid rgb(221, 221, 221); width: 946px; overflow: auto; margin: 0px 0px 1.1em; padding: 0px; word-break: break-all; letter-spacing: 0.1px; line-height: normal; font-family: Consolas, monospace;\"><ol start=\"1\" class=\"dp-css\" style=\"word-wrap: break-word; margin: 0px 1px 0px 0px; padding: 0px 0px 0px 40px; list-style: none; color: rgb(92, 92, 92); line-height: 1.3;\"><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><span style=\"word-wrap: break-word; color: rgb(0, 0, 0);\">#<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">include</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">&lt;</span>stdio<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span>h<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">&gt;</span><br style=\"word-wrap: break-word;\"></span></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;Max<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;const count<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;//...代表的是函数参数个数不固定</span></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\"><br style=\"word-wrap: break-word;\"></span></li></ol><ol start=\"1\" class=\"dp-css\" style=\"word-wrap: break-word; margin: 0px 1px 0px 0px; padding: 0px 0px 0px 40px; list-style: none; color: rgb(92, 92, 92); line-height: 1.3;\"><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;Max<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;const count<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">.</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)//求最大值</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">{<br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">*</span>p&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">=</span>&nbsp;&amp;count<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">+</span>1<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;//将存储的参数中第一个要比较的参数地址传给p</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;max&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">=</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">*</span>p<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;int i<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">for</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span>i&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">=</span>&nbsp;0<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span>&nbsp;i&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">&lt;</span>&nbsp;count<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span>&nbsp;i<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">+</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">+</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;p<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">+</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">+</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)//循环比较大小</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">if</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span>max&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">&lt;</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">*</span>p<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">=</span>&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">*</span>p<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;return max<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">}<br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><span style=\"word-wrap: break-word; color: rgb(0, 0, 255);\">int</span>&nbsp;main<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span>void<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">{<br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;printf&nbsp;<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span><span style=\"word-wrap: break-word; color: rgb(255, 0, 255);\">\"%d\\n\"</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;Max<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">(</span>4<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;1<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;3<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;5<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">,</span>&nbsp;7<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">)</span><span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;//输出最大值</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\"><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">&nbsp;&nbsp;&nbsp;&nbsp;return 0<span style=\"word-wrap: break-word; color: rgb(0, 0, 204);\">;</span><br style=\"word-wrap: break-word;\"></li><li style=\"word-wrap: break-word; margin: 0px; padding: 0px 0px 0px 10px; list-style: decimal outside;\">}</li></ol></div></div></div><h2 style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;函数调用输出的结果是7。</span><br style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;下面我们看一下在函数调用的时候，内存里的堆栈</span><span style=\"word-wrap: break-word;\">情况是如何的：</span></h2><div style=\"word-wrap: break-word;\"><br style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"><br style=\"word-wrap: break-word;\"></div><table cellpadding=\"2\" cellspacing=\"0\" border=\"1\" bordercolor=\"#000000\" style=\"word-wrap: break-word; width: 123px; background-color: rgb(204, 204, 204);\"><tbody style=\"word-wrap: break-word;\"><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">p</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp; &nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">max</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">i</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">返回的地址</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">4(count</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">)</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">1</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">3</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">5</strong></span></td></tr><tr style=\"word-wrap: break-word;\"><td style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">&nbsp;</strong></span><span style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\">7</strong></span></td></tr></tbody></table><span style=\"word-wrap: break-word;\"><div style=\"word-wrap: break-word;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word;\"></span></strong></div></span><h2 style=\"word-wrap: break-word; margin: 0px; padding: 0px;\"><p style=\"word-wrap: break-word; margin: 5px 0px; padding: 0px;\"><span style=\"word-wrap: break-word; line-height: 27px; color: rgb(51, 51, 51);\"></span><span style=\"word-wrap: break-word; line-height: 27px; color: rgb(50, 62, 50); font-family: simsun;\"><span style=\"word-wrap: break-word; font-size: 14px; line-height: 21px;\"><span style=\"word-wrap: break-word; color: rgb(102, 102, 102); font-size: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;如上图所示，编译器按照从右向左的方式将Max的所有参数压到栈空间里，然后通过p指针指向count的高一个单位的空间来找到所要判断的参数。在通过循环找到所有参数中的最大值，并返回结果。计算机为什么能找到count所在的空间？那是因为计算机记录了函数的返回地址。通过返回地址，计算机可以在不知道参数个数的情况下找到其头部，并且进行运算。<br style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span style=\"word-wrap: break-word; line-height: 21px;\">假设编译器按照从左向右的顺序将Max的参数压入栈中，那么计算机在不知道参数个数的情况下找到count，那是不可能的。这就像是又让马儿跑，又想马儿不吃草一样。想知道参数个数需要找到count，而想要找到count又必须知道参数个数。这是矛盾的。因此，函数从右向左对函数进行处理的。</span><span style=\"word-wrap: break-word;\"></span></p><p style=\"word-wrap: break-word; margin: 5px 0px; padding: 0px;\"><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;不过为了使访问变长变元的函数参数更容易，C++中提供了解决变长参数问题的宏。例如</span><span style=\"word-wrap: break-word;\">va_list, va_start, va_arg, va_end</span><span style=\"word-wrap: break-word;\">等。<br style=\"word-wrap: break-word;\"></span><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;对于宏的使用，这里不再讨论。<br style=\"word-wrap: break-word;\"></span><span style=\"word-wrap: break-word;\"><br style=\"word-wrap: break-word;\"></span><span style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;希望大家能在这篇文章里学到知识！也希望大家能帮我指出一些错误，以及改正的方法。谢谢大家！<br style=\"word-wrap: break-word;\"></span></p></h2><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div><div style=\"word-wrap: break-word;\"></div></div><div class=\"Blog_con2_1 Blog_con3_2\" style=\"word-wrap: break-word; margin-top: 50px; position: relative; line-height: 22px;\"><div style=\"word-wrap: break-word;\"><div class=\"bshare-custom icon-medium-plus\" style=\"word-wrap: break-word; font-size: 16px; line-height: 26px !important;\"><a class=\"bshare-qzone\" title=\"分享到QQ空间\" style=\"word-wrap: break-word; color: rgb(51, 51, 51); padding-left: 35px; height: 32px; display: inline-block; zoom: 1; vertical-align: middle; cursor: pointer; margin-right: 3px; opacity: 1; background-image: url(http://static.bshare.cn/frame/images/logos/mp2/sprite/top_logos_sprite.gif); background-position: 0px -442px; background-repeat: no-repeat no-repeat;\"></a></div></div></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
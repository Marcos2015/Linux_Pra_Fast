{
  "title": "让你提升命令行效率的 Bash 快捷键 [完整版]",
  "cells": [
    {
      "type": "text",
      "data": "<span style=\"font-family: Georgia, Cambria, serif;\">生活在 Bash shell</span><span style=\"font-family: Georgia, Cambria, serif;\">中，熟记以下快捷键，将极大的提高你的命令行操作效率。</span><div class=\"post-description\" style=\"font-family: Georgia, Cambria, serif; color: rgb(68, 68, 68); line-height: 1.8em;\"><h3 style=\"font-weight: 100; line-height: 28.799999237060547px;\">编辑命令</h3><ul style=\"line-height: 28.799999237060547px;\"><li>Ctrl + a ：移到命令行首&nbsp;</li><li>Ctrl + e ：移到命令行尾&nbsp;</li><li>Ctrl + f ：按字符前移（右向）&nbsp;</li><li>Ctrl + b ：按字符后移（左向）&nbsp;</li><li>Alt + f ：按单词前移（右向）&nbsp;</li><li>Alt + b ：按单词后移（左向）&nbsp;</li><li>Ctrl + xx：在命令行首和光标之间移动&nbsp;</li><li>Ctrl + u ：从光标处删除至命令行首&nbsp;</li><li>Ctrl + k ：从光标处删除至命令行尾&nbsp;</li><li>Ctrl + w ：从光标处删除至字首&nbsp;</li><li>Alt + d ：从光标处删除至字尾&nbsp;</li><li>Ctrl + d ：删除光标处的字符&nbsp;</li><li>Ctrl + h ：删除光标前的字符&nbsp;</li><li>Ctrl + y ：粘贴至光标后&nbsp;</li><li>Alt + c ：从光标处更改为首字母大写的单词&nbsp;</li><li>Alt + u ：从光标处更改为全部大写的单词&nbsp;</li><li>Alt + l ：从光标处更改为全部小写的单词&nbsp;</li><li>Ctrl + t ：交换光标处和之前的字符&nbsp;</li><li>Alt + t ：交换光标处和之前的单词&nbsp;</li><li>Alt + Backspace：与 Ctrl + w ~~相同~~类似，分隔符有些差别 [感谢 rezilla 指正]</li></ul><h3 style=\"font-weight: 100; line-height: 28.799999237060547px;\">重新执行命令</h3><ul style=\"line-height: 28.799999237060547px;\"><li>Ctrl + r：逆向搜索命令历史&nbsp;</li><li>Ctrl + g：从历史搜索模式退出&nbsp;</li><li>Ctrl + p：历史中的上一条命令&nbsp;</li><li>Ctrl + n：历史中的下一条命令&nbsp;</li><li>Alt + .：使用上一条命令的最后一个参数</li></ul><h3 style=\"font-weight: 100; line-height: 28.799999237060547px;\">控制命令</h3><ul style=\"line-height: 28.799999237060547px;\"><li>Ctrl + l：清屏&nbsp;</li><li>Ctrl + o：执行当前命令，并选择上一条命令&nbsp;</li><li>Ctrl + s：阻止屏幕输出&nbsp;</li><li>Ctrl + q：允许屏幕输出&nbsp;</li><li>Ctrl + c：终止命令&nbsp;</li><li>Ctrl + z：挂起命令</li></ul><h3 style=\"font-weight: 100; line-height: 28.799999237060547px;\">Bang (!) 命令</h3><ul style=\"line-height: 28.799999237060547px;\"><li>!!：执行上一条命令&nbsp;</li><li>!blah：执行最近的以 blah 开头的命令，如 !ls&nbsp;</li><li>!blah:p：仅打印输出，而不执行&nbsp;</li><li>!$：上一条命令的最后一个参数，与 Alt + . 相同&nbsp;</li><li>!$:p：打印输出 !$ 的内容&nbsp;</li><li>!*：上一条命令的所有参数&nbsp;</li><li>!<em>:p：打印输出 !</em>&nbsp;的内容&nbsp;</li><li>^blah：删除上一条命令中的 blah&nbsp;</li><li>^blah^foo：将上一条命令中的 blah 替换为 foo&nbsp;</li><li>^blah^foo^：将上一条命令中所有的 blah 都替换为 foo</li></ul><p style=\"line-height: 28.799999237060547px;\">_友情提示_：</p><ol style=\"line-height: 28.799999237060547px;\"><li style=\"color: rgb(68, 68, 68); font-size: 14px;\">以上介绍的大多数 Bash 快捷键仅当在 emacs 编辑模式时有效，若你将 Bash<br>配置为 vi 编辑模式，那将遵循 vi 的按键绑定。Bash 默认为 emacs<br>编辑模式。如果你的 Bash 不在 emacs 编辑模式，可通过&nbsp;<code style=\"font-family: 'DejaVu Sans Mono', Consolas, Courier, monospace; padding-right: 0.4em; padding-left: 0.4em; color: rgb(51, 51, 51); background-color: rgb(250, 250, 250); white-space: nowrap;\">set -o emacs</code>&nbsp;设置。&nbsp;</li><li style=\"color: rgb(68, 68, 68); font-size: 14px;\">^S、^Q、^C、^Z 是由终端设备处理的，可用&nbsp;<code style=\"font-family: 'DejaVu Sans Mono', Consolas, Courier, monospace; padding-right: 0.4em; padding-left: 0.4em; color: rgb(51, 51, 51); background-color: rgb(250, 250, 250); white-space: nowrap;\">stty</code>&nbsp;命令设置。</li><li></li></ol></div>"
    }
  ]
}
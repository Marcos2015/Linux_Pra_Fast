{
  "title": "linux shell自定义函数(定义、返回值、变量作用域)介绍",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"title\" style=\"caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); font-size: 12px; margin: 0px; padding: 0px; font-family: tahoma, arial, 宋体;\"><div class=\"\" style=\"margin: 0px; padding: 5px; color: rgb(153, 153, 153); text-align: center;\">投稿：mdxy-dxy 字体：[<a class=\"\" style=\"color: rgb(51, 51, 51);\">增加</a>&nbsp;<a class=\"\" style=\"color: rgb(51, 51, 51);\">减小</a>] 类型：转载 时间：2013-02-08<a href=\"http://www.jb51.net/article/33899.htm#comments\" class=\"\" style=\"color: rgb(51, 51, 51); text-decoration: none;\">&nbsp;我要评论</a></div></div><div class=\"mt10 art_desc\" style=\"margin: 10px 5px; padding: 10px; background-color: rgb(246, 251, 255); color: rgb(51, 51, 51); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(59, 176, 219); font-size: 14px; font-family: tahoma, arial, 宋体;\"><div id=\"art_demo\" class=\"\" style=\"margin: 0px; padding: 0px;\">linux shell 可以用户定义函数，然后在shell脚本中可以随便调用。下面说说它的定义方法，以及调用需要注意那些事项</div></div><div class=\"lbd clearfix\" style=\"caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); font-size: 12px; margin: 5px auto; padding: 0px; width: 680px; text-align: center; font-family: tahoma, arial, 宋体;\"><span id=\"art_up\" class=\"jbTestPos\"></span></div><div id=\"content\" class=\"\" style=\"caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); margin: 0px 10px; padding: 20px 5px 0px; width: 660px; line-height: 25.200000762939453px; clear: both; font-size: 14px; word-wrap: break-word; word-break: break-all; overflow: hidden; font-family: tahoma, arial, 宋体;\"><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">linux shell 可以用户定义函数，然后在shell脚本中可以随便调用。下面说说它的定义方法，以及调用需要注意那些事项。</div><h3 class=\"\" style=\"margin: 0px; padding: 0px; font-size: 14px; color: rgb(0, 102, 153);\">一、定义shell函数(define function)</h3><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">语法：</div><blockquote class=\"\" style=\"margin-right: auto; margin-bottom: 10px; padding: 4px 4px 4px 10px; border-color: rgb(191, 223, 255); border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; background-color: rgb(245, 251, 255); width: 627px;\"><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">[ function ] funname [()]</div><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">{</div><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">action;</div><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">[return int;]</div><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">}</div></blockquote><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">说明：</div><ul class=\"\" style=\"margin: 0px 0px 10px 25px; padding: 0.3em 0px; list-style: decimal; line-height: 25px; word-break: break-word;\"><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">1、可以带function fun() 定义，也可以直接fun() 定义,不带任何参数。</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">2、参数返回，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255</li></ul><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">实例（testfun1.sh）：</div><pre class=\"shell; true brush: gutter:\" style=\"margin: 3px auto 0px; padding: 0px 0px 0px 5px; background-color: rgb(255, 255, 255); width: 640px; line-height: 20px; clear: both; border-left-color: rgb(108, 226, 108); border-left-width: 3px; border-left-style: solid;\">#!/bin/sh\n\n fSum 3 2;\n function fSum()\n {\n   echo $1,$2;\n   return $(($1+$2));\n }\n fSum 5 7;\n total=$(fSum 3 2);\n echo $total,$?;\n\nsh testfun1.sh\ntestfun1.sh: line 3: fSum: command not found\n5,7\n3,2\n1\n5</pre><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">从上面这个例子我们可以得到几点结论：</div><ul class=\"\" style=\"margin: 0px 0px 10px 25px; padding: 0.3em 0px; list-style: decimal; line-height: 25px; word-break: break-word;\"><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">1、必须在调用函数地方之前，声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译。一次必须在使用函数前先声明函数。</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">2、total=$(fSum 3 2); 通过这种调用方法，我们清楚知道，在shell 中 单括号里面，可以是：命令语句。 因此，我们可以将shell中函数，看作是定义一个新的命令，它是命令，因此 各个输入参数直接用 空格分隔。 一次，命令里面获得参数方法可以通过：$0…$n得到。 $0代表函数本身。</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">3、函数返回值，只能通过$? 系统变量获得，直接通过=,获得是空值。其实，我们按照上面一条理解，知道函数是一个命令，在shell获得命令返回值，都需要通过$?获得。</li></ul><h3 class=\"\" style=\"margin: 0px; padding: 0px; font-size: 14px; color: rgb(0, 102, 153);\">二、函数作用域，变量作用范围</h3><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">先我们看一个实例(testfun2.sh )：</div><pre class=\"shell; true brush: gutter:\" style=\"margin: 3px auto 0px; padding: 0px 0px 0px 5px; background-color: rgb(255, 255, 255); width: 640px; line-height: 20px; clear: both; border-left-color: rgb(108, 226, 108); border-left-width: 3px; border-left-style: solid;\">#!/bin/sh\n\necho $(uname);\ndeclare num=1000;\n\nuname()\n{\n  echo \"test!\";\n  ((num++));\n  return 100;\n}\ntestvar()\n{\n  local num=10;\n  ((num++));\n  echo $num;\n\n}\n\nuname;\necho $?\necho $num;\ntestvar;\necho $num;\n\nsh testfun2.sh\nLinux\ntest!\n100\n1001\n11\n1001</pre><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">我们一起来分析下上面这个实例，可以得到如下结论：</div><ul class=\"\" style=\"margin: 0px 0px 10px 25px; padding: 0.3em 0px; list-style: decimal; line-height: 25px; word-break: break-word;\"><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">1、定义函数可以与系统命令相同，说明shell搜索命令时候，首先会在当前的shell文件定义好的地方查找，找到直接执行。</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">2、需要获得函数值：通过$?获得</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">3、如果需要传出其它类型函数值，可以在函数调用之前，定义变量（这个就是全局变量）。在函数内部就可以直接修改，然后在执行函数就可以读出修改过的值。</li><li class=\"\" style=\"margin: 0px; padding: 0px; list-style-type: decimal;\">4、如果需要定义自己变量，可以在函数中定义：local 变量=值 ，这时变量就是内部变量，它的修改，不会影响函数外部相同变量的值 。</li></ul><div class=\"\" style=\"margin: 0px; padding: 5px 0px;\">这些，是我在工作中，对linux ,shell 函数使用一些经验总结，有没有提到地方，欢迎交流！</div></div>"
    }
  ]
}
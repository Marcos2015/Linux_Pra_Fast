{
  "title": "C++ 中的多线程",
  "cells": [
    {
      "type": "text",
      "data": "<br><div class=\"rich_media_content \" id=\"js_content\" style=\"margin: 0px; padding: 0px; overflow: hidden; color: rgb(62, 62, 62); position: relative; min-height: 350px;\"><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">《以操作系统的角度述说线程与进程》一文详细讲述了线程、进程的关系及在操作系统中的表现，《线程优先级与线程安全》一文讲了线程安全(各种同步锁)和优先级，这是多线程学习必须了解的基础。本文将接着讲一下C++中多线程程序的开发.这里主要讲Windows平台线程的用法，创建线程要调用windows API的CreateThread方法。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; font-size: 18px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">创建线程</span></strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">在Windows平台，Windows API提供了对多线程的支持。前面进程和线程的概念中我们提到，一个程序至少有一个线程，这个线程称为主线程(main thread)，如果我们不显示地创建线程，那我们产的程序就是只有主线程的间线程程序。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">下面，我们看看Windows中线程相关的操作和方法：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">CreateThread与CloseHandle</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">CreateThread用于创建一个线程，其函数原型如下：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">HANDLE WINAPI CreateThread(</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPSECURITY_ATTRIBUTES   lpThreadAttributes,</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//线程安全相关的属性，常置为NULL</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  SIZE_T                  dwStackSize,        </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//新线程的初始化栈在大小，可设置为0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPTHREAD_START_ROUTINE  lpStartAddress,    </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//被线程执行的回调函数，也称为线程函数</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPVOID                  lpParameter,        </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//传入线程函数的参数，不需传递参数时为NULL</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  DWORD                   dwCreationFlags,    </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//控制线程创建的标志</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPDWORD                 lpThreadId          </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//传出参数，用于获得线程ID，如果为NULL则不返回线程ID</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">);</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">**说明：**lpThreadAttributes：指向SECURITY_ATTRIBUTES结构的指针，决定返回的句柄是否可被子进程继承，如果为NULL则表示返回的句柄不能被子进程继承。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">dwStackSize ：线程栈的初始化大小，字节单位。系统分配这个值对</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">lpStartAddress：指向一个函数指针，该函数将被线程调用执行。因此该函数也被称为线程函数(ThreadProc)，是线程执行的起始地址，线程函数是一个回调函数，由操作系统在线程中调用。线程函数的原型如下：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI ThreadProc(LPVOID lpParameter);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//lpParameter是传入的参数，是一个空指针</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">lpParameter：传入线程函数(ThreadProc)的参数，不需传递参数时为NULL</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">dwCreationFlags：控制线程创建的标志，有三个类型，0：线程创建后立即执行线程；CREATE_SUSPENDED：线程创建后进入就绪状态，直到线程被唤醒时才调用；STACK_SIZE_PARAM_IS_A_RESERVATION：dwStackSize 参数指定线程初始化栈的大小，如果STACK_SIZE_PARAM_IS_A_RESERVATION标志未指定，dwStackSize将会设为系统预留的值。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">返回值：如果线程创建成功，则返回这个新线程的句柄，否则返回NULL。如果线程创建失败，可通过GetLastError函数获得错误信息。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">BOOL WINAPI CloseHandle(HANDLE hObject);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//关闭一个被打开的对象句柄</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">可用这个函数关闭创建的线程句柄，如果函数执行成功则返回true(非0),如果失败则返回false(0)，如果执行失败可调用GetLastError.函数获得错误信息。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">【Demo1】：创建一个最简单的线程</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"stdafx.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;windows.h&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;iostream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">using namespace std;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//线程函数</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI ThreadProc(LPVOID lpParameter)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; 5; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; \"子线程:i = \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0L;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">int main()</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建一个线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE thread = CreateThread(NULL, 0, ThreadProc, NULL, 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//关闭线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  CloseHandle(thread);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//主线程的执行路径</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; 5; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; \"主线程:i = \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">结果如下：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程:i = 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程:i = 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程:i = 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程:i = 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程:i = 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程:i = 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程:i = 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程:i = 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程:i = 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程:i = 4</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">【Demo2】：在线程函数中传入参数</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"stdafx.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;windows.h&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;iostream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">using namespace std;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#define NAME_LINE   40</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//定义线程函数传入参数的结构体</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">typedef struct __THREAD_DATA</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  int nMaxNum;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  char strThreadName[NAME_LINE];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  __THREAD_DATA() : nMaxNum(0)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      memset(strThreadName, 0, NAME_LINE * sizeof(char));</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}THREAD_DATA;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//线程函数<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI ThreadProc(LPVOID lpParameter)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THREAD_DATA* pThreadData = (THREAD_DATA*)lpParameter;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; pThreadData-&gt;nMaxNum; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; pThreadData-&gt;strThreadName &lt;&lt; \" --- \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0L;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">int main()</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//初始化线程数据</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THREAD_DATA threadData1, threadData2;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  threadData1.nMaxNum = 5;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  strcpy(threadData1.strThreadName, \"线程1\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  threadData2.nMaxNum = 10;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  strcpy(threadData2.strThreadName, \"线程2\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建第一个子线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hThread1 = CreateThread(NULL, 0, ThreadProc, &amp;threadData1, 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建第二个子线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hThread2 = CreateThread(NULL, 0, ThreadProc, &amp;threadData2, 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//关闭线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  CloseHandle(hThread1);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  CloseHandle(hThread2);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//主线程的执行路径</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; 5; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; \"主线程 === \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  system(\"pause\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">结果：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 线程1 — 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 5</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">请按任意键继续… 线程2 — 6</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 7</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 8</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 9</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">CreateMutex、WaitForSingleObject、ReleaseMutex</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">从【Demo2】中可以看出，虽然创建的子线程都正常执行起来了，但输出的结果并不是我们预期的效果。我们预期的效果是每输出一条语句后自动换行，但结果却并非都是这样。这是因为在线程执行时没有做同步处理，比如第一行的输出，主线程输出“主线程 ===”后时间片已用完，这时轮到子线程1输出，在子线程输出“线程1 —”后时间片也用完了，这时又轮到主线程执行输出“0”，之后又轮到子线程1输出“0”。于是就出现了“主线程 === 线程1 — 0 0”的结果。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><ul class=\" list-paddingleft-2\" style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px 0px 0px 30px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程：cout &lt;&lt; “主线程 === ” &lt;&lt; i &lt;&lt; endl;</p></li><li style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">子线程：cout &lt;&lt; pThreadData-&gt;strThreadName &lt;&lt; ” — ” &lt;&lt; i &lt;&lt; endl;</p></li></ul><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">为避免出现这种情况，我们对线程做一些简单的同步处理，这里我们用互斥量(Mutex)，关于互斥量(Mutex)的概念，请看《编程思想之多线程与多进程(2)——线程优先级与线程安全》一文；更多C++线程同步的处理，请看下一节。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">在使用互斥量进行线程同步时会用到以下几个函数：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">HANDLE WINAPI CreateMutex(</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPSECURITY_ATTRIBUTES lpMutexAttributes,        </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//线程安全相关的属性，常置为NULL</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  BOOL                  bInitialOwner,            </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建Mutex时的当前线程是否拥有Mutex的所有权</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  LPCTSTR               lpName                    </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//Mutex的名称</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">);</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">**说明：**lpMutexAttributes也是表示安全的结构，与CreateThread中的lpThreadAttributes功能相同，表示决定返回的句柄是否可被子进程继承，如果为NULL则表示返回的句柄不能被子进程继承。bInitialOwner表示创建Mutex时的当前线程是否拥有Mutex的所有权，若为TRUE则指定为当前的创建线程为Mutex对象的所有者，其它线程访问需要先ReleaseMutex。lpName为Mutex的名称。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI WaitForSingleObject(</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hHandle,                            </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//要获取的锁的句柄</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  DWORD  dwMilliseconds                          </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//超时间隔</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">);</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">**说明：**WaitForSingleObject的作用是等待一个指定的对象(如Mutex对象)，直到该对象处于非占用的状态(如Mutex对象被释放)或超出设定的时间间隔。除此之外，还有一个与它类似的函数WaitForMultipleObjects，它的作用是等待一个或所有指定的对象，直到所有的对象处于非占用的状态，或超出设定的时间间隔。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">hHandle：要等待的指定对象的句柄。dwMilliseconds：超时的间隔，以毫秒为单位；如果dwMilliseconds为非0，则等待直到dwMilliseconds时间间隔用完或对象变为非占用的状态，如果dwMilliseconds 为INFINITE则表示无限等待，直到等待的对象处于非占用的状态。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">BOOL WINAPI ReleaseMutex(HANDLE hMutex);</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">说明：释放所拥有的互斥量锁对象，hMutex为释放的互斥量的句柄。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">【Demo3】：线程同步</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></strong></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"stdafx.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;windows.h&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;iostream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#define NAME_LINE   40</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//定义线程函数传入参数的结构体</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">typedef struct __THREAD_DATA</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  int nMaxNum;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  char strThreadName[NAME_LINE];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  __THREAD_DATA() : nMaxNum(0)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      memset(strThreadName, 0, NAME_LINE * sizeof(char));</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}THREAD_DATA;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">HANDLE g_hMutex = NULL;    </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//互斥量</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//线程函数</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI ThreadProc(LPVOID lpParameter)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THREAD_DATA* pThreadData = (THREAD_DATA*)lpParameter;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; pThreadData-&gt;nMaxNum; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//请求获得一个互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      WaitForSingleObject(g_hMutex, INFINITE);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; pThreadData-&gt;strThreadName &lt;&lt; \" --- \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//释放互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      ReleaseMutex(g_hMutex);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0L;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">int main()</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建一个互斥量</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  g_hMutex = CreateMutex(NULL, FALSE, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//初始化线程数据</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THREAD_DATA threadData1, threadData2;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  threadData1.nMaxNum = 5;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  strcpy(threadData1.strThreadName, \"线程1\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  threadData2.nMaxNum = 10;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  strcpy(threadData2.strThreadName, \"线程2\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建第一个子线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hThread1 = CreateThread(NULL, 0, ThreadProc, &amp;threadData1, 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建第二个子线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hThread2 = CreateThread(NULL, 0, ThreadProc, &amp;threadData2, 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//关闭线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  CloseHandle(hThread1);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  CloseHandle(hThread2);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//主线程的执行路径</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for (int i = 0; i &lt; 5; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//请求获得一个互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      WaitForSingleObject(g_hMutex, INFINITE);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; \"主线程 === \" &lt;&lt; i &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(100);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//释放互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      ReleaseMutex(g_hMutex);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  system(\"pause\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">结果：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 0</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 1</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 2</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 3</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">主线程 === 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程1 — 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">请按任意键继续… 线程2 — 4</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 5</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 6</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 7</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 8</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">线程2 — 9</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">为进一步理解线程同步的重要性和互斥量的使用方法，我们再来看一个例子。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">买火车票是大家春节回家最为关注的事情，我们就简单模拟一下火车票的售票系统(为使程序简单，我们就抽出最简单的模型进行模拟)：有500张从北京到赣州的火车票，在8个窗口同时出售，保证系统的稳定性和数据的原子性。</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">【Demo4】：模拟火车售票系统</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"stdafx.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;windows.h&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;iostream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;strstream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;string&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">using namespace std;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#define NAME_LINE   40</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//定义线程函数传入参数的结构体</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">typedef struct __TICKET</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  int nCount;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  char strTicketName[NAME_LINE];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  __TICKET() : nCount(0)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      memset(strTicketName, 0, NAME_LINE * sizeof(char));</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}TICKET;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">typedef struct __THD_DATA</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  TICKET* pTicket;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  char strThreadName[NAME_LINE];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  __THD_DATA() : pTicket(NULL)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      memset(strThreadName, 0, NAME_LINE * sizeof(char));</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}THD_DATA;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//基本类型数据转换成字符串</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">template&lt;class T&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">string convertToString(const T val)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  string s;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  std::strstream ss;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  ss &lt;&lt; val;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  ss &gt;&gt; s;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return s;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//售票程序</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI SaleTicket(LPVOID lpParameter);</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><strong style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">SaleTickets.cpp ：</strong></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"stdafx.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;windows.h&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include &lt;iostream&gt;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">#include \"SaleTickets.h\"</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">using namespace std;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">extern HANDLE g_hMutex;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//售票程序</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">DWORD WINAPI SaleTicket(LPVOID lpParameter)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THD_DATA* pThreadData = (THD_DATA*)lpParameter;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  TICKET* pSaleData = pThreadData-&gt;pTicket;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  while(pSaleData-&gt;nCount &gt; 0)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//请求获得一个互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      WaitForSingleObject(g_hMutex, INFINITE);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      if (pSaleData-&gt;nCount &gt; 0)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">          cout &lt;&lt; pThreadData-&gt;strThreadName &lt;&lt; \"出售第\" &lt;&lt; pSaleData-&gt;nCount -- &lt;&lt; \"的票,\";</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">          if (pSaleData-&gt;nCount &gt;= 0) {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">              cout &lt;&lt; \"出票成功!剩余\" &lt;&lt; pSaleData-&gt;nCount &lt;&lt; \"张票.\" &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">          } else {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">              cout &lt;&lt; \"出票失败！该票已售完。\" &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">          }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      Sleep(10);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//释放互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      ReleaseMutex(g_hMutex);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  return 0L;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">测试程序：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//售票系统</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">void Test2()</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">{</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建一个互斥量</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  g_hMutex = CreateMutex(NULL, FALSE, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"> </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//初始化火车票</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  TICKET ticket;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  ticket.nCount = 100;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  strcpy(ticket.strTicketName, \"北京--&gt;赣州\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  const int THREAD_NUMM = 8;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  THD_DATA threadSale[THREAD_NUMM];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  HANDLE hThread[THREAD_NUMM];</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  for(int i = 0; i &lt; THREAD_NUMM; ++ i)</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  {</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      threadSale[i].pTicket = &amp;ticket;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      string strThreadName = convertToString(i);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      strThreadName = \"窗口\" + strThreadName;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      strcpy(threadSale[i].strThreadName, strThreadName.c_str());</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//创建线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      hThread[i] = CreateThread(NULL, NULL, SaleTicket, &amp;threadSale[i], 0, NULL);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//请求获得一个互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      WaitForSingleObject(g_hMutex, INFINITE);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      cout &lt;&lt; threadSale[i].strThreadName &lt;&lt; \"开始出售 \" &lt;&lt; threadSale[i].pTicket-&gt;strTicketName &lt;&lt; \" 的票...\" &lt;&lt; endl;</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//释放互斥量锁</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      ReleaseMutex(g_hMutex);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">     </p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">//关闭线程</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">      CloseHandle(hThread[i]);</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  }</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">  system(\"pause\");</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">结果：</p><p style=\"color: rgb(62, 62, 62); margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"></p><blockquote style=\"color: rgb(62, 62, 62); padding-right: 0px; padding-left: 10px; border-left-width: 3px; border-left-color: rgb(219, 219, 219); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: 16px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0出售第100的票,出票成功!剩余99张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口1开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口1出售第99的票,出票成功!剩余98张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0出售第98的票,出票成功!剩余97张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口2开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口2出售第97的票,出票成功!剩余96张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口1出售第96的票,出票成功!剩余95张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0出售第95的票,出票成功!剩余94张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口3开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口3出售第94的票,出票成功!剩余93张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口2出售第93的票,出票成功!剩余92张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口1出售第92的票,出票成功!剩余91张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0出售第91的票,出票成功!剩余90张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口4开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口4出售第90的票,出票成功!剩余89张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口3出售第89的票,出票成功!剩余88张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口2出售第88的票,出票成功!剩余87张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口1出售第87的票,出票成功!剩余86张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口0出售第86的票,出票成功!剩余85张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口5开始出售 北京–&gt;赣州 的票…</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口5出售第85的票,出票成功!剩余84张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口4出售第84的票,出票成功!剩余83张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口3出售第83的票,出票成功!剩余82张票.</p><p style=\"margin: 0px; padding: 0px; clear: both; min-height: 1em; white-space: pre-wrap; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">窗口2出售第82的票,出票成功!剩余81张票.</p><div><br></div></blockquote></div>"
    }
  ]
}
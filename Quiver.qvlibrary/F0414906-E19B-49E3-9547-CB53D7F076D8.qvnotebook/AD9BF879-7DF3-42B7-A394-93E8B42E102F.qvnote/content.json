{
  "title": "select，poll，epoll比较",
  "cells": [
    {
      "type": "text",
      "data": "<span style=\"font-size: 18px; font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-weight: bold;\">select，poll，epoll简介</span><br><div id=\"article_content\" class=\"article_content\" style=\"font-family: Arial; font-size: 14px; margin: 20px 0px 0px; line-height: 26px; color: rgb(54, 46, 43);\"><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" width=\"95%\" style=\"line-height: 28px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"><tbody><tr><td>&nbsp;<p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">select</p></td><td>&nbsp;select本质上是通过设置或者检查存放fd标志位的数据结构来进行下一步处理。这样所带来的缺点是：<p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">1 单个进程可监视的fd数量被限制</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">2 需要维护一个用来存放大量fd的数据结构，这样会使得用户空间和内核空间在传递该结构时复制开销大</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">3 对socket进行扫描时是线性扫描</p></td></tr><tr><td>&nbsp;<p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">poll</p></td><td><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">poll本质上和select没有区别，它将用户传入的数组拷贝到内核空间，然后查询每个fd对应的设备状态，如果设备就绪则在设备等待队列中加入一项并继续遍历，如果遍历完所有fd后没有发现就绪设备，则挂起当前进程，直到设备就绪或者主动超时，被唤醒后它又要再次遍历fd。这个过程经历了多次无谓的遍历。</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">它没有最大连接数的限制，原因是它是基于链表来存储的，但是同样有一个缺点：大量的fd的数组被整体复制于用户态和内核地址空间之间，而不管这样的复制是不是有意义。</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">poll还有一个特点是“水平触发”，如果报告了fd后，没有被处理，那么下次poll时会再次报告该fd。</p></td></tr><tr><td>&nbsp;epoll</td><td>&nbsp;epoll支持水平触发和边缘触发，最大的特点在于边缘触发，它只告诉进程哪些fd刚刚变为就需态，并且只会通知一次。<p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">在前面说到的复制问题上，epoll使用mmap减少复制开销。</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">还有一个特点是，epoll使用“事件”的就绪通知方式，通过epoll_ctl注册fd，一旦该fd就绪，内核就会采用类似callback的回调机制来激活该fd，epoll_wait便可以收到通知</p></td></tr></tbody></table><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"><span style=\"line-height: 31.5px; font-size: 18px;\"></span>&nbsp;</p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"><span style=\"line-height: 31.5px; font-size: 18px;\">1 支持一个进程所能打开的最大连接数</span><span style=\"line-height: 31.5px; font-size: 18px;\"></span></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"></p><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" width=\"95%\" style=\"line-height: 28px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"><tbody><tr><td>&nbsp;select</td><td>&nbsp;单个进程所能打开的最大连接数有FD_SETSIZE宏定义，其大小是32个整数的大小（在32位的机器上，大小就是32*32，同理64位机器上 FD_SETSIZE为32*64），当然我们可以对它进行修改，然后重新编译内核，但是性能可能会受到影响，这需要进一步的测试。</td></tr><tr><td>&nbsp;poll</td><td>&nbsp;poll本质上和select没有区别，但是它没有最大连接数的限制，原因是它是基于链表来存储的</td></tr><tr><td>&nbsp;<p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">epoll</p></td><td>&nbsp;虽然连接数有上限，但是很大，1G内存的机器上可以打开10万左右的连接，2G内存的机器可以打开20万左右的连接。</td></tr></tbody></table><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\">&nbsp;</p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"><span style=\"line-height: 31.5px; font-size: 18px;\">2 FD剧增后带来的IO效率问题</span></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"></p><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" width=\"810\" style=\"line-height: 28px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; width: 810px; height: 168px; background-color: rgb(204, 206, 208);\"><tbody><tr><td><p style=\"margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px;\">&nbsp;select</p></td><td>&nbsp;因为每次调用时都会对连接进行线性遍历，所以随着FD的增加会造成遍历速度慢的“线性下降性能问题”。</td></tr><tr><td>&nbsp;poll</td><td>&nbsp;同上</td></tr><tr><td>&nbsp;epoll</td><td>&nbsp;因为epoll内核中实现是根据每个fd上的callback函数来实现的，只有活跃的socket才会主动调用callback，所以在活跃socket较少的情况下，使用epoll没有前面两者的线性下降的性能问题，但是所有socket都很活跃的情况下，可能会有性能问题。</td></tr></tbody></table><span style=\"color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; line-height: 28px; background-color: rgb(204, 206, 208);\">&nbsp;&nbsp;&nbsp;</span><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"><span style=\"line-height: 31.5px; font-size: 18px;\">3 消息传递方式</span></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"></p><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" width=\"809\" style=\"line-height: 28px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; width: 809px; height: 93px; background-color: rgb(204, 206, 208);\"><tbody><tr><td>&nbsp;select</td><td>&nbsp;内核需要将消息传递到用户空间，都需要内核拷贝动作</td></tr><tr><td>&nbsp;poll</td><td>&nbsp;同上</td></tr><tr><td>&nbsp;epoll</td><td>&nbsp;epoll通过内核和用户空间共享一块内存来实现的</td></tr></tbody></table><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; background-color: rgb(204, 206, 208);\"></p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\">&nbsp;&nbsp;&nbsp;</p><p style=\"line-height: 28px; margin-top: 0px; margin-bottom: 10px; padding-top: 0px; padding-bottom: 0px; color: rgb(51, 51, 51); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 16px; font-weight: bold; background-color: rgb(204, 206, 208);\"><span style=\"font-size: 14px;\">综上，在选择select，poll，epoll时要根据具体的使用场合以及这三种方式的自身特点。表面上看epoll的性能最好，但是在连接数少并且连接都十分活跃的情况下，select和poll的性能可能比epoll好，毕竟epoll的通知机制需要很多函数回调。</span></p></div>"
    }
  ]
}
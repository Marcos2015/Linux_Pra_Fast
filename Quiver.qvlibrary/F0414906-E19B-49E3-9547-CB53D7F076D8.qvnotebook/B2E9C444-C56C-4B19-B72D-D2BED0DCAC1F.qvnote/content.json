{
  "title": "sleep和wait的区别",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\">1、这两个方法来自<strong style=\"margin: 0px; padding: 0px;\">不同的类</strong>分别是，sleep来自Thread类，和wait来自Object类。</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\">sleep是Thread的静态类方法，谁调用的谁去睡觉，即使在a线程里调用了b的sleep方法，实际上还是a去睡觉，要让b线程睡觉要在b的代码中调用sleep。</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\"><br style=\"margin: 0px; padding: 0px;\">2、<span style=\"margin: 0px; padding: 0px;\"><strong style=\"margin: 0px; padding: 0px;\">最主要</strong>是</span>sleep方法没有<strong style=\"margin: 0px; padding: 0px;\">释放锁</strong>，而wait方法释放了锁，使得其他线程可以使用同步控制块或者方法。</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\">sleep不出让系统资源；wait是进入线程等待池等待，出让系统资源，其他线程可以占用CPU。一般wait不会加时间限制，因为如果wait线程的运行资源不够，再出来也没用，要等待其他线程调用notify/notifyAll唤醒等待池中的所有线程，才会进入就绪队列等待OS分配系统资源。sleep(milliseconds)可以用时间指定使它自动唤醒过来，如果时间不到只能调用interrupt()强行打断。</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\">Thread.Sleep(0)的作用是“触发操作系统立刻重新进行一次CPU竞争”。</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\"><br style=\"margin: 0px; padding: 0px;\">3、<strong style=\"margin: 0px; padding: 0px;\">使用范围：</strong>wait，notify和notifyAll只能在同步控制方法或者同步控制块里面使用，而sleep可以在任何地方使用&nbsp;<br style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp; synchronized(x){&nbsp;<br style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.notify()&nbsp;<br style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp; //或者wait()&nbsp;<br style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp; }</p><p style=\"color: rgb(0, 0, 0); margin: 10px auto; padding: 0px; font-family: verdana, 'ms song', 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 12px; line-height: 21px;\"><br style=\"margin: 0px; padding: 0px;\">4、sleep必须<strong style=\"margin: 0px; padding: 0px;\">捕获异常</strong>，而wait，notify和notifyAll不需要捕获异常</p>"
    }
  ]
}
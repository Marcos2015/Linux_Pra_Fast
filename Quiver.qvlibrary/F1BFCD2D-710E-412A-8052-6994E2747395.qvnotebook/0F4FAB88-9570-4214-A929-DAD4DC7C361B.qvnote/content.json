{
  "title": "补码原理（二进制正负数加减法基础）",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: Arial;\"><strong style=\"color: rgb(69, 69, 69); font-family: tahoma, helvetica, arial; line-height: 1.5;\">补码原理（二进制正负数加减法基础）</strong><div id=\"content\" class=\"content mod-cs-content text-content clearfix\" style=\"zoom: 1; width: 758px; overflow: hidden; line-height: 1.5; margin: 7px 0px 10px; color: rgb(69, 69, 69); font-family: tahoma, helvetica, arial;\"><img class=\"blogimg\" src=\"quiver-image-url/5E0E314F55DB4220BC372464C8D64568.jpg\" small=\"0\" style=\"border: 0px; margin-bottom: 8px; clear: both; max-width: 758px; vertical-align: top;\" width=\"394\" height=\"166\"><p style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp; 序言：在计算机里，为了区别正负数，采用第一位表示符号（正或负），这样一来，在计算机的二进制里做加法没问题，但既有加法又有减法时问题就来了：如做1 - 1 =0 时</p><p style=\"margin: 0px; padding: 0px;\">(0 001)<span style=\"vertical-align: text-bottom;\">原</span>&nbsp;+ (1 001)<span style=\"vertical-align: text-bottom;\">原</span>&nbsp;= (1 010)<span style=\"vertical-align: text-bottom;\">原</span>&nbsp;= ( -2 )　显然不正确（原因是第一位是用来表示正或负号）。</p><p style=\"margin: 0px; padding: 0px;\">为了解决这个问题，人们想出了补码的概念，亦即补码的设计目的是:&nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ⑴使符号位能与有效值部分一起参加运算,从而简化运算规则.&nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ⑵使减法运算转换为加法运算,进一步简化计算机中运算器的线路设计</p><p style=\"margin: 0px; padding: 0px;\">以下介绍我对于补码的一些理解。</p><p style=\"margin: 0px; padding: 0px;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;<strong>十进制中</strong>减一等于加上负一，我们知道时钟（时钟为十二进制）里“十点”减“三点”等于“七点”，而我们也知道“十点”加上“九点”也等于“七点”。利用这个原理，我们称在时钟的十二进制中，“三点”的补码为“九点”（因为减三和加九等价，不记天数的增加）。</p><p style=\"margin: 0px; padding: 0px;\"><br>&nbsp;&nbsp;&nbsp;&nbsp; 在<strong>四位二进制</strong>里（以四位为例比较简单介绍），我们知道“0001”加上“1111”等于“10000”，但“10000”超过了四位，故称其为<strong>溢出</strong>，并把最高位“1”<strong>舍去</strong>。举例子：如果“0010”减“0001”，则等于“0001”，而我们也知道“0010”加“1111”也等于“0001”，这样我们就在二进制里实现减法向加法的转换。而二进制里的第一位是符号位（0表示正数，1表示负数），故数值即如表中“二”和“五”所示。通过上面补码的一些规则我们知道减一（或加负一）等于加上一的补码，这就需要寻找“五”（负数列）与“六”产生一一对应关系的规则才能找出有符号位的二进制减法向加法的转换规则，根据观察上表（或者说是试探吧）可知“五”和“六”的第一位都是一，只是后面三位有所不同，所以在保持第一位都是一的前提下对“五”的后三位进行“特殊”处理（按位取反然后再在末位加一，如“001”取反变成“110”，再加一变成“111”）即得到“六”的后三位，这就是“五”和“六”的一 一对应关系规则。</p><p style=\"margin: 0px; padding: 0px;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>综合</strong>二进制正数和负数的这些规律我们得出下面这个二进制数的加减法均化为加法计算的规律（也称补码运算）：正数的补码为其本身（因其可以直接加），负数的补码为符号位保持“一”不变，后面的位取反然后再加一（即上面所说的“特殊”处理），作加减法时的公式为</p><p style=\"margin: 0px; padding: 0px;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; “补码”+“补码”=“得数的补码”</p><p style=\"margin: 0px; padding: 0px;\"><br>，如4+（-3）=1的二进制计算是<strong>“0100”（4原码为“0100”）+“1101”（-3原码为“1011”）=“0001”（0001的补码就是它本身，因0001是正数）。</strong>对于更多位的二进制运算也适用与此规律。<strong>取反加一是因为</strong>两个四位二进制数相加等于“10000”时（即互为补数），已知其中一个数求其补码：其中一个数就等于“10000”减去另外一个数，由于机器的原因限制了位长只能为四位，故采用“10000”先减去一变成“1111”，再减去其中一个数，这样的话在直观上看来就是被减的数“取反”（即0变1，1变0）；因为之前减去了一，所以减了之后再加回一，这样实现了“补数”之间的转换，这就是取反加一的原因。</p><p style=\"margin: 0px; padding: 0px;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp;特别地</strong>，0的二进制表示是“0000”，其补码也就是它本身；- 8的二进制表示是“1000”，其补码也是它本身，这是因为- 8（“1000”）的<strong>后三位</strong>取反后是“111”，再加一是“1000”，因为这是后三位，且- 8的符号位不能变，所以- 8的后三位加一后（即“1000”）的最高位 “一”溢出舍去，故- 8的补码还是它本身。以上就是二进制正负数的加减法的补码原理解析。</p></div><div class=\"mod-tagbox clearfix\" style=\"zoom: 1; color: rgb(69, 69, 69); font-family: tahoma, helvetica, arial; font-size: 12px; line-height: normal;\"><a class=\"tag\" href=\"http://hi.baidu.com/tag/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/feeds\" style=\"text-decoration: none; color: rgb(160, 160, 160); background-clip: padding-box; background-color: rgb(245, 245, 245); height: 12px; padding: 4px; border: 1px solid rgb(245, 245, 245); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; margin: 0px 5px 10px 0px; line-height: 12px; display: inline-block; zoom: 1; white-space: nowrap; -webkit-background-clip: padding-box;\">#技术文档</a></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
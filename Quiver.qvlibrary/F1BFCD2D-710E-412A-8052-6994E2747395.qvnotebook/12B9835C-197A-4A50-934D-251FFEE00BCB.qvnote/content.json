{
  "title": "函数调用时参数压栈顺序的问题--不要使用模棱两可的代码",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"articalTitle\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h2 id=\"t_605f5b4f0101f0xr\" class=\"titName SG_txta\"><span style=\"color: rgb(51, 51, 51); font-size: 16px; background-color: rgb(255, 255, 255);\">在C99中找到相应的建议了，是没有明确的规定压栈的顺序。</span><br></h2></div><div style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-size: 13.5pt;\">【源程序】</span></div><p style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255);\">&nbsp;<wbr></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">#include&nbsp;<wbr></span><span style=\"font-size: 12pt; color: green; font-family: 宋体;\">&lt;&lt;/span&gt;<span style=\"font-size: 12pt; color: black;\">stdio.h</span><span style=\"font-size: 12pt; color: green;\">&gt;</span></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\"><br>void</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>print(</span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">int</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>a,&nbsp;<wbr></span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">int</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>b,&nbsp;<wbr></span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">int</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>c)<br>{<br></span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">printf(</span><span style=\"font-size: 12pt; color: gray; font-family: 宋体;\">\"%d/t%d/t%d/n\"</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">,&nbsp;<wbr>a, b, c);<br>}</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">int&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">main(</span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">void</span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">)</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">{</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>int&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">p =&nbsp;<wbr></span><span style=\"font-size: 12pt; color: red; font-family: 宋体;\">0</span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">;</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">print(p++, ++p, p++);<br></span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>return</span><span style=\"font-size: 12pt; color: red; font-family: 宋体;\">0</span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">;</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 12pt;\"><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">}</span></p><p align=\"left\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 13.5pt; font-family: 宋体;\">【调用分析】<br></span><span style=\"color: rgb(51, 51, 51); font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; font-family: 宋体;\"><font color=\"#333333\">其实大家应该都知道这个顺序了，我简单粗略的提一下吧。</font><span style=\"color: rgb(51, 51, 51);\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>C&nbsp;<wbr></span><font color=\"#333333\">和</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr>C++&nbsp;<wbr></span><font color=\"#333333\">编译器进行函数调用的时候参数压栈的顺序时从右向左的。拿上面的程序来说，首先压栈的参数是最后一个“</font><span style=\"color: rgb(51, 51, 51);\">p++</span><font color=\"#333333\">”，压栈的值应该是</font><span style=\"color: rgb(51, 51, 51);\">0</span><font color=\"#333333\">，此时</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr>p=1</span><font color=\"#333333\">；然后压栈参数的是中间的“</font><span style=\"color: rgb(51, 51, 51);\">++p</span><font color=\"#333333\">”，压栈的值是</font><span style=\"color: rgb(51, 51, 51);\">2</span><font color=\"#333333\">，此时</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr>p=2</span><font color=\"#333333\">；最后压栈的是第一个“</font><span style=\"color: rgb(51, 51, 51);\">p++</span><font color=\"#333333\">”，压栈的值应该是</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr>2</span><font color=\"#333333\">，此时</font><span style=\"color: rgb(51, 51, 51);\">p=3</span><font color=\"#333333\">。</font><span style=\"color: rgb(51, 51, 51);\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><font color=\"#333333\">那么，输出结果就应该是“</font><span style=\"color: rgb(51, 51, 51);\">2 2 0</span><font color=\"#333333\">”。</font><span style=\"color: rgb(51, 51, 51);\"><br><br></span><font color=\"#333333\">【存在问题】</font><span style=\"color: rgb(51, 51, 51);\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><font color=\"#333333\">在</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr>Tc</span><font color=\"#333333\">、</font><span style=\"color: rgb(51, 51, 51);\">Tc3</span><font color=\"#333333\">、</font><span style=\"color: rgb(51, 51, 51);\">GCC&nbsp;<wbr></span><font color=\"#333333\">下编译通过，运行结果“</font><span style=\"color: rgb(51, 51, 51);\">2 2 0</span><font color=\"#333333\">”；</font><font color=\"#ED1C24\">(在我自己的机器上GCC结果是2 3 0)</font><span style=\"color: rgb(51, 51, 51);\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><font color=\"#333333\">在</font><span style=\"color: rgb(51, 51, 51);\">&nbsp;<wbr><a href=\"http://vc.net/\">VC.net</a>&nbsp;<wbr></span><font color=\"#333333\">下编译通过，运行结果“</font><span style=\"color: rgb(51, 51, 51);\">2 3 0</span><font color=\"#333333\">”；</font><span style=\"color: rgb(51, 51, 51);\"><br><br></span></span><span style=\"color: rgb(51, 51, 51); font-size: 13.5pt; font-family: 宋体;\">【问题分析】<br></span><span style=\"color: rgb(51, 51, 51); font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr><b>1</b></span><b style=\"color: rgb(51, 51, 51);\"><span style=\"font-size: 12pt; font-family: 宋体;\">、Tc3下从压栈到函数调用阶段的汇编代码：</span></b><span style=\"color: rgb(51, 51, 51); font-size: 12pt; font-family: 宋体;\">（使用方法&nbsp;<wbr>tcc -S filename.cpp）</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>{</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>int p = 0;</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>xor&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>si,si&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">;</span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">将&nbsp;<wbr>si&nbsp;<wbr>清零，即&nbsp;<wbr>p=0</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>print(p++, ++p, p++);</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">;</span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">将最后一个参数压栈，先压栈，后加1</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax,si<span style=\"color: teal;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;ax=0</span></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>inc&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>si</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">;</span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">将中间的参数压栈，先加1，后压栈</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>inc&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>si</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax,si&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;ax=2</span></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">;</span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">将第一个参数压栈，先压栈，后加1</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax,si&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;ax=2</span></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>inc&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>si</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ax</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: black; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">;</span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">调用&nbsp;<wbr>print&nbsp;<wbr>函数</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>call&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>near ptr @print$qiii</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr></span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 18pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span><span style=\"font-size: 12pt; font-family: 宋体;\">至此，在&nbsp;<wbr>Tc&nbsp;<wbr>和&nbsp;<wbr>Tc3&nbsp;<wbr>下的分析工作完成，结果是“2 2 0”的原因也就很清楚了。</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; font-family: 宋体;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><b>2</b></span><b><span style=\"font-size: 12pt; font-family: 宋体;\">、Vc.net下从压栈到函数调用阶段的汇编代码：<br></span></b><span style=\"font-size: 12pt; font-family: 宋体;\">;<br>;int p = 0;<br>;<br>00411B3E &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov dword ptr [p],0&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">赋初值&nbsp;<wbr>0，即 p=0</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>;<br>;print(p++, ++p,p++);<br>;<br></span><span style=\"font-size: 12pt; font-family: 宋体;\"><span style=\"color: teal;\">;这里涉及到了一些地址和寄存器，可能有的读者读不懂，把他们理解为变量就行了<br>;<br>;文中共出现 3 个地址 [p] [ebp-0D0h] [ebp-0D4h] ， ebp 和 p 在段程序中的值<br>;没有改变，所以地址也可以理解为一个变量。下面对一个地址进行解释<br></span><span style=\"color: teal;\">;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;mov dword ptr [p],0 就是把 p 地址处的内存赋值为&nbsp;<wbr>0，赋值单元数 dword<br>;<br></span><span style=\"color: teal;\">;文中还有一些寄存器，只是进行运算的时候使用，可以理解为临时变量<br>;<br></span><span style=\"color: teal;\">;</span><span style=\"font-size: 12pt; color: teal;\">操作第三个参数</span><br>00411B45 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>eax,dword ptr [p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;eax = 0&nbsp;<wbr></span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">即&nbsp;<wbr>eax = p</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B48 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>dword ptr [ebp-0D0h],eax&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">存放最第三个参数值</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B4E &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx,dword ptr[p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;ecx = 0 即 ecx = p</span><br>00411B51 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>add&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx,1&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;ecx = 1</span><br>00411B54&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>dword ptr [p],ecx&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;p&nbsp;<wbr>&nbsp;<wbr>&nbsp;= 1 即 p = ecx</span><br><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">操作第二个参数</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B57 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>edx,dword ptr [p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;edx = 1 即 edx = p</span><br>00411B5A &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>add&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>edx,1&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;edx = 2&nbsp;<wbr></span><br>00411B5D &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>dword ptr [p],edx&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;p&nbsp;<wbr>&nbsp;<wbr>&nbsp;= 2&nbsp;<wbr>即 p = edx</span><br>00411B60 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>eax,dword ptr[p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;eax = 2 即 p = eax</span><br>00411B63 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;dword ptr [ebp-0D4h],eax&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">存放第二个参数值</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">操作第一个参数</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B69 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx,dword ptr[p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;&nbsp;<wbr><span style=\"color: teal;\">;ecx = 2 即 ecx = p</span><br>00411B6C &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>add&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx,1&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;ecx = 3</span><br>00411B6F&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>dword ptr [p],ecx&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;p&nbsp;<wbr>&nbsp;<wbr>&nbsp;= 3 即 p = ecx<br>;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">开始压栈</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B72 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>edx,dword ptr [ebp-0D0h]&nbsp;<wbr><span style=\"color: teal;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">第三个参数压栈，值为&nbsp;<wbr>0</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B78 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>edx<br>00411B79&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>eax,dword ptr [p]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">第二个参数压栈，值为3</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B7C &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>eax<br>00411B7D &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>mov&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx,dword ptr[ebp-0D4h]&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">第一个参数压栈，值为&nbsp;<wbr>2</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B83 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>push&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>ecx<br><span style=\"color: teal;\">;</span></span><span style=\"font-size: 12pt; color: teal; font-family: 宋体;\">调用&nbsp;<wbr>print&nbsp;<wbr>函数</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br>00411B84 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>call&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>print(41100Fh)<br>00411B89 &nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>add&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>esp,0Ch<br></span><span style=\"font-size: 12pt; font-family: 宋体;\"><br></span><span style=\"font-size: 13.5pt; font-family: 宋体;\">【建议】</span><span style=\"font-size: 12pt; font-family: 宋体;\"><br><span style=\"color: blue;\">&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr></span></span><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\">为了你的程序的通用性，不要写那些模棱两可的程序，尽管有很多考试都考这些，我个人不认为把程序写成这样是高手。</span></p><p align=\"left\" style=\"font-family: Arial; font-size: 14px; color: rgb(51, 51, 51); line-height: 26px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><span style=\"font-size: 12pt; color: blue; font-family: 宋体;\"><br></span></p><p align=\"left\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><font color=\"#ED1C24\" size=\"3\"><span style=\"line-height: 19.200000762939453px;\">个人注解：</span></font></p><p align=\"left\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><font color=\"#ED1C24\" size=\"3\"><span style=\"line-height: 19.200000762939453px;\">可以看出当参数含有表达式的时候，TC，Tc3是按照从右向左的顺序计算完一个表达式后变压栈一次，而<a href=\"http://vc.net/\">VC.net</a>和GCC却是从右向左计算完所有的表达式之后，又从右向左将结果压栈。</span></font></p><p align=\"left\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><font color=\"#ED1C24\" size=\"3\"><span style=\"line-height: 19.200000762939453px;\"><br></span></font></p><p align=\"left\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt;\"><font size=\"3\"><span style=\"line-height: 19.200000762939453px;\">这一点在另一篇文章中也得到了验证：</span></font></p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; margin: 0px; padding: 0px; line-height: 26px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\">在Win32下以下程序的输出结果是( )<br>A 10 10&nbsp;<wbr>&nbsp;，B 12 12&nbsp;<wbr>&nbsp;<wbr>&nbsp;，C 13 13&nbsp;<wbr>&nbsp;，D11 13&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr>&nbsp;<wbr><br>&nbsp;<wbr>main(&nbsp;<wbr>&nbsp;)<br>&nbsp;<wbr>{&nbsp;<wbr><br>&nbsp;<wbr>int&nbsp;<wbr>&nbsp;a=12,b=12;<br>&nbsp;<wbr>printf(\"%d%d\\n\",a--,++a);<br>&nbsp;<wbr>&nbsp;}&nbsp;<wbr><br>答案：&nbsp;<b>VC和gcc下，结果都是 13,12</b><br>&nbsp;<wbr>解析：<br>C标准中并未规定函数参数压栈顺序，但VC和gcc默认都是从右至左压栈。同时，编译器也提供了各种函数调用约定。如在VC中，&nbsp;<b>若在编译时加入命令行参数_cdecl，则显式使函数参数从右至左压栈</b>，_fascall使程序在可能的情况下使用寄存器传递参数。程序员可以使用这些约定来更改参数调用的顺序。对于此题，printf的后两个参数是表达式，<b>因此压栈前要计算表达式的值。</b></span><span style=\"font-size: 18px;\">生成的汇编：</span></p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; margin: 0px; padding: 0px; line-height: 26px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\">1、<b><font color=\"#ED1C24\">计算++a：此时a的值变为13，这时不会将a入栈而是紧接着进行下一步计算；</font></b><br>mov&nbsp;<wbr>&nbsp;eax, DWORD PTR _a$[ebp]<br>add&nbsp;<wbr>&nbsp;eax, 1<br>mov&nbsp;<wbr>&nbsp;DWORD PTR _a$[ebp], eax<br>2、<b><font color=\"#ED1C24\">紧接着计算a--：这里会先将a的值赋给一个临时变量DWORD PTR tv68[ebp]，然后将a减1</font></b>，此时a的值DWORD PTR _a$[ebp]为12，临时变量DWORD PTR tv68[ebp]的值为13；<br>mov&nbsp;<wbr>&nbsp;ecx, DWORD PTR _a$[ebp]<br>mov&nbsp;<wbr>&nbsp;DWORD PTR tv68[ebp], ecx<br>mov&nbsp;<wbr>&nbsp;edx, DWORD PTR _a$[ebp]<br>sub&nbsp;<wbr>&nbsp;edx, 1<br>mov&nbsp;<wbr>&nbsp;DWORD PTR _a$[ebp], edx<br>3、<b><font color=\"#FF13FE\">进行入栈操作：先将a的值DWORD PTR _a$[ebp]入栈，接着将上一步临时变量DWORD PTR tv68[ebp]入栈，然后是字符串入栈</font></b>，栈顶到栈底依次为：字符串、13、12；<br>mov&nbsp;<wbr>&nbsp;eax, DWORD PTR _a$[ebp]<br>push eax<br>mov&nbsp;<wbr>&nbsp;ecx, DWORD PTR tv68[ebp]<br>push ecx</span></p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; margin: 0px; padding: 0px; line-height: 26px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 18px;\">这个问题给我的收获是：<br>1、程序里的表达式并不一定像我们想当然的顺序执行的；<br>2、不要试图用这种方式去编程，可读性差且结果难以确定；<br>3、VS里可选的函数调用方式有三种：__cdecl、__fastcall、__stdcall，而默认是__cdecl即函数参数从右至左入栈，而printf的函数原型显式指定为__cdecl：<br>&nbsp;<wbr>&nbsp;<wbr>&nbsp;int __cdecl printf (const char *format, ...)</span></p>"
    }
  ]
}
{
  "title": "你不知道的按位运算",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"font-size: 14px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">先来看</span><a href=\"https://leetcode.com/\" target=\"_blank\" style=\"font-size: 14px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px; box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">LeetCode</a><span style=\"font-size: 14px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">上的</span><a href=\"https://leetcode.com/problems/divide-two-integers\" target=\"_blank\" style=\"font-size: 14px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px; box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">Divide Two Integers</a><span style=\"font-size: 14px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">题目要求：</span><blockquote style=\"font-size: 14px; box-sizing: border-box; padding: 10.5px 21px; margin-top: 18px; margin-bottom: 18px; border-left-width: 5px; border-color: rgb(0, 142, 89); color: rgb(85, 85, 85); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><p style=\"box-sizing: border-box; margin: 0px;\">Divide two integers without using multiplication, division and mod operator.</p></blockquote><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">就是说不用<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">乘法，除法，求模运算</code>来实现两个整数相除，看起来很简单，我可以用除数减去被除数，直到除数小于被除数，记录减法操作的次数即可。假设是计算m/n，那么时间复杂度为O(m/n)。用Python实现后，<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">Time Limit Exceeded</code>。我们考虑有没有更加优化的算法呢？</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">如果很难想得到，那就先来回忆下二进制数按位运算的一些知识。</p><h1 id=\"articleHeader0\" style=\"box-sizing: border-box; font-size: 1.57143em; margin: 28px 0px 18px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 1.2; color: rgb(51, 51, 51); padding-bottom: 8px;\">二进制数按位运算</h1><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">计算机里面所有数据都存储为0，1串，所有的运算归根到底都转为二进制数的运算。相信大家都知道二进制数按位运算的规则：</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><img src=\"quiver-image-url/8716DE2D99F594A2AB94350EB75BC4CE.png\" alt=\"二进制位运算规则\" title=\"二进制位运算规则\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; cursor: pointer; position: static !important;\" width=\"800\" height=\"560\"></p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">来看一些简单的例子：</p><pre class=\"hljs ruby\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 10px; margin-top: 18px; margin-bottom: 18px; line-height: 1.3; word-break: break-all; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-height: 500px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 1em; color: inherit; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-space: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span> &amp; <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1100</span> = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1000</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span> | <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1100</span> = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1110</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span> ^ <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1100</span> = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0110</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span> &lt;&lt; <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">2</span>   = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">101000</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span> <span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt; </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">2</span>   = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">10</span>\n~<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">1010</span>       = <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0101</span>\n</code></pre><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">单纯的二进制位之间的这些运算相当简单，但对我们实际编程并没有直接帮助，因为编程过程中需要的经常是数字间的运算，比如 5*(2^4) 。真的是这样吗？接着往下看！</p><h1 id=\"articleHeader1\" style=\"box-sizing: border-box; font-size: 1.57143em; margin: 28px 0px 18px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 1.2; color: rgb(51, 51, 51); padding-bottom: 8px;\">计算机中数字的存储方式</h1><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">我们都知道计算机中万物皆为0、1，将万物变为0、1的过程叫做编码，这里我们只讨论将数字编码为0、1的过程。</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">计算机中对数字的表示有三种方式：原码，反码，补码：</p><ul style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; padding-left: 30px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">原码表示法在数值前面增加了一位符号位（即最高位为符号位）：正数该位为0，负数该位为1。比如十进制3如果用8个二进制位来表示就是 00000011， -3就是 10000011。</p></li><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">反码表示方法：正数的反码是其本身；负数的反码是在其原码的基础上，符号位不变，其余各个位取反。</p></li><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">补码表示方法：正数的补码是其本身；负数的补码是在其原码的基础上，符号位不变，其余各位取反，最后+1。 (即在反码的基础上+1)</p></li></ul><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">原码容易被人脑直接识别并用于计算，但是对于计算机来说并不友好。所以在计算机系统中，数值一律用补码来表示、运算和存储。使用补码，可以将符号位和数值域统一处理，将加法和减法统一处理。此外，补码与原码相互转换，其运算过程是相同的，不需要额外的硬件电路。详细的解释可以参考<a href=\"http://www.cnblogs.com/zhangziqiu/archive/2011/03/30/computercode.html\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">原码, 反码, 补码详解</a>。</p><h1 id=\"articleHeader2\" style=\"box-sizing: border-box; font-size: 1.57143em; margin: 28px 0px 18px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 1.2; color: rgb(51, 51, 51); padding-bottom: 8px;\">数字的按位运算</h1><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">计算机中数字存储为补码形式，各个数之间的运算也是对它们的补码做运算，而且得到的结果也是补码，如下图：</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><img src=\"quiver-image-url/6831CF35791CBB537AB17413B8A693FD.png\" alt=\"补码运算\" title=\"补码运算\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; cursor: pointer; position: static !important;\" width=\"655\" height=\"409\"></p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">各种编程语言都提供了对补码的二进制位直接进行运算的方法。以Python为例：</p><pre class=\"hljs ruby\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 10px; margin-top: 18px; margin-bottom: 18px; line-height: 1.3; word-break: break-all; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-height: 500px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 1em; color: inherit; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-space: inherit; overflow-wrap: normal;\"><span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; 0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span> &amp; 0b110<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">8</span>   <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#1000</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; 0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span> | 0b110<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">14</span>  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#1110</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; 0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span> ^ 0b110<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">6</span>   <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#0110</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; 0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span> &lt;&lt; <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">2</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">40</span>  <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#101000</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; 0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span> &gt;&gt; <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">2</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">2</span>   <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#10</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; ~0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span>\n-<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">11</span> <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">#10000000 00000000 00000000 00001011</span>\n<span class=\"hljs-prompt\" style=\"box-sizing: border-box;\">&gt;&gt;</span>&gt; type(0b101<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">0</span>)\n&lt;type <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">'int'</span>&gt;</code></pre><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">上面0b开头的0、1串表示整型数字，在32位操作系统中，Python中int类型一般占32个二进制位，以最后一个求反运算为例子，1010的补码为</p><blockquote style=\"font-size: 14px; box-sizing: border-box; padding: 10.5px 21px; margin-top: 18px; margin-bottom: 18px; border-left-width: 5px; border-color: rgb(0, 142, 89); color: rgb(85, 85, 85); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><p style=\"box-sizing: border-box; margin: 0px;\">00000000 00000000 00000000 00001010</p></blockquote><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">求反操作后为：</p><blockquote style=\"font-size: 14px; box-sizing: border-box; padding: 10.5px 21px; margin-top: 18px; margin-bottom: 18px; border-left-width: 5px; border-color: rgb(0, 142, 89); color: rgb(85, 85, 85); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><p style=\"box-sizing: border-box; margin: 0px;\">11111111 11111111 11111111 11110101</p></blockquote><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">即为-11(原码为：<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">10000000 00000000 00000000 00001011</code>)的补码。（对一个数的补码求补码即可得到该数的原码）</p><h1 id=\"articleHeader3\" style=\"box-sizing: border-box; font-size: 1.57143em; margin: 28px 0px 18px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 1.2; color: rgb(51, 51, 51); padding-bottom: 8px;\">另辟蹊径的按位运算</h1><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">那么按位运算在实际编程中可以扮演哪些角色呢？简单点地，可以用来判断奇、偶数：<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">num &amp; 0x1</code>，或者对一个数变换符号：<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">~num + 1</code>；复杂点的可以用来交换两个数，求绝对值等等。</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><strong style=\"box-sizing: border-box;\">&gt; 不用额外的变量实现两个数字互换。</strong></p><pre class=\"hljs python\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 10px; margin-top: 18px; margin-bottom: 18px; line-height: 1.3; word-break: break-all; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-height: 500px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 1em; color: inherit; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-space: inherit; overflow-wrap: normal;\"><span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; color: rgb(133, 153, 0);\">def</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(38, 139, 210);\">swap</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(num_1, num_2)</span>:</span>\n    num_1 ^= num_2\n    num_2 ^= num_1\n    num_1 ^= num_2\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; color: rgb(133, 153, 0);\">return</span> num_1, num_2</code></pre><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">证明很简单，我们只需要明白异或运算满足下面规律：</p><ul style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; padding-left: 30px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">0^a = a;</p></li><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">a^a = 0;</p></li><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin: 0px;\">a^b^c = a^c^b;</p></li></ul><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">巧妙运用异或可以高效解决很多问题，比如&nbsp;<em style=\"box-sizing: border-box;\">找出数组中只出现了一次的数（除了一个数只出现一次外，其他数都是出现两次）</em>，以及它的升级版：<a href=\"http://blog.csdn.net/morewindows/article/details/8214003\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">数组中只出现1次的两个数字(百度面试题)</a>。</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><strong style=\"box-sizing: border-box;\">&gt; 不用判断语句来实现求绝对值。</strong></p><pre class=\"hljs python\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 10px; margin-top: 18px; margin-bottom: 18px; line-height: 1.3; word-break: break-all; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; max-height: 500px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 1em; color: inherit; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-space: inherit; overflow-wrap: normal;\"><span class=\"hljs-function\" style=\"box-sizing: border-box;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; color: rgb(133, 153, 0);\">def</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; color: rgb(38, 139, 210);\">bit_abs</span><span class=\"hljs-params\" style=\"box-sizing: border-box;\">(num)</span>:</span>\n    negative = num &gt;&gt; <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(42, 161, 152);\">31</span>\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; color: rgb(133, 153, 0);\">return</span> (num ^ negative) - negative</code></pre><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">这里假设程序运行环境中操作系统为32位，int型整数(不考虑整数溢出)用32位存储，因此可以用&nbsp;<code style=\"box-sizing: border-box; font-family: Consolas, Menlo, Monaco, 'Courier New', monospace; font-size: 0.92857em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(246, 246, 246);\">num&gt;&gt;31</code>&nbsp;取出符号位，后面的部分留给大伙证明。</p><h1 id=\"articleHeader4\" style=\"box-sizing: border-box; font-size: 1.57143em; margin: 28px 0px 18px; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 1.2; color: rgb(51, 51, 51); padding-bottom: 8px;\">Leetcode 题目思路</h1><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">回到文章开始提到的题目中，我们对除数减去被除数的过程稍作改进。假设求m/n，我们不一次次的 m-n，而是找到n的一个倍数，使得m-x*n尽可能小，这样能减少循环减法的次数，进而提高效率。我们知道在按位操作中，n &lt;&lt; k相当于 n * 2^k，因此可以用2^k 来找合适的x。</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\">我们需要这样的一个数字k，它使得n&nbsp;<em style=\"box-sizing: border-box;\">2^k &lt; m &lt; n</em>&nbsp;2^(k+1)， 然后用m - n*2^k，得到新的m'。再找相应的k'，做减法，如此循环即可。代码放在<a href=\"https://gist.github.com/xuelangZF/32b1ccc98b8dd4ce67e9#file-leetcode_29-py\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">这里</a>。</p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><a href=\"http://zhaofei.tk/2015/09/23/something_about_bit_operation/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">原文地址</a></p><p style=\"font-size: 14px; box-sizing: border-box; margin: 18px 0px; color: rgb(51, 51, 51); font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', SimSun, sans-serif; line-height: 22px;\"><strong style=\"box-sizing: border-box;\">相关阅读</strong>&nbsp;&nbsp;<br style=\"box-sizing: border-box;\"><a href=\"https://wiki.python.org/moin/BitwiseOperators\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">Pyhon wiki: BitwiseOperators</a>&nbsp;&nbsp;<br style=\"box-sizing: border-box;\"><a href=\"http://blog.csdn.net/morewindows/article/details/7354571\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 142, 89); text-decoration: none; outline: 0px;\">位操作基础篇之位操作全面总结</a></p>"
    }
  ]
}
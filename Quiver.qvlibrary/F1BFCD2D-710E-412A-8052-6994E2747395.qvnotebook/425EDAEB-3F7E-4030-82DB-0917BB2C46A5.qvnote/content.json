{
  "title": "Linux启动过程详解",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"post\" style=\"padding-left: 20px; font-size: 13px; color: rgb(170, 170, 170); font-family: georgia, Verdana, Helvetica, Arial; line-height: 19px;\"><div class=\"postcontent\" style=\"margin-top: 10px; background-repeat: no-repeat no-repeat;\"><div id=\"cnblogs_post_body\"><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">随着Linux的应用日益广泛，特别是在网络应用方面，有大量的网络服务器使用Linux操作系统。由于Linux的桌面应用和Windows相比还有一定的差距，所以在企业应用中往往是Linux和Windows操作系统共存形成异构网络。在服务器端大多使用Linux和Unix的，目前Linux的擅长应用领域是单一应用的基础服务器应用，譬如DNS和DHCP服务器、Web服务器、目录服务器、防火墙、文件和打印服务器、Intranet代理服务器 。启动 Linux 系统的过程包括很多阶段。不管您是引导一个标准的 x86 处理器，还是PowerPC 机器，很多流程都惊人地相似。本文将描述了从开机到登录的 Linux 启动全过程。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">（1） 从BIOS到内核</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; BIOS自检</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 计算机在接通电源之后首先由BIOS进行自检，即进行所谓的POST（Power On Self&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">Test），然后依据BIOS内设置的引导顺序从硬盘、软盘或CDROM中读入“引导块”。 在 PC 中，引导 Linux 是从 BIOS 中的地址 0xFFFF0 处开始的。BIOS 的第一个步骤是加电自检（POST）。POST 的工作是对硬件进行检测。BIOS 的第二个步骤是进行本地设备的枚举和初始化。给定 BIOS 功能的不同用法之后，BIOS 由两部分组成：POST 代码和运行时服务。当 POST 完成之后，它被从内存中清理了出来，但是 BIOS 运行时服务依然保留在内存中，目标操作系统可以使用这些服务。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 要引导一个操作系统，BIOS 运行时会按照 CMOS 的设置定义的顺序来搜索处于活动状态并且可以引导的设备。引导设备可以是软盘、CD-ROM、硬盘上的某个分区、网络上的某个设备，甚至是 USB 闪存。通常，Linux 都是从硬盘上引导的，其中主引导记录（MBR）中包含主引导加载程序。MBR 是一个 512 字节大小的扇区，位于磁盘上的第一个扇区中（0 道 0 柱面 1 扇区）。当 MBR 被加载到 RAM 中之后，BIOS 就会将控制权交给 MBR。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 提取 MBR 的信息</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 要查看 MBR 的内容，请使用下面的命令：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; # dd if=/dev/hda of=mbr.bin bs=512 count=1 # od -xa mbr.bin&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 这个 dd 命令需要以 root 用户的身份运行，它从 /dev/hda（第一个 IDE 盘） 上读取前 512 个字节的内容，并将其写入 mbr.bin 文件中。od 命令会以十六进制和 ASCII 码格式打印这个二进制文件的内容。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">（2）启动GRUB/LILO</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; GRUB和LILO都是引导加载程序。最简单地讲，引导加载程序（boot loader） 会引导操作系统。当机器引导它的操作系统时，BIOS 会读取引导介质上最前面的 512 字节（即人们所知的 主引导记录（master boot record，MBR））。在单一的 MBR 中只能存储一个操作系统的引导记录，所以当需要多个操作系统时就会出现问题。所以需要更灵活的引导加载程序。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; GRUB 与 LILO 的比较</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 如本文开始处所述，所有引导加载程序都以类似的方式工作，满足共同的目的。不过，LILO 和 GRUB 之间有很多不同之处：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">LILO 没有交互式命令界面，而 GRUB 拥有。&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">LILO 不支持网络引导，而 GRUB 支持。&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">LILO 将关于可以引导的操作系统位置的信息物理上存储在 MBR 中。如果修改了 LILO 配置文件，必须将 LILO 第一阶段引导加载程序重写到 MBR。相对于 GRUB，这是一个更为危险的选择，因为错误配置的 MBR 可能会让系统无法引导。使用 GRUB，如果配置文件配置错误，则只是默认转到 GRUB 命令行界面。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 安全提示：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 关于安全性，任何可以接触到引导磁盘/CD 的人，只需要使用没有设置安全性的 grub.conf 或 lilo.conf，就可以绕过本文中提及的所有安全措施。特别是使用 GRUB 时，因为能够引导到单用户模式，所以是一个严重的安全漏洞。解决此问题的一个简单方法是在机器的 BIOS 中禁止通过 CD 和软盘进行引导，并确保为 BIOS 设置了一个口令，使得其他人不能修改这些设置。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp;（3）加载内核</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 当内核映像被加载到内存之后，内核阶段就开始了。内核映像并不是一个可执行的内核，而是一个压缩过的内核映像。通常它是一个 zImage（压缩映像，小于 512KB）或一个 bzImage（较大的压缩映像，大于 512KB），它是提前使用 zlib 进行压缩过的。在这个内核映像前面是一个例程，它实现少量硬件设置，并对内核映像中包含的内核进行解压，然后将其放入高端内存中，如果有初始 RAM 磁盘映像，就会将它移动到内存中，并标明以后使用。然后该例程会调用内核，并开始启动内核引导的过程。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; GRUB 中的手工引导</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 在 GRUB 命令行中，我们可以使用 initrd 映像引导一个特定的内核，方法如下：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; grub&gt; kernel /bzImage-2.6.14.2</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp;[Linux-bzImage, setup=0x1400, size=0x29672e]</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; grub&gt; initrd /initrd-2.6.14.2.img</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp;[Linux-initrd @ 0x5f13000, 0xcc199 bytes]</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; grub&gt; boot</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; Uncompressing Linux... Ok, booting the kernel.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">如果您不知道要引导的内核的名称，只需使用斜线（/）然后按下 Tab 键即可。GRUB 会显示内核和 initrd 映像列表。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp;（4）执行init进程</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; init进程是系统所有进程的起点，内核在完成核内引导以后，即在本线程（进程）空间内加载init程序，它的进程号是1。init进程是所有进程的发起者和控制者。因为在任何基于Unix的系统（比如Linux）中，它都是第一个运行的进程，所以init进程的编号（Process ID，PID）永远是1。如果init出现了问题，系统的其余部分也就随之而垮掉了。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; init进程有两个作用。第一个作用是扮演终结父进程的角色。因为init进程永远不会被终止，所以系统总是可以确信它的存在，并在必要的时候以它为参照。如果某个进程在它衍生出来的全部子进程结束之前被终止，就会出现必须以init为参照的情况。此时那些失去了父进程的子进程就都会以init作为它们的父进程。快速执行一下ps -af 命令，可以列出许多父进程ID（Parent Process ID，PPID）为1的进程来。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; init的第二个角色是在进入某个特定的运行级别（Runlevel）时运行相应的程序，以此对各种运行级别进行管理。它的这个作用是由/etc/inittab文件定义的。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">（5）通过/etc/inittab文件进行初始化</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; init的工作是根据/etc/inittab来执行相应的脚本进行系统初始化，如设置键盘、字体， 装载模块，设置网络，等等。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 对于RedhatLinux来说，执行的顺序为：&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">/etc/rc.d/rc.sysinit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 由init执行的第一个脚本&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">设置初始的$PATH变量。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">配置网络。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">为虚拟内存启动交换。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">设置系统的主机名。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">检查root文件系统，以进行必要的修复。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">检查root文件系统的配额。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">为root文件系统打开用户和组的配额。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">以读/写的方式重新装载root文件系统。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">清除被装载的文件系统表/etc/mtab。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">把root文件系统输入到mtab。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">使系统为装入模块做准备。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">查找模块的相关文件。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">检查文件系统，以进行必要的修复。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">加载所有其他文件系统。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">清除几个/etc文件：/etc/mtab、/etc/fastboot和/etc/nologin。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">删除UUCP的lock文件。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">删除过时的子系统文件。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">删除过时的pid文件。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">设置系统时钟。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">打开交换。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">初始化串行端口。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">装入模块。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">/etc/rc.d/rcX.d/[KS]</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; 首先终止“K”开头的服务，然后启动“S”开头的服务。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; &nbsp;对每一个运行级别来说，在/etc/rc.d子目录中都有一个对应的下级目录。这些运行级别的下级子目录的命名方法是rcX.d，其中的X就是代表运行级别的数字。比如说，运行级别3的全部命令脚本程序都保存在/etc/rc.d/rc3.d子目录中。在各个运行级别的子目录中，都建立有到/etc/rc.d/init.d子目录中命令脚本程序的符号链接，但是，这些符号链接并不使用命令脚本程序在 /etc/rc.d/init.d子目录中原来的名字。如果命令脚本程序是用来启动一个服务的，其符号链接的名字就以字母S打头；如果命令脚本程序是用来关闭一个服务的，其符号链接的名字就以字母K打头。许多情况下，这些命令脚本程序的执行顺序都很重要。如果没有先配置网络接口，就没有办法使用DNS服务解析主机名！为了安排它们的执行顺序，在字母S或者 K的后面紧跟着一个两位数字，数值小的在数值大的前面执行。比如：/etc/rc.d/rc3.d/S50inet就会在 /etc/rc.d/rc3.d/S55named之前执行。存放在/etc/rc.d/init.d子目录中的、被符号链接上的命令脚本程序是真正的实干家，是它们完成了启动或者停止各种服务的操作过程。当 /etc/rc.d/rc运行通过每个特定的运行级别子目录的时候，它会根据数字的顺序依次调用各个命令脚本程序执行。它先运行以字母K打头的命令脚本程序，然后再运行以字母S打头的命令脚本程序。对以字母K打头的命令脚本程序来说，会传递Stop参数；类似地对以字母S打头的命令脚本程序来说，会传递 Start参数。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">执行/etc/ec.d/rc.local</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">Redhat Linux中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。在维护Linux系统运转的日子里，肯定会遇到需要系统管理员对开机或者关机命令脚本进行修改的情况。如果所做的修改只在引导开机的时候起作用，并且改动不大的话，可以考虑简单地编辑一下/etc/rc.d/rc.local脚本。这个命令脚本程序是在引导过程的最后一步被执行的。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">执行 /bin/login 程式 &nbsp; &nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">login 程序会提示使用者需输入账号及密码, 接着编码并确认密码的正确性, 若二者相合, 则为使用者进行初始化环境, 并将控制权交给 shell，即等待用户登录。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">多次为止Linux启动过程全部结束。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">***********************************</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">本文以RedHat9.0和i386平台为例，剖析了从用户打开电源直到屏幕出现命令行提示符的整个Linux启动过程。并且介绍了启动中涉及到的各种文件。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　阅读Linux源代码，无疑是深入学习Linux的最好方法。在本文对Linux启动过程的介绍中，我们也尝试从源代码的视角来更深入的剖析Linux的启动过程，所以其中也简单涉及到部分相关的Linux源代码，Linux启动这部分的源码主要使用的是C语言，也涉及到了少量的汇编。而启动过程中也执行了大量的shell(主要是bash shell)所写脚本。为了方便读者阅读，笔者将整个Linux启动过程分成以下几个部分逐一介绍，大家可以参考下图：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　当用户打开PC的电源，BIOS开机自检，按BIOS中设置的启动设备(通常是硬盘)启动，接着启动设备上安装的引导程序lilo或grub开始引导Linux，Linux首先进行内核的引导，接下来执行init程序，init程序调用了rc.sysinit和rc等程序，rc.sysinit和rc当完成系统初始化和运行服务的任务后，返回init；init启动了mingetty后，打开了终端供用户登录系统，用户登录成功后进入了Shell，这样就完成了从开机到登录的整个启动过程。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">下面就将逐一介绍其中几个关键的部分：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　第一部分：内核的引导(核内引导)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　Red Hat9.0可以使用lilo或grub等引导程序开始引导Linux系统，当引导程序成功完成引导任务后，Linux从它们手中接管了CPU的控制权，然后CPU就开始执行Linux的核心映象代码，开始了Linux启动过程。这里使用了几个汇编程序来引导Linux，这一步泛及到Linux源代码树中的“arch/i386/boot”下的这几个文件：bootsect.S、setup.S、video.S等。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　其中bootsect.S是生成引导扇区的汇编源码，它完成加载动作后直接跳转到setup.S的程序入口。setup.S的主要功能就是将系统参数（包括内存、磁盘等，由BIOS返回）拷贝到特别内存中，以便以后这些参数被保护模式下的代码来读取。此外，setup.S还将video.S中的代码包含进来，检测和设置显示器和显示模式。最后，setup.S将系统转换到保护模式，并跳转到 0x100000。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　那么0x100000这个内存地址中存放的是什么代码？而这些代码又是从何而来的呢？</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　0x100000这个内存地址存放的是解压后的内核，因为Red Hat提供的内核包含了众多驱动和功能而显得比较大，所以在内核编译中使用了“makebzImage”方式，从而生成压缩过的内核，在RedHat中内核常常被命名为vmlinuz，在Linux的最初引导过程中，是通过\"arch/i386/boot/compressed/\"中的head.S利用misc.c中定义的decompress_kernel()函数，将内核vmlinuz解压到0x100000的。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　当CPU跳到0x100000时，将执行\"arch/i386/kernel/head.S\"中的startup_32，它也是vmlinux的入口，然后就跳转到start_kernel()中去了。start_kernel()是\"init/main.c\"中的定义的函数，start_kernel()中调用了一系列初始化函数，以完成kernel本身的设置。start_kernel()函数中，做了大量的工作来建立基本的Linux核心环境。如果顺利执行完start_kernel()，则基本的Linux核心环境已经建立起来了。&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　在start_kernel()的最后，通过调用init()函数，系统创建第一个核心线程，启动了init过程。而核心线程init()主要是来进行一些外设初始化的工作的，包括调用do_basic_setup()完成外设及其驱动程序的加载和初始化。并完成文件系统初始化和root文件系统的安装。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　当do_basic_setup()函数返回init()，init()又打开了/dev/console设备，重定向三个标准的输入输出文件stdin、stdout和stderr到控制台，最后，搜索文件系统中的init程序（或者由init=命令行参数指定的程序），并使用 execve()系统调用加载执行init程序。到此init()函数结束，内核的引导部分也到此结束了。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">第二部分：运行init</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　init的进程号是1，从这一点就能看出，init进程是系统所有进程的起点，Linux在完成核内引导以后，就开始运行init程序，。init程序需要读取配置文件/etc/inittab。inittab是一个不可执行的文本文件，它有若干行指令所组成。在Redhat系统中，inittab的内容如下所示(以“###\"开始的中注释为笔者增加的)：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　#</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# inittab &nbsp; &nbsp; &nbsp; This file describes how the INIT process should set up</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; the system in a certain run-level.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　#</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# Author: &nbsp; &nbsp; &nbsp; Miquel van Smoorenburg, &lt;<a href=\"mailto:miquels@drinkel.nl.mugnet.org\">miquels@drinkel.nl.mugnet.org</a>&gt;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Modified for RHS Linux by Marc Ewing and Donnie Barnes</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　#</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# Default runlevel. The runlevels used by RHS are:</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 0 - halt (Do NOT set initdefault to this)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 1 - Single user mode</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 2 - Multiuser, without NFS (The same as 3, if you do not havenetworking)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 3 - Full multiuser mode</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 4 - unused</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 5 - X11</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# &nbsp; 6 - reboot (Do NOT set initdefault to this)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　#</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###表示当前缺省运行级别为5(initdefault)；</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　id:5:initdefault:</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###启动时自动执行/etc/rc.d/rc.sysinit脚本(sysinit)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# System initialization.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　si::sysinit:/etc/rc.d/rc.sysinit</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l0:0:wait:/etc/rc.d/rc 0</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l1:1:wait:/etc/rc.d/rc 1</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l2:2:wait:/etc/rc.d/rc 2</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l3:3:wait:/etc/rc.d/rc 3</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l4:4:wait:/etc/rc.d/rc 4</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###当运行级别为5时，以5为参数运行/etc/rc.d/rc脚本，init将等待其返回(wait)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l5:5:wait:/etc/rc.d/rc 5</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l6:6:wait:/etc/rc.d/rc 6</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###在启动过程中允许按CTRL-ALT-DELETE重启系统</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# Trap CTRL-ALT-DELETE</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　ca::ctrlaltdel:/sbin/shutdown -t3 -r now</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# When our UPS tells us power has failed, assume we have a few minutes</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# of power left. Schedule a shutdown for 2 minutes from now.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# This does, of course, assume you have powerd installed and your</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# UPS connected and working correctly.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　pf::powerfail:/sbin/shutdown -f -h +2 \"Power Failure; System Shutting Down\"</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# If power was restored before the shutdown kicked in, cancel it.</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　pr:12345:powerokwait:/sbin/shutdown -c \"Power Restored; Shutdown Cancelled\"</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###在2、3、4、5级别上以ttyX为参数执行/sbin/mingetty程序，打开ttyX终端用于用户登录，</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###如果进程退出则再次运行mingetty程序(respawn)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# Run gettys in standard runlevels</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　1:2345:respawn:/sbin/mingetty tty1</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　2:2345:respawn:/sbin/mingetty tty2</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　3:2345:respawn:/sbin/mingetty tty3</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　4:2345:respawn:/sbin/mingetty tty4</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　5:2345:respawn:/sbin/mingetty tty5</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　6:2345:respawn:/sbin/mingetty tty6</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　###在5级别上运行xdm程序，提供xdm图形方式登录界面，并在退出时重新执行(respawn)</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　# Run xdm in runlevel 5</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　x:5:respawn:/etc/X11/prefdm -nodaemon</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　以上面的inittab文件为例，来说明一下inittab的格式。其中以#开始的行是注释行，除了注释行之外，每一行都有以下格式：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　id:runlevel:action:process&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　对上面各项的详细解释如下：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　1. id</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　id是指入口标识符，它是一个字符串，对于getty或mingetty等其他login程序项，要求id与tty的编号相同，否则getty程序将不能正常工作。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　2. runlevel</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　runlevel是init所处于的运行级别的标识，一般使用0－6以及S或s。0、1、6运行级别被系统保留：其中0作为shutdown动作，1作为重启至单用户模式，6为重启；S和s意义相同，表示单用户模式，且无需inittab文件，因此也不在inittab中出现，实际上，进入单用户模式时，init直接在控制台（/dev/console）上运行/sbin/sulogin。在一般的系统实现中，都使用了2、3、4、5几个级别，在Redhat系统中，2表示无NFS支持的多用户模式，3表示完全多用户模式（也是最常用的级别），4保留给用户自定义，5表示XDM图形登录方式。7－9级别也是可以使用的，传统的Unix系统没有定义这几个级别。runlevel可以是并列的多个值，以匹配多个运行级别，对大多数action来说，仅当runlevel与当前运行级别匹配成功才会执行。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　3. action</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　action是描述其后的process的运行方式的。action可取的值包括：initdefault、sysinit、boot、bootwait等：&nbsp;</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　initdefault是一个特殊的action值，用于标识缺省的启动级别；当init由核心激活以后，它将读取inittab中的initdefault项，取得其中的runlevel，并作为当前的运行级别。如果没有inittab文件，或者其中没有initdefault项，init将在控制台上请求输入runlevel。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　sysinit、boot、bootwait等action将在系统启动时无条件运行，而忽略其中的runlevel。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　其余的action（不含initdefault）都与某个runlevel相关。各个action的定义在inittab的man手册中有详细的描述。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　4. process</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　process为具体的执行程序。程序后面可以带参数。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　第三部分：系统初始化</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　在init的配置文件中有这么一行：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　si::sysinit:/etc/rc.d/rc.sysinit</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本。它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　rc.sysinit约有850多行，但是每个单一的功能还是比较简单，而且带有注释，建议有兴趣的用户可以自行阅读自己机器上的该文件，以了解系统初始化所详细情况。由于此文件较长，所以不在本文中列出来，也不做具体的介绍。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　当rc.sysinit程序执行完毕后，将返回init继续下一步。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">第四部分：启动对应运行级别的守护进程</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　在rc.sysinit执行后，将返回init继续其它的动作，通常接下来会执行到/etc/rc.d/rc程序。以运行级别3为例，init将执行配置文件inittab中的以下这行：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　l5:5:wait:/etc/rc.d/rc 5</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　这一行表示以5为参数运行/etc/rc.d/rc，/etc/rc.d/rc是一个Shell脚本，它接受5作为参数，去执行/etc/rc.d/rc5.d/目录下的所有的rc启动脚本，/etc/rc.d/rc5.d/目录中的这些启动脚本实际上都是一些链接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在/etc/rc.d/init.d/目录下。而这些rc启动脚本有着类似的用法，它们一般能接受start、stop、restart、status等参数。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的链接文件，对于以以S开头的启动脚本，将以start参数来运行。而如果发现存在相应的脚本也存在K打头的链接，而且已经处于运行态了(以/var/lock/subsys/下的文件作为标志)，则将首先以stop为参数停止这些已经启动了的守护进程，然后再重新运行。这样做是为了保证是当init改变运行级别时，所有相关的守护进程都将重启。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　至于在每个运行级中将运行哪些守护进程，用户可以通过chkconfig或setup中的\"System Services\"来自行设定。常见的守护进程有：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　amd：自动安装NFS守护进程</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　apmd:高级电源管理守护进程</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　arpwatch：记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对数据库</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　autofs：自动安装管理进程automount，与NFS相关，依赖于NIS</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　crond：Linux下的计划任务的守护进程</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　named：DNS服务器</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　netfs：安装NFS、Samba和NetWare网络文件系统</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　network：激活已配置网络接口的脚本程序</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　nfs：打开NFS服务</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　portmap：RPC portmap管理器，它管理基于RPC服务的连接</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　sendmail：邮件服务器sendmail</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　smb：Samba文件共享/打印服务</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　xfs：X Window字型服务器，为本地和远程X服务器提供字型集</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　Xinetd：支持多种网络服务的核心守护进程，可以管理wuftp、sshd、telnet等服务</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　这些守护进程也启动完成了，rc程序也就执行完了，然后又将返回init继续下一步。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">第五部分：建立终端</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。init接下来会打开6个终端，以便用户登录系统。通过按Alt+Fn(n对应1-6)可以在这6个终端中切换。在inittab中的以下6行就是定义了6个终端：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　1:2345:respawn:/sbin/mingetty tty1</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　2:2345:respawn:/sbin/mingetty tty2</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　3:2345:respawn:/sbin/mingetty tty3</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　4:2345:respawn:/sbin/mingetty tty4</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　5:2345:respawn:/sbin/mingetty tty5</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　6:2345:respawn:/sbin/mingetty tty6</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　从上面可以看出在2、3、4、5的运行级别中都将以respawn方式运行mingetty程序，mingetty程序能打开终端、设置模式。同时它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验证用户的身份。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　第六部分：登录系统，启动完成</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　对于运行级别为5的图形方式用户来说，他们的登录是通过一个图形化的登录界面。登录成功后可以直接进入KDE、Gnome等窗口管理器。而本文主要讲的还是文本方式登录的情况：</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　当我们看到mingetty的登录界面时，我们就可以输入用户名和密码来登录系统了。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　Linux的账号验证程序是login，login会接收mingetty传来的用户名作为用户名参数。然后login会对用户名进行分析：如果用户名不是root，且存在/etc/nologin文件，login将输出nologin文件的内容，然后退出。这通常用来系统维护时防止非root用户登录。只有/etc/securetty中登记了的终端才允许root用户登录，如果不存在这个文件，则root可以在任何终端上登录。/etc/usertty文件用于对用户作出附加访问限制，如果不存在这个文件，则没有其他限制。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　在分析完用户名后，login将搜索/etc/passwd以及/etc/shadow来验证密码以及设置账户的其它信息，比如：主目录是什么、使用何种shell。如果没有指定主目录，将默认为根目录；如果没有指定shell，将默认为/bin/bash。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　login程序成功后，会向对应的终端在输出最近一次登录的信息(在/var/log/lastlog中有记录)，并检查用户是否有新邮件(在/usr/spool/mail/的对应用户名目录下)。然后开始设置各种环境变量：对于bash来说，系统首先寻找/etc/profile脚本文件，并执行它；然后如果用户的主目录中存在.bash_profile文件，就执行它，在这些文件中又可能调用了其它配置文件，所有的配置文件执行后后，各种环境变量也设好了，这时会出现大家熟悉的命令行提示符，到此整个启动过程就结束了。</div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\"><br></div><div style=\"margin: 0px; padding: 0px; color: rgb(68, 68, 68); font-family: Tahoma, 'Microsoft Yahei'; font-size: 14px; line-height: 14.666666984558105px;\">　　希望通过上面对Linux启动过程的剖析能帮助那些想深入学习Linux用户建立一个相关Linux启动过程的清晰概念，进而可以进一步研究Linux接下来是如何工作的。</div></div></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
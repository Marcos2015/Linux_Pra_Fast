{
  "title": "UNIX网络编程之旅-配置unp.h头文件环境",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">最近在学UNIX下的</span><strong style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">网络</strong><strong style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">编程</strong><span style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">，所以就找来一本UNIX</span><strong style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">网络</strong><strong style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">编程</strong><span style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">看了看。结果刚看到第一章的第一个例子的时候傻眼了。unp.h，貌似没见过，百度百科后知道是要自己下载的，</span><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">所以就试试了。我分为3步。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">1，先从网上下载一个叫unpv.13e.tar.gz的东东。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">2，解压后make。（解压后在终端下进入解压后的目录下。执行下面的命令行）</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（1）&nbsp;&nbsp;./configure</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （2）cd&nbsp; lib</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（3）make</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">完成后即在在根目录中生成libunp.a<strong>文件</strong>。然后打开子目录lib下的unp.h<strong>文件</strong>。将里面的unp.h中将#include \"../config.h\"改成#include \"config.h\"&nbsp;，如果已经是。则不用改。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">3，拷贝<strong>文件</strong>。（需要有拷贝的权限，所以我是切换到root用户下去做的）</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">（1）将刚生成的libunp.a<strong>文件</strong>复制这个静态库到/usr/lib/和/usr/lib64/中，</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">（2）将刚改过的unp.h<strong>文件</strong>和主目录的config.h<strong>文件</strong>拷贝到/usr/include中。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">这三个做完后。就已经接近尾声了。当你把例子完完整整的敲上后，编译发现还是有问题。没有err_为前缀的函数，那是因为少了一个库<strong>文件</strong>（apueerror.h），在网上找到后。将<strong>文件</strong>拷贝到/usr/include 中后。编译ok。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">下面将apueerror.h的代码复制出来。</p><p style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\">&nbsp;</p><ol class=\"dp-cpp\" style=\"color: rgb(0, 0, 0); font-size: 14px; margin: 0px; padding: 0px; list-style: none; font-family: 'Microsoft YaHei', 微软雅黑, Lucida, Verdana, 'Hiragino Sans GB', STHeiti, 'WenQuanYi Micro Hei', SimSun, sans-serif; line-height: 24px;\"><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"preprocessor\">#include&nbsp;&lt;errno.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;for&nbsp;definition&nbsp;of&nbsp;errno&nbsp;*/&nbsp;</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"preprocessor\">#include&nbsp;&lt;stdarg.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;ISO&nbsp;C&nbsp;variable&nbsp;aruments&nbsp;*/&nbsp;</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">static</span>&nbsp;<span class=\"keyword\">void</span>&nbsp;err_doit(<span class=\"datatypes\">int</span>,&nbsp;<span class=\"datatypes\">int</span>,&nbsp;<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*,&nbsp;<span class=\"datatypes\">va_list</span>);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Nonfatal&nbsp;error&nbsp;related&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;return.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">err_ret(<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(1,&nbsp;errno,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Fatal&nbsp;error&nbsp;related&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;terminate.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">err_sys(<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(1,&nbsp;errno,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Fatal&nbsp;error&nbsp;unrelated&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Error&nbsp;code&nbsp;passed&nbsp;as&nbsp;explict&nbsp;parameter.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;terminate.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">err_exit(<span class=\"datatypes\">int</span>&nbsp;error,&nbsp;<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(1,&nbsp;error,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Fatal&nbsp;error&nbsp;related&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message,&nbsp;dump&nbsp;core,&nbsp;and&nbsp;terminate.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">err_dump(<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(1,&nbsp;errno,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;abort();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">/*&nbsp;dump&nbsp;core&nbsp;and&nbsp;terminate&nbsp;*/</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">/*&nbsp;shouldn't&nbsp;get&nbsp;here&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Nonfatal&nbsp;error&nbsp;unrelated&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;return.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">err_msg(<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(0,&nbsp;0,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Fatal&nbsp;error&nbsp;unrelated&nbsp;to&nbsp;a&nbsp;system&nbsp;call.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;terminate.</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">err_quit(<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;...)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ap;&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_start(ap,&nbsp;fmt);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;err_doit(0,&nbsp;0,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;va_end(ap);&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">}&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">/*</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Print&nbsp;a&nbsp;message&nbsp;and&nbsp;return&nbsp;to&nbsp;caller.</span>&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*&nbsp;Caller&nbsp;specifies&nbsp;\"errnoflag\".</span>&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\"><span class=\"comment\">&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\"><span class=\"keyword\">static</span>&nbsp;<span class=\"keyword\">void</span>&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">err_doit(<span class=\"datatypes\">int</span>&nbsp;errnoflag,&nbsp;<span class=\"datatypes\">int</span>&nbsp;error,&nbsp;<span class=\"keyword\">const</span>&nbsp;<span class=\"datatypes\">char</span>&nbsp;*fmt,&nbsp;<span class=\"datatypes\">va_list</span>&nbsp;ap)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">{&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"datatypes\">char</span>&nbsp;&nbsp;&nbsp;&nbsp;buf[MAXLINE];&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;vsnprintf(buf,&nbsp;MAXLINE,&nbsp;fmt,&nbsp;ap);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;<span class=\"keyword\">if</span>&nbsp;(errnoflag)&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snprintf(buf+strlen(buf),&nbsp;MAXLINE-strlen(buf),&nbsp;<span class=\"string\">\":&nbsp;%s\"</span>,&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strerror(error));&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;strcat(buf,&nbsp;<span class=\"string\">\"/n\"</span>);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;fflush(stdout);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">/*&nbsp;in&nbsp;case&nbsp;stdout&nbsp;and&nbsp;stderr&nbsp;are&nbsp;the&nbsp;same&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;fputs(buf,&nbsp;stderr);&nbsp;&nbsp;</li><li class=\"alt\" style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;&nbsp;fflush(NULL);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">/*&nbsp;flushes&nbsp;all&nbsp;stdio&nbsp;output&nbsp;streams&nbsp;*/</span>&nbsp;&nbsp;</li><li style=\"margin: 0px; padding: 0px;\">} &nbsp;</li></ol>"
    }
  ]
}
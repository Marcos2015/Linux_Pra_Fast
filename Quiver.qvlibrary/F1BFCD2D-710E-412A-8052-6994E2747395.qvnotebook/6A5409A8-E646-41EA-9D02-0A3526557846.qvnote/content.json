{
  "title": "Linux上的Shebang符号(#!)",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">使用Linux或者unix系统的同学可能都对#!这个符号并不陌生，但是你真的了解它吗？</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">本文了将给你简单介绍一下Shebang（”#!”）这个符号。</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">首先，这个符号（#!）的名称，叫做”Shebang”或者”Sha-bang”（还有其他一些名称，不过我一般就用这两个）。</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">Shebang这个符号通常在Unix系统的脚本中第一行开头中写到，它指明了执行这个脚本文件的解释程序。<br><b><br>1. 如果脚本文件中没有#!这一行，那么它执行时会默认用当前Shell去解释这个脚本(即：$SHELL环境变量）。</b></p><b style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><p>2. 如果#!之后的解释程序是一个可执行文件，那么执行这个脚本时，它就会把文件名及其参数一起作为参数传给那个解释程序去执行。</p><p>3. 如果#!指定的解释程序没有可执行权限，则会报错“bad interpreter: Permission denied”。<br>&nbsp;&nbsp;&nbsp;&nbsp;如果#!指定的解释程序不是一个可执行文件，那么指定的解释程序会被忽略，转而交给当前的SHELL去执行这个脚本。</p><p>4. 如果#!指定的解释程序不存在，那么会报错“bad interpreter: No such file or directory”。<br>&nbsp;&nbsp;&nbsp;&nbsp;注意：#!之后的解释程序，需要写其绝对路径（如：#!/bin/bash），它是不会自动到$PATH中寻找解释器的。</p></b><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><b>5. 当然，如果你使用”bash test.sh”这样的命令来执行脚本，那么#!这一行将会被忽略掉，解释器当然是用命令行中显式指定的bash。</b><br><span id=\"more-467\"></span></p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">例如：test.sh</p><div class=\"wp_codebox_msgheader\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span class=\"right\"></span><span class=\"left\"><a>View Code</a>&nbsp;BASH</span></div><div class=\"wp_codebox\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><table><tbody><tr id=\"p4671\"><td class=\"line_numbers\"><pre>1\n2\n3\n</pre></td><td class=\"code\" id=\"p467code1\"><pre class=\"bash\"><span style=\"color: rgb(102, 102, 102); font-style: italic;\">#!/bin/bash</span>\n<span style=\"color: rgb(122, 8, 116); font-weight: bold;\">echo</span> <span style=\"color: rgb(255, 0, 0);\">\"hello, world.\"</span>\n<span style=\"color: rgb(122, 8, 116); font-weight: bold;\">echo</span> <span style=\"color: rgb(255, 0, 0);\">\"hello, <span style=\"color: rgb(0, 120, 0);\">${1}</span>.\"</span></pre></td></tr></tbody></table></div><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">chmod a+x &nbsp;test.sh</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">./test.sh &nbsp; Jay &nbsp;（运行之时，其实是 /bin/bash ./test.sh Jay）</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">结果为：</p><p style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">hello, world.<br>hello, Jay.</p>"
    }
  ]
}
{
  "title": "Linux Debugging: 使用反汇编理解C++程序函数调用栈",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"position: relative;\"><div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"article_title\" style=\"margin: 5px 0px; font-size: 20px; line-height: 30px; font-family: 'Microsoft YaHei';\"></div><div id=\"article_content\" class=\"article_content\" style=\"margin: 20px 0px 0px; line-height: 26px; font-family: Arial; color: rgb(51, 51, 51);\"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 拿到CoreDump后，如果看到的地址都是？？？？，那么基本上可以确定，程序的栈被破坏掉了。GDB也是使用函数的调用栈去还原“事故现场”的。因此理解函数调用栈，是使用GDB进行现场调试或者事后调试的基础，如果不理解调用栈，基本上也从GDB得不到什么有用的信息。当然了，也有可能你非常“幸运”， 一个bt就把哪儿越界给标出来了。但是，大多数的时候你不够幸运，通过log，通过简单的code walkthrough，得不到哪儿出的问题；或者说只是推测，不能确诊。我们需要通过GDB来最终确定CoreDump产生的真正原因。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 本文还可以帮助你深入理解C++函数的局部变量。我们学习时知道局部变量是是存储到栈里的，内存管理对程序员是透明的。通过本文，你将明白这些结论是如何得出的。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 栈，是LIFO（Last In First Out）的数据结构。C++的函数调用就是通过栈来传递参数，保存函数返回后下一步的执行地址。接下来我们通过一个具体的例子来探究。</p><p></p><div class=\"dp-highlighter bg_cpp\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 687.046875px; overflow: auto; padding-top: 1px; margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[cpp]</b>&nbsp;<a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/169977\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/169977/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 569px; top: 719px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_1\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_1\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=1&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" class=\"dp-cpp\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;func1(</span><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;a)&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">{&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;b&nbsp;=&nbsp;a&nbsp;+&nbsp;1;&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold;\">return</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;b;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">}&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;func0(</span><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;a)&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">{&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;b&nbsp;=&nbsp;func1(a);&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold;\">return</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;b;&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">}&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;main()&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">{&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;a&nbsp;=&nbsp;1234;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;func0(a);&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold;\">return</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;0;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">}&nbsp;&nbsp;</span></li></ol></div>可以使用以下命令将上述code编程成汇编代码：<p></p><p>&nbsp;g++ -g -S -O0 -m32 main.cpp -o-|c++filt &gt;main.format.s</p><p>c++filt 是为了Demangle symbols。-m32是为了编译成x86-32的。因为对于x86-64来说，函数的参数是通过寄存器传递的。</p><p>main的汇编代码：</p><p></p><div class=\"dp-highlighter bg_cpp\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 687.046875px; overflow: auto; padding-top: 1px; margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[cpp]</b>&nbsp;<a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/169977\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/169977/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 569px; top: 1266px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_2\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_2\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=2&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" class=\"dp-cpp\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">main:&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leal&nbsp;&nbsp;&nbsp;&nbsp;4(%esp),&nbsp;%ecx&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;andl&nbsp;&nbsp;&nbsp;&nbsp;$-16,&nbsp;%esp&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushl&nbsp;&nbsp;&nbsp;-4(%ecx)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushl&nbsp;&nbsp;&nbsp;%ebp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#1：push&nbsp;%ebp指令把ebp寄存器的值压栈，同时把esp的值减4&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%esp,&nbsp;%ebp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#2&nbsp;&nbsp;把esp的值传送给ebp寄存器。&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"preprocessor\" style=\"margin: 0px; padding: 0px; border: none; color: gray;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#1&nbsp;+&nbsp;#2&nbsp;合起来是把原来ebp的值保存在栈上，然后又给ebp赋了新值。</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"preprocessor\" style=\"margin: 0px; padding: 0px; border: none; color: gray;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#2+&nbsp;ebp指向栈底，而esp指向栈顶，在函数执行过程中esp</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;&nbsp;</span></span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\"><span class=\"preprocessor\" style=\"margin: 0px; padding: 0px; border: none; color: gray;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#2++随着压栈和出栈操作随时变化，而ebp是不动的</span><span style=\"margin: 0px; padding: 0px; border: none;\">&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushl&nbsp;&nbsp;&nbsp;%ecx&nbsp;&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subl&nbsp;&nbsp;&nbsp;&nbsp;$20,&nbsp;%esp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#3&nbsp;现在esp地址-20/4&nbsp;=&nbsp;5,&nbsp;及留出5个地址空间给main的局部变量&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;$1234,&nbsp;-8(%ebp)#4&nbsp;局部变量1234&nbsp;存入ebp&nbsp;-&nbsp;8&nbsp;的地址&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;-8(%ebp),&nbsp;%eax&nbsp;#5&nbsp;将地址存入eax&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%eax,&nbsp;(%esp)&nbsp;&nbsp;&nbsp;#6&nbsp;将1234存入esp指向的地址&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call&nbsp;&nbsp;&nbsp;&nbsp;func0(<span class=\"datatypes\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(46, 139, 87); font-weight: bold;\">int</span><span style=\"margin: 0px; padding: 0px; border: none;\">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#7&nbsp;调用func0，注意这是demangle后的函数名，实际是一个地址&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;$0,&nbsp;%eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addl&nbsp;&nbsp;&nbsp;&nbsp;$20,&nbsp;%esp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;popl&nbsp;&nbsp;&nbsp;&nbsp;%ecx&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;popl&nbsp;&nbsp;&nbsp;&nbsp;%ebp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leal&nbsp;&nbsp;&nbsp;&nbsp;-4(%ecx),&nbsp;%esp&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;&nbsp;</span></li></ol></div><br><br><p></p><p>对于call指令，这个指令有两个作用：</p><div class=\"orderedlist\"><ol type=\"1\"><li><p><code class=\"literal\">func0</code>函数调用完之后要返回到<code class=\"literal\">call</code>的下一条指令继续执行，所以把<code class=\"literal\">call</code>的下一条指令的地址压栈，同时把<code class=\"literal\">esp</code>的值减4。</p></li><li><p>修改程序计数器<code class=\"literal\">eip</code>，跳转到<code class=\"literal\">func0</code>函数的开头执行。</p></li></ol><p>至此，调用func0的栈就是下面这个样子：</p><p><img src=\"quiver-image-url/0047682C8155EF3434DB722B48F81FAC.png\" alt=\"\" style=\"border: none;\" width=\"295\" height=\"526\"></p><br><p>下面看一下func0的汇编代码：</p><p></p><div class=\"dp-highlighter bg_plain\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 687.046875px; overflow: auto; padding-top: 1px; margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[plain]</b>&nbsp;<a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/169977\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/169977/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 578px; top: 2768px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_3\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_3\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=3&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">func0(int):&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushl&nbsp;&nbsp;&nbsp;%ebp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%esp,&nbsp;%ebp&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subl&nbsp;&nbsp;&nbsp;&nbsp;$20,&nbsp;%esp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;8(%ebp),&nbsp;%eax&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%eax,&nbsp;(%esp)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call&nbsp;&nbsp;&nbsp;&nbsp;func1(int)&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%eax,&nbsp;-4(%ebp)&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;-4(%ebp),&nbsp;%eax&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leave&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;&nbsp;</span></li></ol></div>需要注意的是esp也是留了5个地址空间给func0使用。并且ebp的下一个地址就是留给局部变量b的，调用栈如图：<p></p><p><img src=\"quiver-image-url/C6962E2F210F1FB5179ED8123F19B2B2.png\" alt=\"\" style=\"border: none;\" width=\"296\" height=\"524\"></p><p>通过调用栈可以看出，8(%ebp)其实就是传入的参数1234。<br></p><p>func1的代码：</p><p></p><div class=\"dp-highlighter bg_plain\" style=\"font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 687.046875px; overflow: auto; padding-top: 1px; margin: 18px 0px !important;\"><div class=\"bar\" style=\"padding-left: 45px;\"><div class=\"tools\" style=\"padding: 3px 8px 10px 10px; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108);\"><b>[plain]</b>&nbsp;<a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"ViewSource\" title=\"view plain\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">view plain</a><a href=\"http://blog.csdn.net/anzhsoft/article/details/18730605#\" class=\"CopyToClipboard\" title=\"copy\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\">copy</a><a href=\"https://code.csdn.net/snippets/169977\" target=\"_blank\" title=\"在CODE上查看代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/BA3ACBF6D7A3420D26DB10207385A617.png\" width=\"16\" height=\"16\" alt=\"在CODE上查看代码片\" style=\"border: none; position: relative; top: 1px; left: 2px;\"></a><a href=\"https://code.csdn.net/snippets/169977/fork\" target=\"_blank\" title=\"派生到我的代码片\" style=\"color: rgb(160, 160, 160); text-decoration: none; background-image: none; border: none; padding: 1px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; background-position: 0% 0%; background-repeat: no-repeat no-repeat;\"><img src=\"quiver-image-url/02725C4F62B67DC23F2B87E776850078.svg\" width=\"0\" height=\"0\" alt=\"派生到我的代码片\" style=\"border: none; position: relative; top: 2px; left: 2px;\"></a><div style=\"position: absolute; left: 578px; top: 3880px; width: 18px; height: 18px; z-index: 99;\"><embed id=\"ZeroClipboardMovie_4\" src=\"http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"18\" height=\"18\" name=\"ZeroClipboardMovie_4\" align=\"middle\" allowscriptaccess=\"always\" allowfullscreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"id=4&amp;width=18&amp;height=18\" wmode=\"transparent\"></div></div></div><ol start=\"1\" style=\"padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important;\"><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">func1(int):&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pushl&nbsp;&nbsp;&nbsp;%ebp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%esp,&nbsp;%ebp&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subl&nbsp;&nbsp;&nbsp;&nbsp;$16,&nbsp;%esp&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;8(%ebp),&nbsp;%eax&nbsp;#去传入的参数，即1234&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addl&nbsp;&nbsp;&nbsp;&nbsp;$1,&nbsp;%eax&nbsp;#&nbsp;+1&nbsp;运算&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;%eax,&nbsp;-4(%ebp)&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;movl&nbsp;&nbsp;&nbsp;&nbsp;-4(%ebp),&nbsp;%eax&nbsp;#将计算结果存入eax，这就是返回值&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leave&nbsp;&nbsp;</span></li><li class=\"\" style=\"border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(108, 226, 108); list-style: decimal-leading-zero outside; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;&nbsp;</span></li></ol></div><br><code class=\"literal\">leave</code>指令，这个指令是函数开头的<code class=\"literal\">push %ebp</code>和<code class=\"literal\">mov %esp,%ebp</code>的逆操作：<p></p><div class=\"orderedlist\"><ol type=\"1\"><li><p>把<code class=\"literal\">ebp</code>的值赋给<code class=\"literal\">esp</code></p></li><li><p>现在<code class=\"literal\">esp</code>所指向的栈顶保存着<code class=\"literal\">foo</code>函数栈帧的<code class=\"literal\">ebp</code>，把这个值恢复给<code class=\"literal\">ebp</code>，同时<code class=\"literal\">esp</code>增加4。注意，现在esp指向的是这次调用的返回地址，即上次调用的下一条执行指令。</p></li></ol></div><p></p><p>最后是<code class=\"literal\">ret</code>指令，它是<code class=\"literal\">call</code>指令的逆操作：</p><div class=\"orderedlist\"><ol type=\"1\"><li><p>现在<code class=\"literal\">esp</code>所指向的栈顶保存着返回地址，把这个值恢复给<code class=\"literal\">eip</code>，同时<code class=\"literal\">esp</code>增加4，<code class=\"literal\">esp指向了当前frame的栈顶</code>。</p></li><li><p>修改了程序计数器<code class=\"literal\">eip</code>，因此跳转到返回地址继续执行。</p></li></ol><p>调用栈如下：</p><p><img src=\"quiver-image-url/6BDF067AC2FBE91E57B39AF8E85517FB.png\" alt=\"\" style=\"border: none;\" width=\"294\" height=\"646\"></p><p><br></p><p>至此，func1返回后，控制权交还给func0，当前的栈就退化成func0的栈的情况，因为栈保存了一切信息，因此指令继续执行。直至func0执行</p><p>leave</p><p>ret</p><p>以同样的方式将控制权交回给main。</p><p><br>&nbsp;&nbsp;&nbsp;&nbsp; 到这里，你应该知道下面问题的答案了：</p><p>1. 局部变量的生命周期，</p><p>2. 局部变量是怎么样使用内存的；</p><p>3. 为什么传值不会改变原值（因为编译器已经帮你做好拷贝了）</p><p>4. 为什么会有栈溢出的错误</p><p>5. 为什么有的写坏栈的程序可以运行，而有的却会crash（如果栈被破坏的是数据，那么数据是脏的，不应该继续运行；如果破坏的是上一层调用的bp，或者返回地址，那么程序会crash，or unexpected behaviour...）</p><p><br></p><p>&nbsp;&nbsp;&nbsp; 小节一下：</p><p>&nbsp;&nbsp; 1. 在32位的机器上，C++的函数调用的参数是存到栈上的。当然gcc可以在函数声明中添加_attribute__((regparm(3)))使用eax， edx，ecx传递开头三个参数。<br></p><p>&nbsp;&nbsp; 2. 通过bp可以访问到调用的参数值。</p><p>&nbsp;&nbsp; 3. 函数的返回地址（函数返回后的执行指令）也是存到栈上的，有目的的修改它可以使程序跳转到它不应该的地方。。。</p><p>&nbsp;&nbsp; 4. 如果程序破坏了上一层的bp的地址，或者程序的返回地址，那么程序就很有可能crash</p><p>&nbsp;&nbsp; 5. 拿到一个CoreDump，应该首先先看有可能出问题的线程的的frame的栈是否完整。</p><p>&nbsp;&nbsp; 6. 64位的机器上，参数是通过寄存器传递的，当然寄存器不够用就会通过栈来传递</p><div><br></div></div></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span><div style=\"clear: both;\"></div></div>"
    }
  ]
}
{
  "title": "malloc()之后，内核发生了什么？",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px;\">考虑这样一种常见的情况：用户进程调用malloc()动态分配了一块内存空间，再对这块内存进行访问。这些用户空间发生的事会引发内核空间的那些反映？本文将简单为您解答。</span><h3 style=\"color: rgb(0, 0, 0); border: 0px; font-size: 24px; margin: 1em 0px 0.2em; outline: 0px; padding: 0px; font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-weight: normal; line-height: 1.3;\">1.brk系统调用服务例程</h3><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">malloc()是一个API，这个函数在库中封装了系统调用brk。因此如果调用malloc，那么首先会引发brk系统调用执行的过程。brk()在内核中对应的系统调用服务例程为SYSCALL_DEFINE1(brk, unsigned long, brk)，参数brk用来指定heap段新的结束地址，也就是重新指定mm_struct结构中的brk字段。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">brk系统调用服务例程首先会确定heap段的起始地址min_brk，然后再检查资源的限制问题。接着，将新老heap地址分别按照页大小对齐，对齐后的地址分别存储与newbrk和okdbrk中。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">brk()系统调用本身既可以缩小堆大小，又可以扩大堆大小。缩小堆这个功能是通过调用do_munmap()完成的。如果要扩大堆的大小，那么必须先通过find_vma_intersection()检查扩大以后的堆是否与已经存在的某个虚拟内存重合，如何重合则直接退出。否则，调用do_brk()进行接下来扩大堆的各种工作。</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">SYSCALL_DEFINE1(brk, unsigned long, brk)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">{</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;unsigned long rlim, retval;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;unsigned long newbrk, oldbrk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;struct mm_struct *mm = current-&amp;gt;mm;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;unsigned long min_brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;down_write(&amp;amp;mm-&amp;gt;mmap_sem);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">#ifdef CONFIG_COMPAT_BRK</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;min_brk = mm-&amp;gt;end_code;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">#else</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;min_brk = mm-&amp;gt;start_brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">#endif</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (brk &amp;lt; min_brk)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto out;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;rlim = rlimit(RLIMIT_DATA);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (rlim &amp;lt; RLIM_INFINITY &amp;amp;&amp;amp; (brk - mm-&amp;gt;start_brk) +</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(mm-&amp;gt;end_data - mm-&amp;gt;start_data) &amp;gt; rlim)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;newbrk = PAGE_ALIGN(brk);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;oldbrk = PAGE_ALIGN(mm-&amp;gt;brk);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (oldbrk == newbrk)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto set_brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (brk brk) {</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (!do_munmap(mm, newbrk, oldbrk-newbrk))</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto set_brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto out;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (find_vma_intersection(mm, oldbrk, newbrk+PAGE_SIZE))</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto out;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (do_brk(oldbrk, newbrk-oldbrk) != oldbrk)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto out;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">set_brk:</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;mm-&amp;gt;brk = brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">out:</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;retval = mm-&amp;gt;brk;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;up_write(&amp;amp;mm-&amp;gt;mmap_sem);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;return retval;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">}</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">brk系统调用服务例程最后将返回堆的新结束地址。</p><h3 style=\"color: rgb(0, 0, 0); border: 0px; font-size: 24px; margin: 1em 0px 0.2em; outline: 0px; padding: 0px; font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-weight: normal; line-height: 1.3;\">2.扩大堆</h3><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">用户进程调用malloc()会使得内核调用brk系统调用服务例程，因为malloc总是动态的分配内存空间，因此该服务例程此时会进入第二条执行路径中，即扩大堆。do_brk()主要完成以下工作：</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">1.通过get_unmapped_area()在当前进程的地址空间中查找一个符合len大小的线性区间，并且该线性区间的必须在addr地址之后。如果找到了这个空闲的线性区间，则返回该区间的起始地址，否则返回错误代码-ENOMEM；</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">2.通过find_vma_prepare()在当前进程所有线性区组成的红黑树中依次遍历每个vma，以确定上一步找到的新区间之前的线性区对象的位置。如果addr位于某个现存的vma中，则调用do_munmap()删除这个线性区。如果删除成功则继续查找，否则返回错误代码。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">3.目前已经找到了一个合适大小的空闲线性区，接下来通过vma_merge()去试着将当前的线性区与临近的线性区进行合并。如果合并成功，那么该函数将返回prev这个线性区的vm_area_struct结构指针，同时结束do_brk()。否则，继续分配新的线性区。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">4.接下来通过kmem_cache_zalloc()在特定的slab高速缓存vm_area_cachep中为这个线性区分配vm_area_struct结构的描述符。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">5.初始化vma结构中的各个字段。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">6.更新mm_struct结构中的vm_total字段，它用来同级当前进程所拥有的vma数量。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">7.如果当前vma设置了VM_LOCKED字段，那么通过mlock_vma_pages_range()立即为这个线性区分配物理页框。否则，do_brk()结束。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">可以看到，do_brk()主要是为当前进程分配一个新的线性区，在没有设置VM_LOCKED标志的情况下，它不会立刻为该线性区分配物理页框，而是通过vma一直将分配物理内存的工作进行延迟，直至发生缺页异常。</p><h3 style=\"color: rgb(0, 0, 0); border: 0px; font-size: 24px; margin: 1em 0px 0.2em; outline: 0px; padding: 0px; font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-weight: normal; line-height: 1.3;\">3.缺页异常的处理过程</h3><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">经过上面的过程，malloc()返回了线性地址，如果此时用户进程访问这个线性地址，那么就会发生缺页异常(Page Fault)。整个缺页异常的处理过程非常复杂，我们这里只关注与malloc()有关的那一条执行路径。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">当CPU产生一个异常时，将会跳转到异常处理的整个处理流程中。对于缺页异常，CPU将跳转到page_fault异常处理程序中：</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">//linux-2.6.34/arch/x86/kernel/entry_32.S</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">ENTRY(page_fault)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;RING0_EC_FRAME</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pushl $do_page_fault</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;CFI_ADJUST_CFA_OFFSET 4</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;ALIGN</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">error_code:</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;…………</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;jmp ret_from_exception</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;CFI_ENDPROC</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">END(page_fault)</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">该异常处理程序会调用do_page_fault()函数，该函数通过读取CR2寄存器获得引起缺页的线性地址，通过各种条件判断以便确定一个合适的方案来处理这个异常。</p><h4 style=\"color: rgb(0, 0, 0); border: 0px; font-size: 19px; margin: 1.33em 0px 0.2em; outline: 0px; padding: 0px; font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-weight: normal; line-height: 20px;\">3.1.do_page_fault()</h4><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">该函数通过各种条件来检测当前发生异常的情况，但至少do_page_fault()会区分出引发缺页的两种情况：由编程错误引发异常，以及由进程地址空间中还未分配物理内存的线性地址引发。对于后一种情况，通常还分为用户空间所引发的缺页异常和内核空间引发的缺页异常。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">内核引发的异常是由vmalloc()产生的，它只用于内核空间内存的分配。显然，我们这里需要关注的是用户空间所引发的异常情况。这部分工作从do_page_fault()中的good_area标号处开始执行，主要通过handle_mm_fault()完成。</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">//linux-2.6.34/arch/x86/mm/fault.c</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">dotraplinkage void __kprobes</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">do_page_fault(struct pt_regs *regs, unsigned long error_code)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">{</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">good_area:</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;write = error_code &amp;amp; PF_WRITE;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (unlikely(access_error(error_code, write, vma))) {</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bad_area_access_error(regs, error_code, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;fault = handle_mm_fault(mm, vma, address, write ? FAULT_FLAG_WRITE : 0);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">}</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><span style=\"font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-size: 19px;\"><br></span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><span style=\"font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-size: 19px;\">3.2.handle_mm_fault()</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">该函数的主要功能是为引发缺页的进程分配一个物理页框，它先确定与引发缺页的线性地址对应的各级页目录项是否存在，如何不存在则分进行分配。具体如何分配这个页框是通过调用handle_pte_fault()完成的。</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">int handle_mm_fault(struct mm_struct *mm, struct vm_area_struct *vma,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;unsigned long address, unsigned int flags)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">{</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pgd_t *pgd;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pud_t *pud;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pmd_t *pmd;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pte_t *pte;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pgd = pgd_offset(mm, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pud = pud_alloc(mm, pgd, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (!pud)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return VM_FAULT_OOM;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pmd = pmd_alloc(mm, pud, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (!pmd)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return VM_FAULT_OOM;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;pte = pte_alloc_map(mm, pmd, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (!pte)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return VM_FAULT_OOM;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return handle_pte_fault(mm, vma, address, pte, pmd, flags);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">}</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><span style=\"font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-size: 19px;\"><br></span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><span style=\"font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-size: 19px;\">3.3.handle_pte_fault()</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">该函数根据页表项pte所描述的物理页框是否在物理内存中，分为两大类：</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">请求调页：被访问的页框不再主存中，那么此时必须分配一个页框。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">写时复制：被访问的页存在，但是该页是只读的，内核需要对该页进行写操作，此时内核将这个已存在的只读页中的数据复制到一个新的页框中。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">用户进程访问由malloc()分配的内存空间属于第一种情况。对于请求调页，handle_pte_fault()仍然将其细分为三种情况：</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">static inline int handle_pte_fault(struct mm_struct *mm,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;struct vm_area_struct *vma, unsigned long address,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pte_t *pte, pmd_t *pmd, unsigned int flags)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">{</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (!pte_present(entry)) {</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (pte_none(entry)) {</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (vma-&amp;gt;vm_ops) {</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (likely(vma-&amp;gt;vm_ops-&amp;gt;fault))</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return do_linear_fault(mm, vma, address,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pte, pmd, flags, entry);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return do_anonymous_page(mm, vma, address,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pte, pmd, flags);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (pte_file(entry))</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return do_nonlinear_fault(mm, vma, address,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pte, pmd, flags, entry);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return do_swap_page(mm, vma, address,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pte, pmd, flags, entry);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">}</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">1.如果页表项确实为空(pte_none(entry))，那么必须分配页框。如果当前进程实现了vma操作函数集合中的fault钩子函数，那么这种情况属于基于文件的内存映射，它调用do_linear_fault()进行分配物理页框。否则，内核将调用针对匿名映射分配物理页框的函数do_anonymous_page()。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">2.如果检测出该页表项为非线性映射(pte_file(entry))，则调用do_nonlinear_fault()分配物理页。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">3.如果页框事先被分配，但是此刻已经由主存换出到了外存，则调用do_swap_page()完成页框分配。</p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">由malloc分配的内存将会调用do_anonymous_page()分配物理页框。</p><h4 style=\"color: rgb(0, 0, 0); border: 0px; font-size: 19px; margin: 1.33em 0px 0.2em; outline: 0px; padding: 0px; font-family: 'myriad pro', helveticaneue-light, 'helvetica neue light', 'lucida grande', 'helvetica neue', arial, 'lucida sans unicode', sans-serif; font-weight: normal; line-height: 20px;\">3.4.do_anonymous_page()</h4><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">此时，缺页异常处理程序终于要为当前进程分配物理页框了。它通过alloc_zeroed_user_highpage_movable()来完成这个过程。我们层层拨开这个函数的外衣，发现它最终调用了alloc_pages()。</p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">static int do_anonymous_page(struct mm_struct *mm, struct vm_area_struct *vma,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;unsigned long address, pte_t *page_table, pmd_t *pmd,</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;unsigned int flags)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">{</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (unlikely(anon_vma_prepare(vma)))</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto oom;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;page = alloc_zeroed_user_highpage_movable(vma, address);</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp;if (!page)</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;goto oom;</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">…… ……</span></p><p style=\"color: rgb(0, 0, 0); font-family: 'Microsoft Yahei', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti; font-size: 16px; line-height: 25px;\"><span style=\"font-size: 12px;\">}</span></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\"><br></p><p style=\"border: 0px; outline: 0px; padding: 0px; color: rgb(77, 77, 77); font-family: 'helvetica neue', arial, 'lucida grande', 'lucida sans unicode', 'microsoft yahei', sans-serif; line-height: 20px; margin-top: 0px; margin-bottom: 9px;\">经过这样一个复杂的过程，用户进程所访问的线性地址终于对应到了一块物理内存。</p>"
    }
  ]
}
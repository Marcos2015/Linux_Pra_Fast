{
  "title": "Linux中的EAGAIN含义",
  "cells": [
    {
      "type": "text",
      "data": "<embed id=\"xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd\" type=\"application/thunder_download_plugin\" height=\"0\" width=\"0\" style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><div class=\"multicntwrap\" style=\"color: rgb(95, 101, 108); font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53; font-size: 12px; line-height: normal;\"><div class=\"multicnt\"><br><p class=\"tdep clearfix nbw-act fc06\" style=\"zoom: 1; margin: 0px 0px 25px; padding: 0px; color: rgb(175, 216, 238); line-height: 20px;\"><span style=\"color: rgb(95, 101, 108); font-size: 16px; line-height: 28px;\">在Linux环境下开发经常会碰到很多错误(设置errno)，其中EAGAIN是其中比较常见的一个错误(比如用在非阻塞操作中)。</span></p></div></div><div class=\"bct fc05 fc11 nbw-blog ztag\" style=\"line-height: 28px; font-size: 16px; word-wrap: break-word; color: rgb(95, 101, 108); margin: 15px 0px; padding: 5px 0px; overflow: hidden; font-family: 'Hiragino Sans GB W3', 'Hiragino Sans GB', Arial, Helvetica, simsun, u5b8bu4f53;\">&nbsp;&nbsp;&nbsp; 从字面上来看，是提示再试一次。这个错误经常出现在当应用程序进行一些非阻塞(non-blocking)操作(对文件或socket)的时候。例如，以 O_NONBLOCK的标志打开文件/socket/FIFO，如果你连续做read操作而没有数据可读。此时程序不会阻塞起来等待数据准备就绪返回，read函数会返回一个错误EAGAIN，提示你的应用程序现在没有数据可读请稍后再试。<br>&nbsp;&nbsp;&nbsp; 又例如，当一个系统调用(比如fork)因为没有足够的资源(比如虚拟内存)而执行失败，返回EAGAIN提示其再调用一次(也许下次就能成功)。<br>Linux - 非阻塞socket编程处理EAGAIN错误<br>　在linux进行非阻塞的socket接收数据时经常出现Resource temporarily unavailable，errno代码为11(EAGAIN)，这是什么意思？<br>　这表明你在非阻塞模式下调用了阻塞操作，在该操作没有完成就返回这个错误，这个错误不会破坏socket的同步，不用管它，下次循环接着recv就可以。对非阻塞socket而言，EAGAIN不是一种错误。在VxWorks和Windows上，EAGAIN的名字叫做EWOULDBLOCK。<br>　另外，如果出现EINTR即errno为4，错误描述Interrupted system call，操作也应该继续。<br>　最后，如果recv的返回值为0，那表明连接已经断开，我们的接收操作也应该结束。<br>&nbsp; iReadSizeOnce=read(iOpenCom,RxBuf+iReadSize,1024);<br>&nbsp;&nbsp; &nbsp;if (iReadSizeOnce != ZERO)<br>&nbsp;&nbsp; &nbsp;{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (iReadSizeOnce != EAGAIN)<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;continue;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//stCComApiLog.LogError(\"读串口操作错误\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(FUN_ERROR);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}</div>"
    }
  ]
}
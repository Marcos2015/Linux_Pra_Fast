{
  "title": "The shared library soname/ linux动态库版本号管理",
  "cells": [
    {
      "type": "text",
      "data": "<br><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">下面引用一段英文原文</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">The shared library&nbsp;<em>soname</em></h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">In the earlier example, we embedded the actual name (the&nbsp;<strong><em style=\"color: rgb(0, 0, 139);\">real name</em></strong>) of the shared library in an executable file.</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">It is possible to create an&nbsp;<strong>alias</strong>, called the&nbsp;<strong><em style=\"color: rgb(0, 0, 139);\">soname</em></strong>, which will be&nbsp;<strong>embedded in an executable file instead of the&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em></strong>.&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">At run-time, the dynamic linker will use the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;when searching for the library.&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>The purpose of the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;is to provide a level of indirection.</strong></p><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">At run-time, executable can use a version of the shared library that is different (but compatible) from that against which it was linked.</span><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">The shared library&nbsp;<em>soname</em>&nbsp;(cont.)</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Here's how to use a&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>:</p><ol style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>Specify&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;when creating shared library:</strong><blockquote><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">gcc -fPIC -c -Wall -g mod1.c mod2.c mod3.c</strong> $ <strong style=\"color: rgb(0, 0, 80);\">gcc -shared -Wl,-soname,libbar.so -o libfoo.so \\\n           mod1.o mod2.o mod3.o</strong> </pre></div><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">-Wl,-soname,libbar.so</span>&nbsp;instructs linker to mark the shared library&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libfoo.so</span>&nbsp;with the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libbar.so</span>.</blockquote></li><li style=\"font-size: 22px;\"><strong>Create executable</strong>:<p><br></p><blockquote><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">gcc -g -Wall -o prog prog.c libfoo.so</strong> </pre></div>Linker detects that&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libfoo.so</span>&nbsp;contains the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libbar.so</span>&nbsp;and embeds the latter name inside the executable.</blockquote></li><li style=\"font-size: 22px;\"><strong>Run the program</strong>:<blockquote><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">LD_LIBRARY_PATH=. ./prog</strong> ./prog: error in loading shared libraries: \nlibbar.so: cannot open shared object file: \nNo such file or directory\n</pre></div>Dynamic linker cannot find anything named&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libbar.so</span>.</blockquote></li><li style=\"font-size: 22px;\"><strong>Create a symbolic link from the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;to the&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em>&nbsp;of the library</strong>:<blockquote><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">ln -s libfoo.so libbar.so</strong> $ <strong style=\"color: rgb(0, 0, 80);\">LD_LIBRARY_PATH=. ./prog</strong> Called mod1-x1\nCalled mod2-x2\n</pre></div></blockquote></li></ol><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>At run-time this link can point to a version of the library which is different from the version against which linking was performed</strong>.&nbsp;<br><br></p><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">The shared library&nbsp;<em>soname</em>&nbsp;(cont.)</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">This diagram shows the steps required in building a shared library, linking a program against it, and creating the required<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;symbolic link.</p><p align=\"center\" style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><img src=\"quiver-image-url/A88C035E1DB33ED861D8D863763AD6C1.png\" width=\"430\" height=\"482\">&nbsp;</p><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">The shared library&nbsp;<em>soname</em>&nbsp;(cont.)</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">This diagram shows the steps that occur as the program is executed:</p><p align=\"center\" style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><img src=\"quiver-image-url/25DB230E5BC6D4853660BB55D918E5B3.png\" width=\"445\" height=\"468\">&nbsp;</p><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Compatible Versus Incompatible Libraries</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>We probably need to change a library over time</strong>.</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">A new library version is said to be&nbsp;<strong>compatible</strong>&nbsp;with an existing library version if&nbsp;<em style=\"color: rgb(0, 0, 139);\">all</em>&nbsp;of the following conditions hold true:</p><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>The semantics of each function in the library remain unchanged</strong>.&nbsp;<br><br><ul><li>All functions continue to produce&nbsp;<strong>same effect on global variables and returned arguments</strong>.&nbsp;<br><br></li><li>All functions continue to return the&nbsp;<strong>same result values</strong>.&nbsp;<br><br></li><li>Performance improvements and bug fixes (perhaps resulting in closer conformance to specified behavior)&nbsp;<em style=\"color: rgb(0, 0, 139);\">are</em>&nbsp;compatible changes.&nbsp;<br><br></li></ul></li><li style=\"font-size: 22px;\"><strong>No function in the library API is removed.</strong><blockquote>New functions can be added.</blockquote></li><li style=\"font-size: 22px;\"><strong>The structures exported (i.e. allocated within and returned) by each function remain unchanged.</strong><blockquote>Possible exception: new items may be added to the end of the existing structure</blockquote></li></ul><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">If any of these conditions is violated, then the new library version is&nbsp;<strong>incompatible</strong>&nbsp;with the previous version.</p><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Shared library versions and naming</h1><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">If a new version of a shared library is&nbsp;<strong>compatible</strong>&nbsp;with an existing library, we can make a new&nbsp;<strong>minor version</strong>&nbsp;of the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\">If a new version of a shared library is&nbsp;<strong>incompatible</strong>&nbsp;with an existing library, we must make a new&nbsp;<strong>major version</strong>&nbsp;of the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Constraint</strong>: it must be possible to continue running programs requiring the older version of the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Solution</strong>: a&nbsp;<strong>naming convention</strong>&nbsp;is used for shared library&nbsp;<em style=\"color: rgb(0, 0, 139);\">real names</em>&nbsp;and&nbsp;<em style=\"color: rgb(0, 0, 139);\">sonames</em>.</li></ul><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Shared library versions and naming (cont.)</h1><h2 style=\"font-family: arial; color: red; font-size: 26px; line-height: normal;\"><em>Real name</em></h2><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Name of the file containing library code</strong>.</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Format:&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">lib<em style=\"color: rgb(0, 0, 139);\">name</em>.so.<em style=\"color: rgb(0, 0, 139);\">major-id</em>.<em style=\"color: rgb(0, 0, 139);\">minor-id</em></span></p><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>Major version identifier&nbsp;</strong>is a number which is sequentially incremented with each incompatible release of the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Minor version identifier</strong>&nbsp;distinguishes different compatible minor versions of a library within the same major version.<blockquote>Usually either a number, or two numbers separated by a dot, with first number identifying&nbsp;<strong>minor version</strong>, and second number indicating a patch level or&nbsp;<strong>revision number</strong>&nbsp;within the minor version.</blockquote></li></ul><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Examples:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre>libdemo.so.1.0.1\nlibdemo.so.1.0.2\nlibdemo.so.2.0.1\nlibreadline.so.4.0\n</pre><div><br></div></div><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Shared library versions and naming (cont.)</h1><h2 style=\"font-family: arial; color: red; font-size: 26px; line-height: normal;\"><em>soname</em></h2><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Format:&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">lib<em style=\"color: rgb(0, 0, 139);\">name</em>.so.<em style=\"color: rgb(0, 0, 139);\">major-id</em></span></p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;includes the&nbsp;<strong>same major version identifier</strong>&nbsp;as corresponding real name, but&nbsp;<strong>does not include minor version</strong>identifier.&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Purpose: run-time loading is dependent only on major version number of the library</strong>&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;is created as a&nbsp;<strong>symbolic link</strong>&nbsp;(usually in same directory as&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em>).</p><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>The&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;for each major library version points to most recent minor version</strong>.&nbsp;<br><br></li><li style=\"font-size: 22px;\">Since it is the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;(not the&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em>) that is embedded in executable by linker:&nbsp;<br><br><ol><li>At any time, we&nbsp;<strong>can change&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;symbolic link to point to a newer minor version</strong>.&nbsp;<br><br></li><li>Different&nbsp;<strong>major versions can co-exist</strong>&nbsp;and be accessed by the programs that require them.</li></ol></li></ul><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Examples of&nbsp;<em style=\"color: rgb(0, 0, 139);\">sonames</em>&nbsp;(along with the real names to which they might be symbolically linked):</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre>libdemo.so.1        -&gt; libdemo.so.1.0.2\nlibdemo.so.2        -&gt; libdemo.so.2.0.1\nlibreadline.so.4    -&gt; libreadline.so.4.0</pre></div><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Shared library versions and naming (cont.)</h1><h2 style=\"font-family: arial; color: red; font-size: 26px; line-height: normal;\"><em>Linker name</em></h2><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">Format:&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">lib<em style=\"color: rgb(0, 0, 139);\">name</em>.so</span>&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Purpose</strong>: allows us to&nbsp;<strong>construct version-independent link commands</strong>&nbsp;which automatically operate with the right (i.e. most up to date) version of the shared library.&nbsp;<br><br></li><li style=\"font-size: 22px;\">Created as a&nbsp;<strong>symbolic link</strong>&nbsp;to either&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em>&nbsp;or&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;of most recent major version of the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\">More convenient to have it point to&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>.&nbsp;<strong>Why?</strong>&nbsp;<br><br></li><li style=\"font-size: 22px;\">Examples:<div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>libdemo.so           -&gt; libdemo.so.2\nlibreadline.so       -&gt; libreadline.so.4\n</pre><div><br></div></div></li></ul><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Shared library versions and naming (cont.)</h1><h2 style=\"font-family: arial; color: red; font-size: 26px; line-height: normal;\">Relationships between shared library names</h2><img src=\"quiver-image-url/3BAF8375FA52793392D7C3BDCD6F83E7.png\" style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\" width=\"576\" height=\"117\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Creating Shared Libraries Using Standard Naming Conventions</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">We can create a shared library using standard naming conventions as follows:</p><ol style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">Create the shared library with&nbsp;<em style=\"color: rgb(0, 0, 139);\">real name</em>&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libdemo.so.1.0.1</span>&nbsp;and&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">libdemo.so.1</span>.<div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">gcc -fPIC -g -c -Wall mod1.c mod2.c mod3.c</strong> $ <strong style=\"color: rgb(0, 0, 80);\">gcc -shared -Wl,-soname,libdemo.so.1 -o libdemo.so.1.0.1 \\\n          mod1.o mod2.o mod3.o</strong> </pre></div></li><li style=\"font-size: 22px;\">Create symbolic links for the&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;and&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>:<div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">ln -s libdemo.so.1.0.1 libdemo.so.1</strong> $ <strong style=\"color: rgb(0, 0, 80);\">ln -s libdemo.so.1 libdemo.so</strong> $ <strong style=\"color: rgb(0, 0, 80);\">ls -l libdemo.so* | cut -c 1-11,55-</strong> <em style=\"color: rgb(0, 0, 144);\"># Verify the setup</em> lrwxrwxrwx  libdemo.so -&gt; libdemo.so.1\nlrwxrwxrwx  libdemo.so.1 -&gt; libdemo.so.1.0.1\n-rwxr-xr-x  libdemo.so.1.0.1\n</pre></div></li><li style=\"font-size: 22px;\">Build executable using the&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>:<div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">gcc -g -Wall -o ./prog prog.c -L. -ldemo</strong> </pre></div></li><li style=\"font-size: 22px;\">Run the program as usual:<div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px;\"><pre>$ <strong style=\"color: rgb(0, 0, 80);\">LD_LIBRARY_PATH=. ./prog</strong> Called mod1-x1\nCalled mod2-x2</pre></div></li></ol><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Installing Shared Libraries</h1><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">Production applications should not require the user to set&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">LD_LIBRARY_PATH</span>.&nbsp;<br><br></li><li style=\"font-size: 22px;\">Privileged users can&nbsp;<strong>install a shared library in one of the standard library directories</strong>:&nbsp;<br><br><ul><li><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/lib</span>&nbsp;- directory in which&nbsp;<strong>most standard libraries</strong>&nbsp;are installed&nbsp;<br><br></li><li><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/lib&nbsp;</span>- directory containing&nbsp;<strong>libraries required during system startup</strong>&nbsp;<br><br></li><li><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/local/lib&nbsp;</span>-&nbsp;<strong>non-standard or experimental libraries</strong>&nbsp;should be installed here;<blockquote>Also useful if&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/lib</span>&nbsp;is a network mount shared among multiple systems, and we want to install a library locally.</blockquote></li></ul><strong>or in one of the directories listed in&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue;\">/etc/ld.so.conf</span></strong>.【注：linux版本如有“<span style=\"line-height: normal;\">/etc/ld.so.conf.d目录</span>”也可以将my.conf这样的配置文件放在/etc/ld.so.conf.d目录下，&nbsp;my.conf的内容格式为 /ldddir/dir】&nbsp;<br><br></li><li style=\"font-size: 22px;\">After installation, symbolic links for&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;and&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>&nbsp;must be created, as relative links in the same directory.</li></ul><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">ldconfig(8)</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig(8)</span>&nbsp;addresses two potential problems with shared libraries:</p><ol style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>Speed</strong>: Shared libraries can reside in many different directories: it&nbsp;<strong>could take the dynamic linker a long time to search them</strong>.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Manually keeping&nbsp;<em style=\"color: rgb(0, 0, 139);\">sonames</em>&nbsp;symlinks up to date is error-prone</strong>&nbsp;as new versions of libraries are installed, or old versions are removed.</li></ol><br style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;solves these problems by:</p><ol style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><strong>Creating a cache file</strong>:<blockquote><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;<strong>searches for latest major library versions</strong>&nbsp;in:&nbsp;<br><br><ul><li>all of the directories specified in&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/etc/ld.so.conf</span></li><li><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/lib</span></li><li><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/lib</span></li></ul><br>and&nbsp;<strong>updates a cache file,&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue;\">/etc/ld.so.cache</span></strong>, to contain a list of the latest major library versions, and their locations.</blockquote><strong>Cache file is used by dynamic linker at run-time</strong>&nbsp;when resolving library names.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><strong>Automating the creation of&nbsp;<em style=\"color: rgb(0, 0, 139);\">sonames</em></strong>:&nbsp;<br><br><ul><li><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;examines (the latest minor version of) each major version of each library to find the embedded&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>, and&nbsp;<br><br></li><li>creates a relative symbolic link for this&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>, in the same directory as the library.&nbsp;<br><br></li></ul></li></ol><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>In order to work properly,&nbsp;<span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0);\">ldconfig</span>&nbsp;relies on the use of the standard naming convention for shared libraries (i.e.,<span class=\"filename\" style=\"font-family: courier; color: blue;\">lib<em style=\"color: rgb(0, 0, 139);\">name</em>.<em style=\"color: rgb(0, 0, 139);\">maj</em>.<em style=\"color: rgb(0, 0, 139);\">min</em></span>)</strong>&nbsp;</p><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">ldconfig(8) (cont.)</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Example - installing two different major versions of a library.</strong></p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">We copy both versions into&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/lib</span>:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">mv libdemo.so.1.0.1 libdemo.so.2.0.1 /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">cd /usr/lib</strong> </pre></div><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">We run&nbsp;<span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;to update the dynamic linker cache:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">ldconfig -v | grep libdemo</strong> libdemo.so.1 -&gt; libdemo.so.1.0.1 (changed)\n        libdemo.so.2 -&gt; libdemo.so.2.0.1 (changed)\n</pre></div><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">(We use&nbsp;<span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">grep</span>&nbsp;to eliminate other output from&nbsp;<span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>.)</li></ul><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Then we manually create the&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">ln -s libdemo.so.2 libdemo.so</strong> </pre></div><br style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><hr style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>To install a new 2.x minor version</strong>:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">mv libdemo.so.2.0.2 /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">cd /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">ldconfig -v | grep libdemo</strong> libdemo.so.1 -&gt; libdemo.so.1.0.1\n        libdemo.so.2 -&gt; libdemo.so.2.0.2 (changed)\n</pre></div><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">The&nbsp;<span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;command&nbsp;<strong>effectively also updates linker name</strong>...</p><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">ldconfig(8) (cont.)</h1><ul style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\"><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;should be run whenever a&nbsp;<strong>new library is installed</strong>&nbsp;or an&nbsp;<strong>existing library is updated or removed</strong>.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig -p</span>&nbsp;shows the current contents of the cache.&nbsp;<br></li></ul><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Upgrading Shared Libraries</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Note:&nbsp;</strong>A new major or minor version of a library can be installed, even while running programs are making use of an existing version.</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Example - upgrading a shared library with a new minor version (1.0.2)</strong>:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">gcc -fPIC -g -c -Wall mod1.c mod2.c mod3.c</strong> # <strong style=\"color: rgb(0, 0, 80);\">gcc -shared -Wl,-soname,libdemo.so.1 -o libdemo.so.1.0.2 \\\n        mod1.o mod2.o mod3.o</strong> # <strong style=\"color: rgb(0, 0, 80);\">mv libdemo.so.1.0.2 /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">ldconfig -v | grep libdemo</strong> libdemo.so.1 -&gt; libdemo.so.1.0.2 (changed)\n</pre></div><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">Assuming the&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>&nbsp;was already correctly set up, we do not need to modify it.</p><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><strong>Then upgrading to a new major version (2.0.1)</strong>:</p><div class=\"shell\" style=\"font-family: courier; color: rgb(80, 0, 80); margin-left: 40px; font-size: 22px; line-height: normal;\"><pre># <strong style=\"color: rgb(0, 0, 80);\">gcc -fPIC -g -c -Wall mod1.c mod2.c mod3.c</strong> # <strong style=\"color: rgb(0, 0, 80);\">gcc -shared -Wl,-soname,libdemo.so.2 -o libdemo.so.2.0.1 \\\n        mod1.o mod2.o mod3.o</strong> # <strong style=\"color: rgb(0, 0, 80);\">mv libdemo.so.2.0.1 /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">ldconfig -v | grep libdemo</strong> libdemo.so.1 -&gt; libdemo.so.1.0.2\n        libdemo.so.2 -&gt; libdemo.so.2.0.1 (changed)      \n# <strong style=\"color: rgb(0, 0, 80);\">cd /usr/lib</strong> # <strong style=\"color: rgb(0, 0, 80);\">ln -sf libdemo.so.2 libdemo.so</strong> </pre></div><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\"><span class=\"cmd\" style=\"font-family: courier; color: rgb(0, 100, 0); font-weight: bold;\">ldconfig</span>&nbsp;automatically creates a&nbsp;<em style=\"color: rgb(0, 0, 139);\">soname</em>&nbsp;symbolic link, but we must manually update the&nbsp;<em style=\"color: rgb(0, 0, 139);\">linker name</em>&nbsp;symbolic link.&nbsp;</p><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><h1 style=\"color: rgb(0, 0, 0); font-family: arial; font-size: 32px; line-height: normal;\">Finding Shared Libraries at Run-time</h1><p style=\"color: rgb(0, 0, 0); font-size: 22px; font-family: Simsun; line-height: normal;\">The dynamic linker searches for shared libraries in the following order:</p><ol style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; line-height: normal;\"><li style=\"font-size: 22px;\">If&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">LD_LIBRARY_PATH</span>&nbsp;is defined, then each of the colon-separated directories listed in its value is searched in turn.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/etc/ld.so.cache</span>&nbsp;is checked to see if it contains an entry for the library.&nbsp;<br><br></li><li style=\"font-size: 22px;\"><span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/lib</span>&nbsp;and&nbsp;<span class=\"filename\" style=\"font-family: courier; color: blue; font-weight: bold;\">/usr/lib</span>&nbsp;are searched (in that order).</li></ol><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">英文通俗易懂，大致总结一下：</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">1.gcc编译编译选项-soname 为实际库文件（libsoname.so.major.minor）生成的别名,这个别名</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major,别名</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">存放在</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">实际</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">库文件的头部，执行readelf -d&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libsoname.so.major.minor命令可以看到“0x0000000e (SONAME) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Library soname: [<span style=\"line-height: normal;\">libname.so.major</span>]”</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">2.执行ldconfig -n /current_dir命令，ldconfig会去读取</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">/curr</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">ent_dir目录下所有动态库文件中（SONAME）信息，并生成指向各动态库文件的链接文件，链接文件的名字为相应</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">（SONAME）字段值（<span style=\"line-height: normal;\">libname.so.major</span>）。</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">3.如果/current_dir被加入到/etc/ld.so.conf或/etc/ld.so.conf.d/中，则执行ldconfig -v命令可生成/current_dir目录下所有的SONAME链接文件并查看繁多的链接信息。</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">4.连接器(linker)通过SONAME字段值（</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">）在用户指定的路径查找链接</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">。</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">5.手动指定</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so --&gt;&nbsp;<span style=\"line-height: normal;\">libname.so.major</span></span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">，控制程序(progam)链接的</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">实际</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">库文件(</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libsoname.so.major.minor</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">)，在/current_dir目录下我们会看到形如，</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">&nbsp;--&gt;&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major<br></span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">&nbsp;--&gt;&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major.minor<br>的链接，其中仅</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">libname.so.major.minor为规则文件。<br><br>6.动态库的主、次版本号利用如下的一套约定即可实现动态库的版本管理。<br>a.新生成库<span style=\"line-height: normal;\">实际文件</span><span style=\"line-height: normal;\">libname.so.major.minor</span><span style=\"line-height: normal;\"></span>，当</span><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">库中函数接口未变化(更新不影响相关模块)主版本号major不改变，次版本号 &nbsp; &nbsp;&nbsp;minor加1。</span><br style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\"><span style=\"color: rgb(0, 0, 0); font-family: Arial; font-size: 14px;\">b.</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">当</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">库中函数接口变化(更新影响相关模块</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">)主版本号major加1</span><span style=\"color: rgb(0, 0, 0); font-family: Simsun; font-size: 22px; line-height: normal;\">，次版本号从0开始增加。<br>c.当出现新旧版本共存情况<br><span style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;libname.so.1</span><span style=\"line-height: normal;\">&nbsp;--&gt;&nbsp;</span><span style=\"line-height: normal;\">libname.so.1.2<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"line-height: normal;\">libname.so.2</span><span style=\"line-height: normal;\">--&gt;&nbsp;</span><span style=\"line-height: normal;\">libname.so.2.0</span><br>时需用户通过手动建立链接(<span style=\"line-height: normal;\">libname.so链接<span style=\"line-height: normal;\">libname.so.1还是<span style=\"line-height: normal;\">libname.so.2</span></span></span>)，决定程序链接动态库。<br><br>7.实际项目中可通过Makefile文件管理项目的动态库版本，具体实施过程待实践。</span></span>"
    }
  ]
}
{
  "title": "《编写高质量代码：改善C++程序的150个建议》:建议9：防止重复包含头文件",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"brief bgF8F8F8\"><div class=\"brieftext\"><p class=\"f14 green\">《编写高质量代码：改善C++程序的150个建议》本书是C++程序员进阶修炼的必读之作，包含的全部都是C++编码的最佳实践，从语法、编码规范和编程习惯、程序架构和设计思想等三大方面对C++程序和设计中的疑难问题给出了经验性的解决方案，为C++程序员编写更高质量的C++代码提供了150条极为宝贵的建议。本节为大家介绍建议9：防止重复包含头文件。</p><p class=\"ad\">AD：<a href=\"http://down.51cto.com/zt/5551\" target=\"_blank\" style=\"text-decoration: none;\">2013云计算架构师峰会课程资料下载</a></p></div></div><div class=\"content bgF8F8F8 f14\"><div id=\"content\"><p style=\"font-family: Times; font-size: medium; line-height: normal;\"></p><p style=\"font-family: Times; font-size: medium; line-height: normal;\"><strong>建议9：防止重复包含头文件</strong></p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">假设，我们的工程中有如下三个文件：a.h、b.h和c.cpp，其中b文件中包含了a.h，c文件中又分别包含了a.h和b.h两个文件，如图1-1所示。</p><table class=\"ln\" cellspacing=\"0\" bordercolordark=\"#ffffff\" align=\"center\" bgcolor=\"#ddddd\" bordercolorlight=\"#999999\" border=\"1\" style=\"color: rgb(0, 0, 0); font-family: Times;\"><tbody><tr><td bgcolor=\"#ffffff\"><a href=\"http://images.51cto.com/files/uploadimg/20120215/123313489.jpg\" target=\"_blank\"><img class=\"fit-image\" height=\"219\" alt=\"\" src=\"quiver-image-url/B2B6A6CC8B32366FD35B85DC5D2A5FC5.jpg\" width=\"486\" border=\"0\"></a>&nbsp;<a href=\"http://book.51cto.com/files/uploadimg/20060921/153223104.gif\" target=\"_blank\"></a></td></tr><tr><td class=\"it\" align=\"middle\" bgcolor=\"#dddddd\">图1-1　工程文件示例</td></tr></tbody></table><p style=\"font-family: Times; font-size: medium; line-height: normal;\">在编译整个工程时，编译器会出现“multiple definition of”错误。原因在于a.h文件被包含了两次。为了避免同一个文件被包含多次，C/C++中有两种处理方式，一种是#ifndef方式，另一种是#pragma once方式。</p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">方式1：<br></p><pre style=\"line-height: normal;\"><ol class=\"dp-xml\"><li class=\"alt\">#ifndef&nbsp;__SOMEFILE_H__ &nbsp;</li><li>#define&nbsp;__SOMEFILE_H__ &nbsp;</li><li class=\"alt\">...&nbsp;...&nbsp;//&nbsp;声明、定义语句 &nbsp;</li><li>#endif&nbsp;</li></ol></pre><p style=\"font-family: Times; font-size: medium; line-height: normal;\"></p><span style=\"font-family: Times; font-size: medium; line-height: normal;\">方式2：</span><pre style=\"line-height: normal;\"><ol class=\"dp-xml\"><li class=\"alt\">#pragma&nbsp;once &nbsp;</li><li>...&nbsp;...&nbsp;//&nbsp;声明、定义语句&nbsp;</li></ol></pre><p style=\"font-family: Times; font-size: medium; line-height: normal;\"></p><span style=\"font-family: Times; font-size: medium; line-height: normal;\">C/C++语言标准支持第一种方式。这种方式不仅可以保证同一个文件不会被包含多次，也能保证内容完全相同的两个文件不会被同时包含。当然，其缺点就是如果一不小心在不同头文件中定义了相同的宏名，造成了宏名“撞车”，那就可能会导致明明看到头文件存在，编译器却硬说找不到声明，这确实会令人非常恼火。为了避免宏名“撞车”，保证宏的唯一性，建议按照Google公司建议的那样，头文件基于其所在项目源代码树的全路径而命名。命名格式为：</span><pre style=\"line-height: normal;\"><ol class=\"dp-xml\"><li class=\"alt\"><span class=\"tag\">&lt;</span><span class=\"tag-name\">PROJECT</span><span class=\"tag\">&gt;</span>_<span class=\"tag\">&lt;</span><span class=\"tag-name\">PATH</span><span class=\"tag\">&gt;</span>_<span class=\"tag\">&lt;</span><span class=\"tag-name\">FILE</span><span class=\"tag\">&gt;</span>_H_&nbsp;</li></ol></pre><p style=\"font-family: Times; font-size: medium; line-height: normal;\">由于编译器在每次编译时都需要打开头文件才能判定是否有重复定义，因此在编译大型项目时，ifndef会使编译时间相对较长。</p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">#pragma once方式一般由编译器提供，它保证同一个文件不会被包含多次。这里所说的“同一个文件”指的是物理上的一个文件，而不是指内容相同的两个文件。#pragma once声明只针对文件，而不能针对某一文件中的一段代码。这种方式避免了因想方设法定义一个独一无二的宏而产生的烦恼；另外，针对大型项目的编译速度也有了提升。但是这种方式因为不受C/C++语言标准支持，所以受到了编译器的限制，它在兼容性方面表现得不是很好。因此很多程序员为了代码的兼容性，宁肯降低一些编译性能，而选择遵循C/C++标准，采用第一种方式。</p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">注意　针对#pragma once，GCC已经取消了对其的支持，而微软的VC++却仍在坚持。</p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">请记住：</p><p style=\"font-family: Times; font-size: medium; line-height: normal;\">为了避免重复包含头文件，建议在声明每个头文件时采用“头文件卫士”加以保护，比如采用如下的形式：</p><pre style=\"line-height: normal;\"><ol class=\"dp-xml\"><li class=\"alt\">#ifndef&nbsp;_PROJECT_PATH_FILE_H_ &nbsp;</li><li>#define&nbsp;_PROJECT_PATH_FILE_H_ &nbsp;</li><li class=\"alt\">...&nbsp;...&nbsp;//&nbsp;声明、定义语句 &nbsp;</li><li>#endif&nbsp;</li><li></li></ol></pre><p style=\"font-family: Times; font-size: medium; line-height: normal;\"></p></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span>"
    }
  ]
}
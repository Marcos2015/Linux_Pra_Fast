{
  "title": "char代表有符号还是无符号？",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"position: relative;\"><div style=\"color: rgb(0, 0, 0); line-height: 1.7; font-size: 14px; font-family: arial;\"><div class=\"articalTitle\" style=\"clear: both; line-height: 20px; padding-bottom: 10px; color: rgb(70, 70, 70); font-family: Verdana, 宋体, sans-serif; font-size: 12px; background-color: rgb(188, 211, 229);\"><span style=\"font-family: simsun; font-size: 14px; word-wrap: normal; word-break: normal; margin-right: 25px;\"><strong>原文地址：</strong><a target=\"_blank\" href=\"http://blog.sina.com.cn/s/blog_5f07c2390100zi64.html\" title=\"char代表有符号还是无符号？\" style=\"text-decoration: none; color: rgb(62, 115, 160);\">char代表有符号还是无符号？</a></span><span style=\"font-family: simsun; font-size: 14px; word-wrap: normal; word-break: normal;\"><strong>作者：</strong><a href=\"http://blog.sina.com.cn/u/1594343993\" title=\"若竹\" target=\"_blank\" style=\"text-decoration: none; color: rgb(62, 115, 160);\">若竹</a></span></div><div id=\"sina_keyword_ad_area2\" class=\"articalContent  \" style=\"width: 690px; clear: both; padding-top: 18px; line-height: 21px; padding-bottom: 30px; word-wrap: normal; word-break: normal; overflow: hidden; font-family: simsun; color: rgb(70, 70, 70); background-color: rgb(188, 211, 229);\"><div class=\"blogzz_abstract borderc\" style=\"border-top-width: 1px; border-style: dotted none none; border-top-color: rgb(204, 204, 204); padding-top: 15px; margin: 20px 0px;\"><div class=\"blogzz_acon\"><p style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal;\">arm-linux-gcc 规定 char 为 unsigned char 。</p><p style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal;\"><font style=\"word-wrap: normal; word-break: normal;\">不带signed或unsigned关键字的char型 无符号数? 有符号数? C标准规定为 Implementation Defined（由实作环境决定）。</font></p><p style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal;\">gcc规定为signed char</p><p style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal;\">以前总以为 char 代表有符号，而 unsigned char 代表无符号。现在才知道如果换做 short 或 int ，这样理解都没问题，因为c标准明确定义了。但是，唯独 char 不能这样理解，因为c标准中对此是 Impementation Defined，就是未明确定义，由具体的编译器明确定义。<br></p><p style=\"margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal;\">为了代码移植，一定不要用 char ！<br></p><div>我以前总以为 char 代表有符号，而 unsigned char 代表无符号。现在才知道如果换做 short 或 int ， 这样理解都没问题，因为c标准明确定义了。但是，唯独 char 不能这样理解，因为c标准中对此是 Impementation Defined，就是未明确定义，由具体的编译器明确定义。<br><br>vc编译器、x86上的 gcc 都把 char 定义为 signed char；而 arm-linux-gcc 却把 char 定义为 unsigned char 。这样一来，在代码移植上就会出现问题。举个最简单的例子：<br><br>char a = 0xb6; if ( a == 0xb6) puts(\"hello world !\");<br><br>在vc 或 x86的gcc 上，都是不会打印出 hello world! 的。用 arm-linux-gcc 编译，在arm板上，是可以打印出hello world ! 的。是不是很神奇啊???&nbsp;<wbr>&nbsp;我们再变化一下：<br><br>char a = 0xb6;<br>short b = 0xb600;<br>int c = 0xb6000000;<br><br>if ( a == 0xb6) puts(\"a\");<br>if ( b == 0xb600) puts(\"b\");<br>if ( c == 0xb6000000) puts(\"c\");<br><br>在vc 或 x86的gcc 上，只会打印出 c 。用 arm-linux-gcc 编译，在arm板上，是可以打印出 a 和 c 。是不是发现了什么了呢？<br><br>首先，介绍 Integer Promotion 。通俗点说，c在处理整型（char short int）时，都会自动提升为int（如果int范围不够，则提升成 unsigned int）。比如&nbsp;<wbr>&nbsp;“a == 0xb6”，首先0xb6会当一个int来处理，变为0x000000b6（关于常量，后面还会仔细说明）。a 会提升为int ，假如 char 被定义为有符合的，那么 a 为负数，因为最高位为1，所以 a会提升为 0xffffffb6。假如 char 被定义为无符号的，那么a会提升为 0x000000b6 。<br><br>即，在vc 或 x86的gcc 上，a == 0xb6 会变为 0xffffffb6 == 0x000000b6 ，而在 arm-linux-gcc 上，变为 0x000000b6 == 0x000000b6。<br><br>对于 short，因为c标准明确规定 不加关键字，就代表有符号数。所以，无论在什么编译器上 b == 0xb600 都会变成 0xffffb600 == 0x0000b600 。<br><br>对于 int，本身是int，也就不用 Integer Promotion 了，所以&nbsp;<wbr>&nbsp;c == 0xb60000 中 ，c不做任何处理，直接从内存中读出来，即&nbsp;<wbr>&nbsp;0xb60000 == 0xb60000。<br><br>最后，简单说一下常量。我后面会转帖一部分资料，有兴趣可以看看，我现在只说用八进制（0开头）或十六进制（0x开头）表示的常量，他们都会当成无符号数处理！另外像 char a = 0xb6； 这句就有两个 Implementation Defined，一个是char带不带符号，另外一个是，假如char为有符合， 0xb6 会当int 0x000000b6 处理，把这个int 变为 有符合的 char 有溢出，会有问题，0xb6本为正数，赋值到a中却变为负数，具体要怎么处理，c对此也是 Implementation Defined。<br><div>&nbsp;<wbr>扩展阅读：<a href=\"http://learn.akae.cn/media/ch15s01.html\" style=\"text-decoration: none; color: rgb(62, 115, 160);\">http://learn.akae.cn/media/ch15s01.html</a></div></div></div></div></div></div><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><br style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span title=\"neteasefooter\" style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px;\"><span id=\"netease_mail_footer\"><div id=\"netease_mail_footer\"><div style=\"border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); padding: 10px 5px; color: rgb(102, 102, 102); line-height: 22px;\">来自网易手机号码邮箱<a id=\"mobile_set\" sys=\"1\" log=\"1\" logid=\"free_sms_20120504\" href=\"http://shouji.163.com/\" target=\"_blank\" style=\"color: rgb(0, 0, 255);\">了解更多</a></div></div></span></span><div style=\"clear: both;\"></div></div>"
    }
  ]
}